"use strict";(self.webpackChunk_upscalerjs_docs=self.webpackChunk_upscalerjs_docs||[]).push([[6885],{54852:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(49231);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=l(r),d=a,h=m["".concat(c,".").concat(d)]||m[d]||u[d]||o;return r?n.createElement(h,i(i({ref:t},p),{},{components:r})):n.createElement(h,i({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},42203:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(74011),a=(r(49231),r(54852));const o={title:"constructor",sidebar_position:0,sidebar_label:"constructor"},i="constructor",s={unversionedId:"documentation/api/constructor",id:"documentation/api/constructor",title:"constructor",description:"Instantiates an instance of UpscalerJS.",source:"@site/docs/documentation/api/constructor.md",sourceDirName:"documentation/api",slug:"/documentation/api/constructor",permalink:"/documentation/api/constructor",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"constructor",sidebar_position:0,sidebar_label:"constructor"},sidebar:"documentationSidebar",previous:{title:"API",permalink:"/documentation/api/"},next:{title:"execute",permalink:"/documentation/api/execute"}},c={},l=[{value:"Example",id:"example",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2}],p={toc:l};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"constructor"},"constructor"),(0,a.kt)("p",null,"Instantiates an instance of UpscalerJS."),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("p",null,"[object Object]"),(0,a.kt)("small",{className:"gray"},"Defined in ",(0,a.kt)("a",{target:"_blank",href:"https://github.com/thekevinscott/UpscalerJS/tree/main/packages/upscalerjs/src/upscaler.ts#L78"},"upscaler.ts:78")),(0,a.kt)("h2",{id:"parameters"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"opts"),":",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"model?"),":  - Defaults to ",(0,a.kt)("a",{parentName:"li",href:"/models/available/default-model"},(0,a.kt)("inlineCode",{parentName:"a"},"@upscalerjs/default-model")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"  - **path**: `string`  - Path to a model.json file.\n- **modelType**: [`ModelType`](https://github.com/thekevinscott/UpscalerJS/tree/main/packages/core/src/index.ts#L20)  - The type of the model. Can be 'graph' or 'layer'. Defaults to 'layer'\n- **scale?**: `number`  - The scale of the model. For super resolution models, should match the scale at which the model was trained.\n- **preprocess?**: [`PreProcess`](https://github.com/thekevinscott/UpscalerJS/tree/main/packages/core/src/index.ts#L22)  - A function that processes the input image before feeding to the model. For example, you can use this function if you need to regularize your input.\n- **postprocess?**: [`PostProcess`](https://github.com/thekevinscott/UpscalerJS/tree/main/packages/core/src/index.ts#L23)  - A function that processes the input image after being run through model inference. For example, you may need to convert floats to 0-255 integers.\n- **inputRange?**: [`Range`](https://github.com/thekevinscott/UpscalerJS/tree/main/packages/core/src/index.ts#L16)  - Two numbers denoting the range in which the model expects number to be in the range of. Defaults to [0, 255].\n- **outputRange?**: [`Range`](https://github.com/thekevinscott/UpscalerJS/tree/main/packages/core/src/index.ts#L16)  - Two numbers denoting the range in which the model is expected to output its predictions. Numbers can still fall outside of this range, but \n")),"UpscalerJS will use the range to clip the values appropriately. Defaults to ","[0, 255]",".",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"- **divisibilityFactor?**: `number`  - A number denoting whether and how an image should be divisible. For instance, a model may only operate on images that are even (divisible by 2), in\n")),"which case this would be ",(0,a.kt)("inlineCode",{parentName:"li"},"2"),". Only square sizes are supported for now."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"warmupSizes?"),": ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/thekevinscott/UpscalerJS/tree/main/packages/upscalerjs/src/types.ts#L17"},(0,a.kt)("inlineCode",{parentName:"a"},"WarmupSizes")))))),(0,a.kt)("h2",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Upscaler")," - an instance of an UpscalerJS class."))}u.isMDXComponent=!0}}]);