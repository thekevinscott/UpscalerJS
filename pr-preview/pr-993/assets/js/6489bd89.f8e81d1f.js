"use strict";(self.webpackChunk_upscalerjs_docs=self.webpackChunk_upscalerjs_docs||[]).push([[40],{54852:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(49231);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),p=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(r),m=a,f=d["".concat(i,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(f,s(s({ref:t},c),{},{components:r})):n.createElement(f,s({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var p=2;p<o;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},72391:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=r(74011),a=(r(49231),r(54852));const o={category:"Browser",hide_table_of_contents:!0,sidebar_position:304,parent:"implementations",code_embed:null},s="Cloudflare Worker",l={unversionedId:"documentation/guides/browser/implementations/cloudflare-worker",id:"documentation/guides/browser/implementations/cloudflare-worker",title:"Cloudflare Worker",description:"View this page on the UpscalerJS website",source:"@site/docs/documentation/guides/browser/implementations/cloudflare-worker.md",sourceDirName:"documentation/guides/browser/implementations",slug:"/documentation/guides/browser/implementations/cloudflare-worker",permalink:"/documentation/guides/browser/implementations/cloudflare-worker",draft:!1,tags:[],version:"current",sidebarPosition:304,frontMatter:{category:"Browser",hide_table_of_contents:!0,sidebar_position:304,parent:"implementations",code_embed:null},sidebar:"documentationSidebar",previous:{title:"React Integration",permalink:"/documentation/guides/browser/implementations/react"},next:{title:"Node.js Example",permalink:"/documentation/guides/node/nodejs"}},i={},p=[{value:"Getting Started",id:"getting-started",level:2},{value:"Code",id:"code",level:2}],c={toc:p};function u(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"cloudflare-worker"},"Cloudflare Worker"),(0,a.kt)("a",{class:"docs-link",href:"https://upscalerjs.com/documentation/guides/browser/implementations/cloudflare"},"View this page on the UpscalerJS website"),(0,a.kt)("p",null,"Demonstrates how to integrate UpscalerJS in a Cloudflare worker."),(0,a.kt)("h2",{id:"getting-started"},"Getting Started"),(0,a.kt)("p",null,"This guide requires running the example locally."),(0,a.kt)("p",null,"Clone the UpscalerJS repo:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/thekevinscott/UpscalerJS.git\n")),(0,a.kt)("p",null,"And navigate to the cloudflare worker example folder and install the dependencies:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd UpscalerJS/examples/cloudflare-worker\nnpm install\n")),(0,a.kt)("p",null,"Then, in one terminal window, start up the browser frontend with:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm run browser:start\n")),(0,a.kt)("p",null,"And in another, the local cloudflare worker backend:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm run wrangler:start\n")),(0,a.kt)("p",null,(0,a.kt)("img",{src:r(29913).Z,width:"1620",height:"583"})),(0,a.kt)("h2",{id:"code"},"Code"),(0,a.kt)("p",null,"A Cloudflare Worker, like a web worker, has a subset of browser functionality. Specifically, it lacks the ability to work with ",(0,a.kt)("inlineCode",{parentName:"p"},"HTMLImageElement"),"s or ",(0,a.kt)("inlineCode",{parentName:"p"},"HTMLCanvasElement"),"s natively."),(0,a.kt)("p",null,"What this means for us is that we must deal exclusively with tensors, and serialize them appropriately."),(0,a.kt)("p",null,"In the browser, we can load an image using ",(0,a.kt)("inlineCode",{parentName:"p"},"tf"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// browser script\nconst pixels = tf.browser.fromPixels(img)\n")),(0,a.kt)("p",null,"We can't send a tensor directly in a fetch call, as it cannot be natively serialized to JSON. We instead need to serialize it ourselves. We need to provide the raw data values, along with the shape of the tensor:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// browser script\nconst body = JSON.stringify({\n  data: Array.from(await pixels.data()),\n  shape: pixels.shape,\n})\nconst response = await fetch(CLOUDFLARE_URL, { //CLOUDFLARE_URL is the URL of the cloudflare worker\n  method: 'POST',\n  body,\n})\n")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"The ",(0,a.kt)("inlineCode",{parentName:"p"},"@upscalerjs/esrgan-slim")," model works well within the free tier of Cloudflare Workers, but for larger models (like ",(0,a.kt)("inlineCode",{parentName:"p"},"@upscalerjs/esrgan-large"),") you'll want to upgrade to a paid plan.")),(0,a.kt)("p",null,"In our Cloudflare Worker, we instantiate UpscalerJS as normal:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// cloudflare-worker script\nimport * as tf from '@tensorflow/tfjs'\nimport Upscaler from 'upscaler'\nimport model from '@upscalerjs/esrgan-slim/4x'\nconst upscaler = new Upscaler({\n  model,\n})\n")),(0,a.kt)("p",null,"Then we need to unserialize our tensor:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// cloudflare-worker script\nasync function handleRequest(request) {\n  const { data, shape } = await request.json()\n  const tensor = tf.tensor(data, shape)\n  ...\n")),(0,a.kt)("p",null,"We pass this tensor to our UpscalerJS instantiation, ",(0,a.kt)("em",{parentName:"p"},"making sure")," to also set the output to ",(0,a.kt)("inlineCode",{parentName:"p"},"tensor"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// cloudflare-worker script\nconst upscaledSrc = await upscaler.upscale(input, {\n  output: 'tensor',\n})\n")),(0,a.kt)("p",null,"We then serialize our tensor again for response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// cloudflare-worker script\nconst response = {\n  data: Array.from(upscaledSrc.dataSync()),\n  shape: upscaledSrc.shape,\n}\nreturn new Response(JSON.stringify(response), init)\n")),(0,a.kt)("p",null,"And back in the browser, we can unserialize that tensor and work with it:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// browser script\nconst { data, shape } = await response.json()\nconst tensor = tf.tensor(data, shape)\nawait tf.browser.toPixels(tensor, canvas)\n")))}u.isMDXComponent=!0},29913:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/example-walkthrough-3a17fccf272a5944669d748534d8d83f.gif"}}]);