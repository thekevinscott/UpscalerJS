/*! For license information please see 5681.6f14b483.js.LICENSE.txt */
(self.webpackChunk_upscalerjs_docs=self.webpackChunk_upscalerjs_docs||[]).push([[5681],{22439:(e,t,n)=>{"use strict";n.d(t,{JL:()=>s,Zu:()=>r});class s{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class r{refCount(e){return a("refCount")}incRef(e){return a("incRef")}timerAvailable(){return!0}time(e){return a("time")}read(e){return a("read")}readSync(e){return a("readSync")}readToGPU(e,t){return a("readToGPU")}numDataIds(){return a("numDataIds")}disposeData(e,t){return a("disposeData")}write(e,t,n){return a("write")}move(e,t,n,s,r){return a("move")}createTensorFromGPUData(e,t,n){return a("createTensorFromGPUData")}memory(){return a("memory")}floatPrecision(){return a("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return a("dispose")}}function a(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},80662:(e,t,n)=>{"use strict";function s(e,t,n){const s=function(e,t,n){return function(e,t,n){let s=0,r=e.length,a=0,i=!1;for(;s<r;){a=s+(r-s>>>1);const o=n(t,e[a]);o>0?s=a+1:(r=a,i=!o)}return i?s:-s-1}(e,t,n||r)}(e,t,n),a=s<0?-(s+1):s;e.splice(a,0,t)}function r(e,t){return e>t?1:e<t?-1:0}function a(e,t,n,s,r){return u(e,t,n,s,r,0)}function i(e,t,n,s,r,a){return u(e,t,n,s,r,0,!1,a,!0)}function o(e,t,n,s,r,a){return u(e,t,n,s,r,a,!0)}function u(e,t,n,r,a,i,o=!1,u=!1,p=!1){const d=[];for(let s=0;s<t.length;s++)t[s]>a&&d.push({score:t[s],boxIndex:s,suppressBeginIndex:0});d.sort(h);const f=i>0?-.5/i:0,m=[],g=[];for(;m.length<n&&d.length>0;){const t=d.pop(),{score:n,boxIndex:i,suppressBeginIndex:o}=t;if(n<a)break;let u=!1;for(let s=m.length-1;s>=o;--s){const n=l(e,i,m[s]);if(n>=r){u=!0;break}if(t.score=t.score*c(r,f,n),t.score<=a)break}t.suppressBeginIndex=m.length,u||(t.score===n?(m.push(i),g.push(t.score)):t.score>a&&s(d,t,h))}const y=m.length,b=n-y;u&&b>0&&(m.push(...new Array(b).fill(0)),g.push(...new Array(b).fill(0)));const x={selectedIndices:m};return o&&(x.selectedScores=g),p&&(x.validOutputs=y),x}function l(e,t,n){const s=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),a=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),u=Math.max(s[1],s[3]),l=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),p=Math.max(r[1],r[3]),d=(o-a)*(u-i),f=(h-l)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(a,l),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(u,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function c(e,t,n){const s=Math.exp(t*n*n);return n<=e?s:0}function h(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{GP:()=>a,qP:()=>i,pA:()=>o})},14810:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});var s=n(79410);function r(e,t){const n=[];for(let s=0;s<t.length;s++)t[s]&&n.push(s);const r=(0,s.f)(e,"int32"),a=(0,s.f)([n.length,e.length],"int32");for(let s=0;s<n.length;s++){const t=r.indexToLoc(n[s]),i=s*e.length;a.values.set(t,i)}return a.toTensor()}},47672:(e,t,n)=>{"use strict";n.d(t,{BV:()=>w,wv:()=>x});var s=n(22439),r=n(75658),a=n(79700),i=n(65853),o=n(74300),u=n(19164),l=n(80884),c=n(50756);class h{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new d)}profileKernel(e,t,n){let s;const a=()=>{s=n()};let i;const o=l.now();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(a);else{a();for(const e of s)e.dataSync();i=Promise.resolve({kernelMs:l.now()-o})}if((0,r.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let r=0;r<s.length;r++){const t=s[r];t.data().then((n=>{p(n,t.dtype,e)}))}return{kernelName:e,outputs:s,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),s,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function p(e,t,n){if("float32"!==t)return!1;for(let s=0;s<e.length;s++){const t=e[s];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class d{logKernelProfile(e,t,n,s,r,a){const i="number"==typeof s?c.oj(`${s}ms`,9):s.error,o=c.oj(e,25),u=t.rank,l=t.size,h=c.oj(t.shape.toString(),14);let p="";for(const c in r){const e=r[c];if(null!=e){const n=e.shape||t.shape,s=n.length;p+=`${c}: ${s}D ${s>0?n:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${h}\t%c${l}\t%c${p}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var f=n(39608),m=n(54699);function g(e){return null!=e.kernelName}class y{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class b{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new y}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(u.Z(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new h(this.backendInstance),!0}setupRegisteredKernels(){(0,o.tr)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,o.tr)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof s.Zu||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,s=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,u.Z(`Initialization of backend ${e} failed`),u.Z(n.stack||n.message)),!1)));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}}catch(n){return u.Z(`Initialization of backend ${e} failed`),u.Z(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,s=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(s){throw t(),s}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(e){const t=w.runKernel(i.iJz,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return w.runKernel(i.RFZ,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=(0,o.pI)(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const s=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-t-r-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;let i,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:r,attrs:a}=e;null==this.backendName&&this.backend;const l=(0,o.pI)(t,this.backendName);c.hu(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();u=l.kernelFunc({inputs:r,attrs:a,backend:this.backend});const i=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const o=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(s){const e=this.getTensorsForGradient(t,r,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,r=e=>{s&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();u=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:h,attrs:p}=e,d=g(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(l,h,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=i()})),s&&this.addTapeNode(l,h,t,d,n,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map((e=>null!=h[e]?h[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const s=(0,o.uk)(e);if(null!=s){const e=s.inputsToSave||[],r=s.outputsToSave||[];let a;s.saveAllInputs?(c.hu(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>r[t]));return a.concat(i)}return[]}makeTensor(e,t,n,s){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;"string"===n&&c.HD(e[0])&&(r=e.map((e=>l.encodeString(e))));const a=s.write(r,t,n),i=new f.es(t,n,a,this.nextTensorId());if(this.trackTensor(i,s),"string"===n){const e=this.state.tensorInfo.get(a),t=(0,c.Ub)(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,s){const r={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,s)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:s,dtype:r}=e,a=new f.es(s,r,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),null!=s&&s!==e.dtype&&(e=e.cast(s));const r=new f._w(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*c.bT(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof f._w||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*c.bT(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,s,r,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},u=(0,o.uk)(e);null!=u&&(s=u.gradFunc),null!=s&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],s=c.wT(e.size,e.dtype);return this.makeTensor(s,e.shape,e.dtype)}return e})),s(e.length>1?e:e[0],r,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,m.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let r=0;r<this.state.activeScope.track.length;r++){const e=this.state.activeScope.track[r];e.kept||n.has(e.id)||e.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==s.id||this.track(e)}))}gradients(e,t,n,s=!1){if(c.hu(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));c.hu(r instanceof f.es,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const s={},r={};for(let u=0;u<t.length;u++)s[t[u].id]=!0;for(let u=0;u<e.length;u++){const n=e[u],a=n.inputs;for(const e in a){const i=a[e];let o=!1;for(let e=0;e<t.length;e++)if(s[i.id]){n.outputs.forEach((e=>s[e.id]=!0)),o=!0,r[n.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let u=e.length-1;u>=0;u--){const t=e[u],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(a[t.outputs[e].id]){for(const e in n)a[n[e].id]=!0,i[t.id]=!0;break}}const o=[];for(let u=0;u<e.length;u++){const t=e[u];if(r[t.id]&&i[t.id]){const e={};for(const r in t.inputs){const n=t.inputs[r];s[n.id]&&(e[r]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}(this.state.activeTape,t,r);if(!s&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=(0,c.p8)((0,c.NA)(e),"float32");return w.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,s){for(let r=t.length-1;r>=0;r--){const a=t[r],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[t]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);const i=a.inputs[t];if(!c.cO(r.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=r;else{const t=e[i.id];e[i.id]=s(t,r),t.dispose()}}}}(e,a,(e=>this.tidy(e)),v);const s=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:s}}))}customGrad(e){return c.hu(c.mf(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;c.hu(t.every((e=>e instanceof f.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};t.forEach(((e,t)=>{s[t]=e}));return this.runKernelFunc({forwardFunc:(s,r)=>(n=e(...t,r),c.hu(n.value instanceof f.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),c.hu(c.mf(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,s)=>{const r=n.gradFunc(e,s),a=Array.isArray(r)?r:[r];c.hu(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),c.hu(a.every((e=>e instanceof f.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=(0,l.now)(),n=await this.backend.time(e);return n.wallMs=(0,l.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new y;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function x(){const e=(0,a.D)();if(null==e._tfengine){const t=new r.qA(e);e._tfengine=new b(t)}return(0,r.iG)(e._tfengine.ENV),(0,f.Vi)((()=>e._tfengine)),e._tfengine}b.nextTensorId=0,b.nextVariableId=0;const w=x();function v(e,t){const n={a:e,b:t};return w.runKernel(i.mm_,n)}},75658:(e,t,n)=>{"use strict";n.d(t,{OB:()=>o,Vi:()=>u,iG:()=>l,qA:()=>a});var s=n(50756);const r="tfjsflags";class a{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=i,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(o().getBool("IS_TEST")||o().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];o().getBool("IS_TEST")||o().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,s.tI)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(r in e){e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}}function i(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function o(){return u}let u=null;function l(e){u=e}},79700:(e,t,n)=>{"use strict";let s;function r(){if(null==s){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}s=e}return s}function a(e,t){const n=function(){const e=r();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const s=t();return n.set(e,s),n.get(e)}}n.d(t,{D:()=>r,R:()=>a})},14069:(e,t,n)=>{"use strict";n.d(t,{B9:()=>g,CQ:()=>x,Cd:()=>w,Cn:()=>y,G4:()=>o,MX:()=>c,N5:()=>f,N8:()=>h,N_:()=>v,R:()=>u,SR:()=>p,VY:()=>C,XV:()=>b,cF:()=>l,cj:()=>k,jq:()=>N,lu:()=>m,sq:()=>d,x3:()=>I,y3:()=>T,ze:()=>S});var s=n(47672),r=n(75658),a=n(39608),i=n(54699);function o(){(0,r.OB)().set("PROD",!0)}function u(){(0,r.OB)().set("DEBUG",!0)}function l(){(0,r.OB)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function c(e){(0,r.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function h(){s.BV.disposeVariables()}function p(){return s.BV}function d(){return s.BV.memory()}function f(e){return s.BV.profile(e)}function m(e,t){return s.BV.tidy(e,t)}function g(e){(0,i.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function y(e){return s.BV.keep(e)}function b(e){return s.BV.time(e)}function x(e){return s.BV.setBackend(e)}function w(){return s.BV.ready()}function v(){return s.BV.backendName}function k(e){s.BV.removeBackend(e)}function I(e){return s.BV.findBackend(e)}function S(e){return s.BV.findBackendFactory(e)}function N(e,t,n=1){return s.BV.registerBackend(e,t,n)}function T(){return s.BV.backend}function C(e,t){(0,r.OB)().setPlatform(e,t)}(0,a.FZ)(c)},69371:(e,t,n)=>{"use strict";n.d(t,{UQ:()=>o,cb:()=>p,fN:()=>c,h7:()=>l,pn:()=>h,ti:()=>u});var s=n(47672),r=n(39608),a=n(53133),i=n(50756);function o(e){return i.hu(i.mf(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=(0,a._1)(t,"x","tf.grad","string_or_numeric"),o=null!=n?(0,a._1)(n,"dy","tf.grad"):null;return s.BV.tidy((()=>{const{value:t,grads:n}=s.BV.gradients((()=>e(r)),[r],o);return null!=o&&i.k5(t.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),d(n),n[0]}))}}function u(e){return i.hu(i.mf(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{i.hu(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=(0,a.sI)(t,"args","tf.grads","string_or_numeric"),o=null!=n?(0,a._1)(n,"dy","tf.grads"):null;return s.BV.tidy((()=>{const{value:t,grads:n}=s.BV.gradients((()=>e(...r)),r,o);return null!=o&&i.k5(t.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),d(n),n}))}}function l(e){return i.hu(i.mf(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{i.hu(t instanceof r.es,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),i.hu(null==n||n instanceof r.es,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:a,value:o}=s.BV.gradients((()=>e(t)),[t],n);return d(a),{grad:a[0],value:o}}}function c(e){return i.hu(i.mf(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{i.hu(Array.isArray(t)&&t.every((e=>e instanceof r.es)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),i.hu(null==n||n instanceof r.es,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const a=s.BV.gradients((()=>e(...t)),t,n);return null!=n&&i.k5(a.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),d(a.grads),a}}function h(e,t){i.hu(i.mf(e),(()=>"The f passed in variableGrads(f) must be a function")),i.hu(null==t||Array.isArray(t)&&t.every((e=>e instanceof r._w)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in s.BV.registeredVariables)t.push(s.BV.registeredVariables[e])}const a=n?t.filter((e=>!e.trainable)):null,o=t.length;t=t.filter((e=>e.trainable)),i.hu(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`));const{value:u,grads:l}=s.BV.gradients(e,t,null,!0);i.hu(l.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),i.hu(0===u.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${u.rank} tensor`));const c={};return t.forEach(((e,t)=>{null!=l[t]&&(c[e.name]=l[t])})),null!=a&&a.forEach((e=>c[e.name]=null)),{value:u,grads:c}}function p(e){return s.BV.customGrad(e)}function d(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},39727:(e,t,n)=>{"use strict";n.d(t,{SYM:()=>Et.SYM,VGw:()=>Et.VGw,SpW:()=>Et.SpW,zJI:()=>Ve,HeW:()=>He,a4z:()=>qe,DBS:()=>Ye,mm_:()=>Et.mm_,Xze:()=>Et.Xze,oT6:()=>Et.oT6,IKK:()=>Et.IKK,sJF:()=>Et.sJF,aJk:()=>Et.aJk,M2y:()=>Et.M2y,qw7:()=>Et.qw7,jMg:()=>Et.jMg,QCc:()=>Et.QCc,Oyi:()=>Et.Oyi,JhU:()=>Et.JhU,_k9:()=>Et._k9,IMb:()=>Et.IMb,ROF:()=>Et.ROF,XLW:()=>Et.XLW,zws:()=>Et.zws,zvY:()=>Et.zvY,hCO:()=>Et.hCO,eEB:()=>Et.eEB,Ly9:()=>Et.Ly9,RFZ:()=>Et.RFZ,gJX:()=>Et.gJX,xnO:()=>Et.xnO,Zz9:()=>Et.Zz9,yj2:()=>Et.yj2,Eh3:()=>Et.Eh3,mhS:()=>Et.mhS,wUP:()=>Et.wUP,wm:()=>Et.wm,x12:()=>Et.x12,o2y:()=>Et.o2y,ik2:()=>Et.ik2,mc4:()=>Et.mc4,TR1:()=>Et.TR1,VcC:()=>Et.VcC,Byc:()=>Et.Byc,iHb:()=>Et.iHb,JLz:()=>vs.JL,QRR:()=>Et.QRR,T0n:()=>Et.T0n,cie:()=>Et.cie,sL$:()=>Et.sL$,y7R:()=>Et.y7R,$w:()=>Et.$w,p4S:()=>Et.p4S,Vn9:()=>Et.Vn9,ekb:()=>Et.ekb,hGc:()=>Et.hGc,ViN:()=>b.Vi,$g6:()=>Et.$g6,SX0:()=>Et.SX0,HEU:()=>Et.HEU,qAh:()=>b.qA,hdR:()=>Et.hdR,Omj:()=>Et.Omj,NEP:()=>Et.NEP,YFo:()=>Et.YFo,Y0y:()=>Et.Y0y,vwp:()=>Et.vwp,deh:()=>Et.deh,Uyb:()=>Et.Uyb,OR:()=>Et.OR,jeX:()=>Et.jeX,eBW:()=>Et.eBW,sHE:()=>Et.sHE,_V0:()=>Et._V0,luS:()=>Et.luS,q1x:()=>Et.q1x,qi_:()=>Et.qi_,iZT:()=>Et.iZT,Acj:()=>Et.Acj,Qg5:()=>Et.Qg5,iJz:()=>Et.iJz,J_u:()=>Et.J_u,avt:()=>Et.avt,iWB:()=>Et.iWB,r7n:()=>Et.r7n,Zuw:()=>vs.Zu,eZ0:()=>Et.eZ0,Hhh:()=>Et.Hhh,J$2:()=>Et.J$2,vtC:()=>Et.vtC,CAk:()=>Et.CAk,e7N:()=>Et.e7N,ZbH:()=>Et.ZbH,kU:()=>Et.kU,qCd:()=>Et.qCd,PYm:()=>Et.PYm,VfG:()=>Et.VfG,MZg:()=>Et.MZg,w6g:()=>Et.w6g,qIC:()=>Et.qIC,J7O:()=>Et.J7O,YoZ:()=>Et.YoZ,mTV:()=>Et.mTV,OAf:()=>Et.OAf,OU7:()=>Et.OU7,OV7:()=>Et.OV7,vFR:()=>Et.vFR,BMI:()=>Et.BMI,q2K:()=>Et.q2K,c17:()=>Et.c17,q8u:()=>Et.q8u,jQs:()=>Et.jQs,Vbg:()=>Et.Vbg,rIn:()=>Ze,NZg:()=>Et.NZg,wYn:()=>Et.wYn,kuV:()=>Et.kuV,uv1:()=>Et.uv1,cye:()=>Et.cye,W0H:()=>Et.W0H,yQU:()=>Et.yQU,zvA:()=>un.zvA,we_:()=>Et.we_,qWM:()=>Et.qWM,gaJ:()=>Pe,eEe:()=>an,QiL:()=>Et.QiL,lyA:()=>Et.lyA,Kgp:()=>Et.Kgp,pe_:()=>Et.pe_,o0g:()=>Et.o0g,DlI:()=>Et.DlI,gVI:()=>et,dDz:()=>Et.dDz,CQl:()=>Et.CQl,BiW:()=>Et.BiW,e6w:()=>Et.e6w,yw1:()=>on.yw,xJR:()=>Et.xJR,oHH:()=>Et.oHH,$HU:()=>Et.$HU,IH3:()=>ln.I,qkr:()=>Et.qkr,SbG:()=>Et.SbG,HZH:()=>Et.HZH,_Yw:()=>Et._Yw,zbQ:()=>Et.zbQ,dpD:()=>Et.dpD,Hmb:()=>Et.Hmb,mKl:()=>Et.mKl,b9H:()=>Et.b9H,e07:()=>Et.e07,bV0:()=>Et.bV0,DYp:()=>Je,xQA:()=>Et.xQA,nr8:()=>Et.nr8,PhF:()=>Et.PhF,oFR:()=>Et.oFR,a5O:()=>Et.a5O,i5y:()=>Et.i5y,RQH:()=>Et.RQH,wYB:()=>Et.wYB,p2w:()=>Et.p2w,Gcp:()=>Et.Gcp,MRv:()=>Et.MRv,TQc:()=>Et.TQc,O3z:()=>Et.O3z,nhH:()=>Et.nhH,w3H:()=>Et.w3H,ZjV:()=>Et.ZjV,D2d:()=>Et.D2d,L8s:()=>Et.L8s,FKq:()=>Et.FKq,bK0:()=>Et.bK0,_tC:()=>Et._tC,e0R:()=>Et.e0R,h8e:()=>Et.h8e,jQk:()=>Et.jQk,_JP:()=>Et._JP,s1s:()=>Et.s1s,XkS:()=>Et.XkS,Tr8:()=>Et.Tr8,GBy:()=>Et.GBy,sEM:()=>Et.sEM,MIZ:()=>Et.MIZ,esB:()=>$e.es,YDk:()=>$e.YD,SIB:()=>Et.SIB,n9L:()=>Et.n9L,cWu:()=>Et.cWu,wx7:()=>Et.wx7,G3Y:()=>Et.G3Y,kpP:()=>Et.kpP,ToN:()=>Et.ToN,Qvg:()=>Et.Qvg,XDQ:()=>Et.XDQ,_wD:()=>$e._w,RuY:()=>Et.RuY,usg:()=>Et.usg,WnP:()=>un.WnP,Khb:()=>un.Khb,__u:()=>un.__u,IHx:()=>un.IHx,QBD:()=>un.QBD,$6P:()=>un.$6P,YjB:()=>un.YjB,NqF:()=>un.NqF,vHJ:()=>un.vHJ,ZRM:()=>un.ZRM,VfV:()=>un.VfV,z4N:()=>un.z4N,fvJ:()=>un.fvJ,C80:()=>un.C80,wS1:()=>un.wS1,uR5:()=>un.uR5,y3$:()=>Ae.y3,Wap:()=>h,zEQ:()=>un.zEQ,tgs:()=>un.tgs,Dxk:()=>un.Dxk,JY5:()=>un.JY5,p3b:()=>un.p3b,E4h:()=>un.E4h,yE8:()=>un.yE8,ycw:()=>un.ycw,anm:()=>un.anm,XsQ:()=>un.XsQ,UFq:()=>un.UFq,Jyw:()=>$t,Xhn:()=>o,f3b:()=>un.f3b,pju:()=>un.pju,mDi:()=>un.mDi,iUl:()=>un.iUl,d9v:()=>un.d9v,PYB:()=>un.PYB,zoF:()=>un.zoF,gME:()=>un.gME,Izb:()=>un.Izb,MNy:()=>un.MNy,ZaL:()=>un.ZaL,PAt:()=>un.PAt,Tek:()=>un.Tek,bc:()=>un.bc,pdZ:()=>un.pdZ,$QV:()=>un.$QV,T3b:()=>At.T3,mCk:()=>un.mCk,f9Y:()=>un.f9Y,mew:()=>un.mew,$Gn:()=>un.$Gn,zbp:()=>un.zbp,cbc:()=>Be.cb,ppE:()=>un.ppE,MXe:()=>Ae.MX,nTT:()=>un.nTT,B10:()=>un.B10,C2$:()=>s,Ka3:()=>un.Ka3,WmZ:()=>un.WmZ,cFr:()=>Ae.cF,B90:()=>Ae.B9,N8o:()=>Ae.N8,hiC:()=>un.hiC,NTj:()=>un.NTj,AKD:()=>un.AKD,rvX:()=>un.rvX,WYO:()=>un.WYO,pyx:()=>un.pyx,Ra$:()=>Ae.R,G48:()=>Ae.G4,GRh:()=>un.GRh,SRH:()=>Ae.SR,EDe:()=>un.EDe,OBj:()=>b.OB,DgJ:()=>un.DgJ,qNN:()=>un.qNN,d2q:()=>un.d2q,Qqt:()=>un.Qqt,dt4:()=>un.dt4,t$B:()=>un.t$B,iyy:()=>un.iyy,kp_:()=>un.kp_,hlL:()=>un.hlL,x3e:()=>Ae.x3,zel:()=>Ae.ze,GWj:()=>un.GWj,qPi:()=>un.qPi,imm:()=>un.imm,Iqj:()=>un.Iqj,dbB:()=>un.dbB,DaI:()=>u,N_N:()=>Ae.N_,ukX:()=>At.uk,pIF:()=>At.pI,trD:()=>At.tr,UQy:()=>Be.UQ,tiA:()=>Be.ti,pjt:()=>un.pjt,brS:()=>un.brS,Sxn:()=>un.Sxn,asL:()=>un.asL,BHj:()=>un.BHj,V3u:()=>un.V3u,io:()=>a,wx0:()=>un.wx0,xVT:()=>un.xVT,UWc:()=>un.UWc,i2d:()=>un.i2d,CnY:()=>Ae.Cn,GDt:()=>p,hi7:()=>un.hi7,d9m:()=>un.d9m,zN1:()=>un.zN1,$r2:()=>un.$r2,SX3:()=>un.SX3,G9k:()=>un.G9k,cM7:()=>un.cM7,Krr:()=>un.Krr,e_t:()=>un.e_t,CmS:()=>un.CmS,l_t:()=>un.l_t,HvI:()=>un.HvI,hJK:()=>un.hJK,K5V:()=>un.K5V,egP:()=>un.egP,MB5:()=>un.MB5,eab:()=>un.eab,OI3:()=>un.OI3,mAU:()=>i,Fp7:()=>un.Fp7,_sB:()=>un._sB,YQQ:()=>un.YQQ,Ip$:()=>un.Ip$,gWQ:()=>un.gWQ,J69:()=>un.J69,sq6:()=>Ae.sq,ry_:()=>un.ry_,VV$:()=>un.VV$,LTh:()=>un.LTh,VdP:()=>un.VdP,wQq:()=>un.wQq,Gi7:()=>un.Gi7,p_:()=>un.p_,dC7:()=>un.dC7,rq4:()=>un.rq4,SJ_:()=>un.SJ_,W76:()=>un.W76,glt:()=>pn,KOy:()=>un.KOy,Quu:()=>un.Quu,lfX:()=>un.lfX,iUs:()=>un.iUs,JpU:()=>un.JpU,op:()=>un.op,N2O:()=>un.N2O,vku:()=>un.vku,pNR:()=>un.pNR,koy:()=>un.koy,t1L:()=>un.t1L,lGY:()=>un.lGY,d_R:()=>un.d_R,sQ3:()=>un.sQ3,AL3:()=>un.AL3,S0v:()=>un.S0v,WVs:()=>un.WVs,N5s:()=>Ae.N5,$gW:()=>un.$gW,VT$:()=>un.VT$,N89:()=>un.N89,TN_:()=>un.TN_,wzB:()=>un.wzB,nGf:()=>un.nGf,ruB:()=>un.ruB,LGj:()=>un.LGj,pe5:()=>un.pe5,w6H:()=>un.w6H,Cd_:()=>Ae.Cd,kwC:()=>un.kwC,M25:()=>un.M25,jqO:()=>Ae.jq,LiG:()=>At.Li,wCN:()=>At.wC,UYe:()=>un.UYe,btT:()=>un.btT,cjG:()=>Ae.cj,XLQ:()=>un.XLQ,GYS:()=>un.GYS,SDf:()=>un.SDf,diP:()=>un.diP,sx7:()=>un.sx7,mG2:()=>un.mG2,QEs:()=>un.QEs,NMM:()=>un.NMM,bp0:()=>un.bp0,iD$:()=>un.iD$,snQ:()=>un.snQ,yV1:()=>Pt,zcT:()=>un.zcT,U8D:()=>un.U8D,U_I:()=>un.U_I,m7h:()=>r,CQI:()=>Ae.CQ,VYu:()=>Ae.VY,ODp:()=>un.ODp,XD2:()=>un.XD2,Xxe:()=>un.Xxe,tdS:()=>un.tdS,O$l:()=>un.O$l,R_K:()=>un.R_K,tPi:()=>un.tPi,jZU:()=>un.jZU,SmN:()=>un.SmN,CnO:()=>un.CnO,p0P:()=>un.p0P,kuN:()=>Vt,XAC:()=>un.XAC,Wvh:()=>un.Wvh,fBT:()=>un.fBT,rVs:()=>un.rVs,ers:()=>un.ers,uN7:()=>un.uN7,Vl2:()=>un.Vl2,_b3:()=>un._b3,h62:()=>un.h62,$i:()=>un.$i,L9e:()=>un.L9e,knu:()=>un.knu,Nbs:()=>un.Nbs,NXj:()=>un.NXj,Z_8:()=>un.Z_8,luU:()=>un.luU,Smz:()=>un.Smz,z4k:()=>on.z4,ORZ:()=>un.ORZ,AEp:()=>un.AEp,XeE:()=>un.XeE,RRF:()=>un.RRF,odF:()=>un.odF,wOQ:()=>un.wOQ,yXz:()=>un.yXz,Bfx:()=>un.Bfx,xZs:()=>un.xZs,Pg0:()=>un.Pg0,piX:()=>Gt,p3L:()=>l,lub:()=>Ae.lu,Gg6:()=>un.Gg6,XVJ:()=>Ae.XV,hg7:()=>un.hg7,p_j:()=>cn,p4s:()=>un.p4s,Xu6:()=>un.Xu6,Two:()=>un.Two,bt3:()=>At.bt,nEe:()=>At.nE,pUJ:()=>un.pUJ,HHK:()=>un.HHK,x8V:()=>on.x8,GaM:()=>un.GaM,D5U:()=>S,h76:()=>Be.h7,fNQ:()=>Be.fN,VD$:()=>un.VD$,pnJ:()=>Be.pn,jTM:()=>rn,arb:()=>un.arb,itS:()=>un.itS,lls:()=>un.lls,P84:()=>un.P84});var s={};n.r(s),n.d(s,{isBrowser:()=>y,isMobile:()=>g,mockIsMobile:()=>m});var r={};n.r(r),n.d(r,{Serializable:()=>Le,SerializationMap:()=>Ue,registerClass:()=>We});var a={};n.r(a),n.d(a,{CompositeArrayBuffer:()=>N,browserFiles:()=>at,browserHTTPRequest:()=>ft,concatenateArrayBuffers:()=>D,copyModel:()=>ye,decodeWeights:()=>C,encodeWeights:()=>T,fromMemory:()=>bt,fromMemorySync:()=>xt,getLoadHandlers:()=>V,getModelArtifactsForJSON:()=>O,getModelArtifactsForJSONSync:()=>F,getModelArtifactsInfoForJSON:()=>M,getSaveHandlers:()=>P,getWeightSpecs:()=>B,http:()=>dt,isHTTPScheme:()=>ht,listModels:()=>me,loadWeights:()=>ut,moveModel:()=>be,registerLoadRouter:()=>W,registerSaveRouter:()=>U,removeModel:()=>ge,weightsLoaderFactory:()=>lt,withSaveHandler:()=>wt,withSaveHandlerSync:()=>vt});var i={};n.r(i),n.d(i,{confusionMatrix:()=>Ct});var o={};n.r(o),n.d(o,{draw:()=>Lt,fromPixels:()=>Ut,fromPixelsAsync:()=>Mt,toPixels:()=>zt});var u={};n.r(u),n.d(u,{prepareAndValidate:()=>Wt});var l={};n.r(l),n.d(l,{TEST_EPSILON_FLOAT16:()=>Ht,createVideoElement:()=>nn,encodeStrings:()=>tn,expectArrayBuffersEqual:()=>en,expectArraysClose:()=>jt,expectArraysEqual:()=>Qt,expectNumbersClose:()=>Yt,expectPromiseToFail:()=>Kt,expectValuesInRange:()=>Zt,play:()=>sn,testEpsilon:()=>Xt});var c={};n.r(c),n.d(c,{collectGatherOpShapeInfo:()=>gs,computeOutShape:()=>ms,segOpComputeOptimalWindowSize:()=>fs});var h={};n.r(h),n.d(h,{ERF_A1:()=>_n,ERF_A2:()=>Fn,ERF_A3:()=>On,ERF_A4:()=>Mn,ERF_A5:()=>Bn,ERF_P:()=>Rn,PARALLELIZE_THRESHOLD:()=>In,RowPartitionType:()=>gn,SELU_SCALE:()=>Dn.$,SELU_SCALEALPHA:()=>Dn.y,applyActivation:()=>bn.QH,assertAndGetBroadcastShape:()=>$t.assertAndGetBroadcastShape,assertAxesAreInnerMostDims:()=>dn.lB,assertParamsConsistent:()=>fn,assignToTypedArray:()=>Gn,axesAreInnerMostDims:()=>dn.YB,calculateShapes:()=>Pt.calculateShapes,checkEinsumDimSizes:()=>Yn,checkPadOnDimRoundingMode:()=>yn.m,combineLocations:()=>dn.Vh,combineRaggedTensorToTensorShapes:()=>xn,complexWithEvenIndex:()=>Wn,complexWithOddIndex:()=>Pn,computeConv2DInfo:()=>yn.Ix,computeConv3DInfo:()=>yn.jw,computeDefaultPad:()=>yn.aO,computeDilation2DInfo:()=>yn.Rf,computeOptimalWindowSize:()=>Sn,computeOutAndReduceShapes:()=>dn.kz,computeOutShape:()=>mn,computePool2DInfo:()=>yn.Xw,computePool3DInfo:()=>yn.pl,convertConv2DDataFormat:()=>yn.sl,decodeEinsumEquation:()=>Kn,eitherStridesOrDilationsAreOne:()=>yn.jT,expandShapeToKeepDim:()=>dn.rv,exponent:()=>jn,exponents:()=>Hn,fromStringArrayToUint8:()=>bs,fromUint8ToStringArray:()=>ys,getAxesPermutation:()=>dn.Q3,getBroadcastDims:()=>$t.getBroadcastDims,getComplexWithIndex:()=>Vn,getEinsumComputePath:()=>Jn,getEinsumPermutation:()=>Qn,getFusedBiasGradient:()=>bn.pf,getFusedDyActivation:()=>bn.Fr,getImageCenter:()=>Nn,getInnerMostAxes:()=>dn.sY,getPermuted:()=>Cn,getRaggedRank:()=>vn,getReductionAxes:()=>$t.getReductionAxes,getReshaped:()=>Tn,getReshapedPermuted:()=>$n,getRowPartitionTypesHelper:()=>wn,getSliceBeginCoords:()=>En,getSliceSize:()=>An,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>ns,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>ss,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>rs,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>os,getSparseReshapeInputOutputMismatchErrorMessage:()=>ls,getSparseReshapeInputOutputMultipleErrorMessage:()=>us,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>as,getSparseReshapeNegativeOutputDimErrorMessage:()=>is,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>ds,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>cs,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>hs,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>ps,getUndoAxesPermutation:()=>dn.LJ,isIdentityPermutation:()=>Zn,log:()=>zn.c,mergeRealAndImagArrays:()=>Ln,prepareAndValidate:()=>Wt,prepareSplitSize:()=>ts,segment_util:()=>c,shouldFuse:()=>bn.uy,slice_util:()=>Vt,splitRealAndImagArrays:()=>Un,stridesOrDilationsArePositive:()=>yn.U3,tupleValuesAreOne:()=>yn.I0,upcastType:()=>on.x8,validateDefaultValueShape:()=>kn,validateInput:()=>Pt.validateInput,validateUpdateShape:()=>Pt.validateUpdateShape,warn:()=>zn.Z});var p={};n.r(p),n.d(p,{nonMaxSuppressionV3Impl:()=>xs.GP,nonMaxSuppressionV4Impl:()=>xs.qP,nonMaxSuppressionV5Impl:()=>xs.pA,whereImpl:()=>ws.Z});var d=n(47672);let f;function m(e){f=e}function g(e){if(void 0!==f)return f;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function y(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var b=n(75658);const x=(0,b.OB)();x.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),x.registerFlag("IS_BROWSER",(()=>y())),x.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),x.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),x.registerFlag("IS_SAFARI",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),x.registerFlag("PROD",(()=>!1)),x.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>x.getBool("DEBUG"))),x.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),x.registerFlag("IS_TEST",(()=>!1)),x.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>x.getBool("DEBUG"))),x.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),x.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),x.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));var w=n(37496),v=n(32209),k=n(50756);const I={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var S=n(80884);class N{static join(e){return new N(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>S.isTypedArray(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const s=e[n];n!==e.length-1&&s.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=t+s.byteLength;this.shards.push({buffer:s,start:t,end:r}),t=r}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const s=new ArrayBuffer(t-e),r=new Uint8Array(s);let a=0;for(let i=n;i<this.shards.length;i++){const n=this.shards[i],s=e+a-n.start,o=a,u=Math.min(t,n.end)-n.start,l=new Uint8Array(n.buffer,s,u-s);if(r.set(l,o),a+=l.length,t<n.end)break}return s}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,s=e.length;for(;n<=s;){const r=Math.floor((s-n)/2)+n,a=t(e[r]);if(0===a)return r;a<0?s=r:n=r+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}async function T(e,t){const n=[],s=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<r.length;++a){const i=r[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,s=new Uint8Array(n);let r=0;for(let a=0;a<t.length;a++){const e=t[a],n=new Uint8Array(new Uint32Array([e.length]).buffer);s.set(n,r),r+=4,s.set(e,r),r+=e.length}e(s)}));s.push(e)}else s.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:$(await Promise.all(s)),specs:n}}function C(e,t){const n=new N(e),s={};let r,a=0;for(const i of t){const e=i.name,t=i.dtype,o=i.shape,u=(0,k.NA)(o);let l;if("quantization"in i){const s=i.quantization;if("uint8"===s.dtype||"uint16"===s.dtype){if(!("min"in s)||!("scale"in s))throw new Error(`Weight ${i.name} with quantization ${s.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==s.dtype)throw new Error(`Weight ${i.name} has unknown quantization dtype ${s.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==t)throw new Error(`Weight ${i.name} is quantized with ${s.dtype} which only supports weights of type float32 not ${t}.`)}const o=I[s.dtype],c=n.slice(a,a+u*o),h="uint8"===s.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===t)if("uint8"===s.dtype||"uint16"===s.dtype){l=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=t*s.scale+s.min}}else{if("float16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type float32.`);void 0===r&&(r=z()),l=r(h)}else{if("int32"!==t)throw new Error(`Unsupported dtype in weight '${e}': ${t}`);if("uint8"!==s.dtype&&"uint16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=Math.round(t*s.scale+s.min)}}a+=u*o}else if("string"===t){const e=(0,k.NA)(i.shape);l=[];for(let t=0;t<e;t++){const e=new Uint32Array(n.slice(a,a+4))[0];a+=4;const t=new Uint8Array(n.slice(a,a+e));l.push(t),a+=e}}else{const r=I[t],i=n.slice(a,a+u*r);if("float32"===t)l=new Float32Array(i);else if("int32"===t)l=new Int32Array(i);else if("bool"===t)l=new Uint8Array(i);else{if("complex64"!==t)throw new Error(`Unsupported dtype in weight '${e}': ${t}`);{l=new Float32Array(i);const t=new Float32Array(l.length/2),n=new Float32Array(l.length/2);for(let e=0;e<t.length;e++)t[e]=l[2*e],n[e]=l[2*e+1];const r=(0,v.X)(t,o,"float32"),a=(0,v.X)(n,o,"float32");s[e]=(0,w.P)(r,a),r.dispose(),a.dispose()}}a+=u*r}"complex64"!==t&&(s[e]=(0,v.X)(l,o,t))}return s}function $(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const s=new Uint8Array(t);let r=0;return n.forEach((e=>{s.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),s.buffer}const E="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function A(e){return E?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function D(e){return N.join(e)}function R(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function _(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function F(e,t,n){const s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(s.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=t,s.weightData=n}return null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(s.initializerSignature=e.initializerSignature),s}async function O(e,t){let n,s;return null!=e.weightsManifest&&([n,s]=await t(e.weightsManifest)),F(e,n,s)}function M(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:A(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:A(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new N(e.weightData).byteLength}}function B(e){const t=[];for(const n of e)t.push(...n.weights);return t}function z(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return s=>{const r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let i=0;i<s.length;i++){const r=s[i],o=e[n[r>>10]+(1023&r)]+t[r>>10];a[i]=o}return new Float32Array(r)}}class L{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==L.instance&&(L.instance=new L),L.instance}static registerSaveRouter(e){L.getInstance().saveRouters.push(e)}static registerLoadRouter(e){L.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return L.getHandlers(e,"save")}static getLoadHandlers(e,t){return L.getHandlers(e,"load",t)}static getHandlers(e,t,n){const s=[];return("load"===t?L.getInstance().loadRouters:L.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&s.push(r)})),s}}const U=e=>L.registerSaveRouter(e),W=e=>L.registerLoadRouter(e),P=e=>L.getSaveHandlers(e),V=(e,t)=>L.getLoadHandlers(e,t),G="tensorflowjs",H="models_store",j="model_info_store";function X(){if(!(0,b.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function q(e){const t=e.result;t.createObjectStore(H,{keyPath:"modelPath"}),t.createObjectStore(j,{keyPath:"modelPath"})}class K{constructor(e){if(this.indexedDB=X(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const s=this.indexedDB.open(G,1);s.onupgradeneeded=()=>q(s),s.onsuccess=()=>{const r=s.result;if(null==t){const t=r.transaction(H,"readonly"),s=t.objectStore(H).get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(s.result.modelArtifacts)},s.onerror=e=>(r.close(),n(s.error)),t.oncomplete=()=>r.close()}else{const s=M(t),i=r.transaction(j,"readwrite");let o,u,l=i.objectStore(j);try{o=l.put({modelPath:this.modelPath,modelArtifactsInfo:s})}catch(a){return n(a)}o.onsuccess=()=>{u=r.transaction(H,"readwrite");const o=u.objectStore(H);let c;try{c=o.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s})}catch(a){return n(a)}c.onsuccess=()=>e({modelArtifactsInfo:s}),c.onerror=e=>{l=i.objectStore(j);const t=l.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(c.error)),t.onerror=e=>(r.close(),n(c.error))}},o.onerror=e=>(r.close(),n(o.error)),i.oncomplete=()=>{null==u?r.close():u.oncomplete=()=>r.close()}}},s.onerror=e=>n(s.error)}))}}K.URL_SCHEME="indexeddb://";const Q=e=>{return(0,b.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(K.URL_SCHEME)?(t=e.slice(K.URL_SCHEME.length),new K(t)):null;var t};L.registerSaveRouter(Q),L.registerLoadRouter(Q);class Y{constructor(){this.indexedDB=X()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(G,1);n.onupgradeneeded=()=>q(n),n.onsuccess=()=>{const s=n.result,r=s.transaction(j,"readonly"),a=r.objectStore(j).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(s.close(),t(a.error)),r.oncomplete=()=>s.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(K.URL_SCHEME)?t.slice(K.URL_SCHEME.length):t,new Promise(((t,n)=>{const s=this.indexedDB.open(G,1);s.onupgradeneeded=()=>q(s),s.onsuccess=()=>{const r=s.result,a=r.transaction(j,"readwrite"),i=a.objectStore(j),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const s=i.delete(e),a=()=>{u=r.transaction(H,"readwrite");const s=u.objectStore(H).delete(e);s.onsuccess=()=>t(o.result.modelArtifactsInfo),s.onerror=e=>n(o.error)};s.onsuccess=a,s.onerror=e=>(a(),r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==u?r.close():u.oncomplete=()=>r.close()}},s.onerror=e=>n(s.error)}))}}const J="/",Z="tensorflowjs_models",ee="info",te="model_topology",ne="weight_specs",se="weight_data",re="model_metadata";function ae(e){return{info:[Z,e,ee].join(J),topology:[Z,e,te].join(J),weightSpecs:[Z,e,ne].join(J),weightData:[Z,e,se].join(J),modelMetadata:[Z,e,re].join(J)}}function ie(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function oe(e){const t=e.split(J);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(J)}class ue{constructor(e){if(!(0,b.OB)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ae(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),r=M(e),a=N.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,function(e){if(E)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let s=0,r=t.length;s<r;s++)n+=String.fromCharCode(t[s]);return btoa(n)}(a));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:r}}catch(t){throw ie(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(E){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n.set([t.charCodeAt(s)],s);return n.buffer}(a),t}}ue.URL_SCHEME="localstorage://";const le=e=>{return(0,b.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ue.URL_SCHEME)?(t=e.slice(ue.URL_SCHEME.length),new ue(t)):null;var t};L.registerSaveRouter(le),L.registerLoadRouter(le);class ce{constructor(){(0,k.hu)((0,b.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,k.hu)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Z+J,n=J+ee;for(let s=0;s<this.LS.length;++s){const r=this.LS.key(s);if(r.startsWith(t)&&r.endsWith(n)){e[oe(r)]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){var t;const n=ae(e=(t=e).startsWith(ue.URL_SCHEME)?t.slice(ue.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(n.info));return ie(n),s}}const he="://";class pe{constructor(){this.managers={}}static getInstance(){return null==pe.instance&&(pe.instance=new pe),pe.instance}static registerManager(e,t){(0,k.hu)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(he)&&(e=e.slice(0,e.indexOf(he))),(0,k.hu)(e.length>0,(()=>"scheme must not be an empty string."));const n=pe.getInstance();(0,k.hu)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=pe.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(pe.getInstance().managers)}}function de(e){if(-1===e.indexOf(he))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${pe.getSchemes().join(",")}`);return{scheme:e.split(he)[0],path:e.split(he)[1]}}async function fe(e,t,n=!1){(0,k.hu)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const s=L.getLoadHandlers(e);(0,k.hu)(s.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),(0,k.hu)(s.length<2,(()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`));const r=s[0],a=L.getSaveHandlers(t);(0,k.hu)(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),(0,k.hu)(a.length<2,(()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`));const i=a[0],o=de(e).scheme,u=de(e).path,l=o===de(e).scheme,c=await r.load();n&&l&&await pe.getManager(o).removeModel(u);const h=await i.save(c);return n&&!l&&await pe.getManager(o).removeModel(u),h.modelArtifactsInfo}async function me(){const e=pe.getSchemes(),t={};for(const n of e){const e=await pe.getManager(n).listModels();for(const s in e){t[n+he+s]=e[s]}}return t}async function ge(e){const t=de(e);return pe.getManager(t.scheme).removeModel(t.path)}async function ye(e,t){return fe(e,t,!1)}async function be(e,t){return fe(e,t,!0)}var xe=n(77054);class we{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&(0,b.OB)().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return(0,xe.j)(e)}}if((0,b.OB)().get("IS_BROWSER")){(0,b.OB)().setPlatform("browser",new we);try{pe.registerManager(ue.URL_SCHEME,new ce)}catch(ks){}try{pe.registerManager(K.URL_SCHEME,new Y)}catch(ks){}}const ve=()=>n(57897);let ke;class Ie{constructor(){this.util=n(94444),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,b.OB)().global.fetch?(0,b.OB)().global.fetch(e,t):(null==ke&&(ke=ve()),ke(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}(0,b.OB)().get("IS_NODE")&&!(0,b.OB)().get("IS_BROWSER")&&(0,b.OB)().setPlatform("node",new Ie);var Se=n(79410),Ne=n(27742),Te=n(62469),Ce=n(73860),$e=n(39608);(0,d.wv)();const Ee={buffer:Se.f,cast:Ne.p,clone:Te.d,print:Ce.S};(0,$e.Vp)(Ee);var Ae=n(14069),De=n(37672),Re=n(31323),_e=n(81009),Fe=n(7149),Oe=n(79512),Me=n(39047),Be=n(69371),ze=n(15656);class Le{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Ue{constructor(){this.classNameMap={}}static getMap(){return null==Ue.instance&&(Ue.instance=new Ue),Ue.instance}static register(e){Ue.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function We(e){(0,k.hu)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,k.hu)("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,k.hu)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Ue.register(e)}class Pe extends Le{minimize(e,t=!1,n){const{value:s,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return(0,Ae.B9)(r),t?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,Be.pn)(e,t)}dispose(){null!=this.iterations_&&(0,Ae.B9)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,ze.i)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Pe,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Ve extends Pe{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=d.BV.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=d.BV.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:(0,Ae.lu)((()=>(0,Me.P)(s).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:(0,Ae.lu)((()=>(0,Me.P)(s).variable(false)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;(0,Ae.lu)((()=>{const e=(0,De.I)((0,_e.d)(a,this.rho),(0,_e.d)((0,Oe.h)(r),1-this.rho)),t=(0,_e.d)((0,Re.h)((0,Fe._)((0,De.I)(i,this.epsilon)),(0,Fe._)((0,De.I)(a,this.epsilon))),r),n=(0,De.I)((0,_e.d)(i,this.rho),(0,_e.d)((0,Oe.h)(t),1-this.rho));a.assign(e),i.assign(n);const o=(0,De.I)((0,_e.d)(t,-this.learningRate),s);s.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,Ae.B9)(this.accumulatedGrads.map((e=>e.variable))),(0,Ae.B9)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}var Ge=n(33173);class He extends Pe{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=d.BV.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:(0,Ae.lu)((()=>(0,Ge.h)(s.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=this.accumulatedGrads[n].variable;(0,Ae.lu)((()=>{const e=(0,De.I)(a,(0,Oe.h)(r));a.assign(e);const t=(0,De.I)((0,_e.d)((0,Re.h)(r,(0,Fe._)((0,De.I)(e,d.BV.backend.epsilon()))),-this.learningRate),s);s.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,Ae.B9)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}var je=n(59715),Xe=n(69392);class qe extends Pe{static get className(){return"Adam"}constructor(e,t,n,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,Ae.lu)((()=>{this.accBeta1=(0,ze.i)(t).variable(),this.accBeta2=(0,ze.i)(n).variable()})),null==s&&(this.epsilon=d.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,Ae.lu)((()=>{const n=(0,Xe.l)(1,this.accBeta1),s=(0,Xe.l)(1,this.accBeta2);t.forEach(((t,r)=>{const a=d.BV.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:(0,Ae.lu)((()=>(0,Me.P)(a).variable(false)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${t}/v`,variable:(0,Ae.lu)((()=>(0,Me.P)(a).variable(false)))});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,u=this.accumulatedSecondMoment[r].variable,l=(0,De.I)((0,_e.d)(o,this.beta1),(0,_e.d)(i,1-this.beta1)),c=(0,De.I)((0,_e.d)(u,this.beta2),(0,_e.d)((0,Oe.h)(i),1-this.beta2)),h=(0,Re.h)(l,n),p=(0,Re.h)(c,s);o.assign(l),u.assign(c);const f=(0,De.I)((0,_e.d)((0,Re.h)(h,(0,De.I)((0,Fe._)(p),this.epsilon)),-this.learningRate),a);a.assign(f)})),this.accBeta1.assign((0,_e.d)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,_e.d)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,Ae.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,Ae.B9)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,Ae.lu)((()=>{this.accBeta1.assign((0,je.s)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,je.s)(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}var Ke=n(38116),Qe=n(56150);class Ye extends Pe{static get className(){return"Adamax"}constructor(e,t,n,s=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,Ae.lu)((()=>{this.iteration=(0,ze.i)(0).variable(),this.accBeta1=(0,ze.i)(t).variable()})),null==s&&(this.epsilon=d.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,Ae.lu)((()=>{const n=(0,Xe.l)(1,this.accBeta1),s=(0,Re.h)(-this.learningRate,(0,De.I)((0,_e.d)(this.iteration,this.decay),1));t.forEach(((t,r)=>{const a=d.BV.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:(0,Me.P)(a).variable(false)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${t}/v`,variable:(0,Me.P)(a).variable(false)});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,u=this.accumulatedWeightedInfNorm[r].variable,l=(0,De.I)((0,_e.d)(o,this.beta1),(0,_e.d)(i,1-this.beta1)),c=(0,_e.d)(u,this.beta2),h=(0,Ke.W)(i),p=(0,Qe.g)(c,h);o.assign(l),u.assign(p);const f=(0,De.I)((0,_e.d)((0,Re.h)(s,n),(0,Re.h)(l,(0,De.I)(p,this.epsilon))),a);a.assign(f)})),this.iteration.assign((0,De.I)(this.iteration,1)),this.accBeta1.assign((0,_e.d)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,Ae.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,Ae.B9)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class Je extends Pe{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const r=d.BV.registeredVariables[t];(0,Ae.lu)((()=>{const e=(0,De.I)((0,_e.d)(this.c,s),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,Ae.Cn)((0,ze.i)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class Ze extends Je{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,ze.i)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=d.BV.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:(0,Ae.lu)((()=>(0,Me.P)(s).variable(e)))}}const r=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&(0,Ae.lu)((()=>{let e;const t=(0,De.I)((0,_e.d)(this.m,r),a);e=this.useNesterov?(0,De.I)((0,_e.d)(this.c,(0,De.I)(a,(0,_e.d)(t,this.m))),s):(0,De.I)((0,_e.d)(this.c,t),s),r.assign(t),s.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,Ae.B9)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class et extends Pe{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,s=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==s&&(this.epsilon=d.BV.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=d.BV.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:(0,Ae.lu)((()=>(0,Me.P)(s).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:(0,Ae.lu)((()=>(0,Me.P)(s).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:(0,Ae.lu)((()=>(0,Me.P)(s).variable(r)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;(0,Ae.lu)((()=>{const e=(0,De.I)((0,_e.d)(i,this.decay),(0,_e.d)((0,Oe.h)(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=(0,De.I)((0,_e.d)(t,this.decay),(0,_e.d)(a,1-this.decay)),u=(0,Re.h)((0,_e.d)(a,this.learningRate),(0,Fe._)((0,Xe.l)(e,(0,De.I)((0,Oe.h)(r),this.epsilon)))),l=(0,De.I)((0,_e.d)(o,this.momentum),u);i.assign(e),t.assign(r),o.assign(l);const c=(0,Xe.l)(s,l);s.assign(c)}else{const e=(0,De.I)((0,_e.d)(i,this.decay),(0,_e.d)((0,Oe.h)(a),1-this.decay)),t=(0,De.I)((0,_e.d)(o,this.momentum),(0,Re.h)((0,_e.d)(a,this.learningRate),(0,Fe._)((0,De.I)(e,this.epsilon))));i.assign(e),o.assign(t);const n=(0,Xe.l)(s,t);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,Ae.B9)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,Ae.B9)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,Ae.B9)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const tt=[Ve,He,qe,Ye,Ze,et,Je];function nt(e){return new Promise((e=>setTimeout(e))).then(e)}class st{constructor(e){if(!(0,b.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(st.URL_SCHEME)&&(e=e.slice(st.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=N.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=_(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),s=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=s,await nt((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await nt((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:M(e)}}}}st.URL_SCHEME="downloads://";class rt{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const s=JSON.parse(n.target.result),r=s.modelTopology;if(null==r)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==s.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:r});const a=O(s,(e=>this.loadWeights(e)));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const a of e)t.push(...a.weights),n.push(...a.paths);const s=this.checkManifestAndWeightFiles(e),r=n.map((e=>this.loadWeightsFile(e,s[e])));return Promise.all(r).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,s)=>{const r=new FileReader;r.onload=e=>{const t=e.target.result;n(t)},r.onerror=t=>s(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>R(e.name))),s={};for(const r of e)r.paths.forEach((e=>{const r=R(e);if(-1!==t.indexOf(r))throw new Error(`Duplicate file basename found in weights manifest: '${r}'`);if(t.push(r),-1===n.indexOf(r))throw new Error(`Weight file with basename '${r}' is not provided.`);s[e]=this.weightsFiles[n.indexOf(r)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}}function at(e){return new rt(e)}function it(e,t,n,s){!function(e){(0,k.hu)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,k.hu)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,k.hu)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,k.hu)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,s=null==s?1:s);let r=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++r/e.length*(s-n);return t(i),a})),a))))}async function ot(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,b.OB)().platform.fetch:t.fetchFunc,s=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(s):await it(s,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await it(r,t.onProgress,.5,1)}async function ut(e,t="",n,s){return lt((e=>ot(e,{requestInit:s})))(e,t,n)}function lt(e){return async(t,n="",s)=>{const r=t.map((()=>!1)),a={},i=null!=s?s.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=I[u]*k.NA(e.shape),c=()=>{r[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=s?s.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=l}))})),!i.every((e=>e))){const e=s.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=r.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const c=await e(l),h={};let p=0;return u.forEach((e=>{const n=t[e].paths.length,s=new N(c.slice(p,p+n));a[e].forEach((e=>{const t=C(s.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const n in t)h[n]=t[n]})),p+=n})),h}}L.registerSaveRouter((e=>(0,b.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(st.URL_SCHEME)?function(e="model"){return new st(e)}(e.slice(st.URL_SCHEME.length)):null));class ct{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,k.hu)("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,b.OB)().platform.fetch,(0,k.hu)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,k.hu)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=_(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=N.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:M(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(r){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,s=t.weightsManifest;if(null==n&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return O(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),s=e.substring(0,t),r=n>t?e.substring(n):"";return[s+"/",r]}(t),r=this.weightPathPrefix||n,a=B(e),i=[],o=[];for(const u of e)for(const e of u.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(r+e+s);this.weightUrlConverter&&i.push(...await Promise.all(o));return[a,await ot(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress})]}}function ht(e){return null!=e.match(ct.URL_SCHEME_REGEX)}ct.URL_SCHEME_REGEX=/^https?:\/\//;const pt=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>ht(e))):ht(e),n)return dt(e,t)}return null};function dt(e,t){return new ct(e,t)}function ft(e,t){return dt(e,t)}L.registerSaveRouter(pt),L.registerLoadRouter(pt);class mt{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class gt{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class yt{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function bt(e,t,n,s){const r=arguments;return new yt(xt(...r))}function xt(e,t,n,s){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new mt(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new mt({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new mt({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:s})}function wt(e){return new gt(e)}function vt(e){return new gt(e)}var kt=n(53133),It=n(14274),St=n(62535),Nt=n(83118),Tt=n(61268);const Ct=(0,Nt.op)({confusionMatrix_:function(e,t,n){const s=(0,kt._1)(e,"labels","confusionMatrix"),r=(0,kt._1)(t,"predictions","confusionMatrix");k.hu(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),k.hu(1===s.rank,(()=>`Expected the rank of labels to be 1, but got ${s.rank}`)),k.hu(1===r.rank,(()=>`Expected the rank of predictions to be 1, but got ${r.rank}`)),k.hu(s.shape[0]===r.shape[0],(()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`)),k.hu(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const a=(0,St.l)((0,Ne.p)(s,"int32"),n),i=(0,St.l)((0,Ne.p)(r,"int32"),n),o=(0,Tt.p)(a),u=(0,It.O)(o,i);return(0,Ne.p)(u,"int32")}});var $t=n(65052),Et=n(65853),At=n(74300),Dt=n(39134);let Rt,_t=!1;function Ft(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)s=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=(0,At.pI)(Et.eBW,d.BV.backendName)){const n={pixels:e},s={numChannels:t};return d.BV.runKernel(Et.eBW,n,s)}const[u,l]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i)c=e.getContext("2d").getImageData(0,0,u,l).data;else if(s||n)c=e.data;else if(a||r||o){if(null==Rt)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Rt=new OffscreenCanvas(1,1).getContext("2d")}else Rt=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Rt.canvas.width=u,Rt.canvas.height=l,Rt.drawImage(e,0,0,u,l),c=Rt.getImageData(0,0,u,l).data}if(4===t)h=new Int32Array(c);else{const e=u*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}const p=[l,u,t];return(0,Dt.w)(h,p,"int32")}function Ot(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function Mt(e,t=3){let n=null;if((0,b.OB)().getBool("WRAP_TO_IMAGEBITMAP")&&Ot(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(s){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Ft(n,t)}function Bt(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function zt(e,t){let n=(0,kt._1)(e,"img","toPixels");if(!(e instanceof $e.es)){const e=n;n=(0,Ne.p)(e,"int32"),e.dispose()}Bt(n);const[s,r]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2],i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(r*s*4);for(let l=0;l<s*r;++l){const e=[0,0,0,255];for(let s=0;s<a;s++){const t=i[l*a+s];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===a?(e[0]=t*o,e[1]=t*o,e[2]=t*o):e[s]=t*o}const t=4*l;u[t+0]=Math.round(e[0]),u[t+1]=Math.round(e[1]),u[t+2]=Math.round(e[2]),u[t+3]=Math.round(e[3])}if(null!=t){_t||(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),_t=!0),t.width=r,t.height=s;const e=t.getContext("2d"),n=new ImageData(u,r,s);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}function Lt(e,t,n){let s=(0,kt._1)(e,"img","draw");if(!(e instanceof $e.es)){const e=s;s=(0,Ne.p)(e,"int32"),e.dispose()}Bt(s),function(e){const t=(null==e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null==n?void 0:n.imageOptions);const r={image:s},a={canvas:t,options:n};d.BV.runKernel(Et.hGc,r,a)}const Ut=(0,Nt.op)({fromPixels_:Ft});function Wt(e,t){const n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(0===(0,k.NA)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const r=t.shape,a=r[r.length-1];let i=1;for(let h=0;h<r.length-1;++h)i*=r[h];const o=e.shape,u=r.slice();u.pop();let l=1;for(let h=a;h<n;++h)l*=o[h],u.push(o[h]);const c=[...(0,k.e3)(e.shape).map((e=>e/l)),1].slice(0,a);return[u,i,l,c]}var Pt=n(53766),Vt=n(81620),Gt=n(54699);const Ht=.1;function jt(e,t,n){return null==n&&(n=Xt()),qt(e,t,((e,t)=>Jt(e,t,n)))}function Xt(){return 32===d.BV.backend.floatPrecision()?.001:Ht}function qt(e,t,n){let s=!0;if(((0,S.isTypedArray)(e)||(0,S.isTypedArray)(t))&&(s=!1),(0,S.isTypedArray)(e)&&(0,S.isTypedArray)(t)&&(s=!0),s){const n=e.constructor.name,s=t.constructor.name;if(n!==s)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${s}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=(0,kt.C)(e),s=(0,kt.C)(t);if(!(0,k.cO)(n,s))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${s}]`)}const r=(0,S.isTypedArray)(e)?e:(0,S.flatten)(e),a=(0,S.isTypedArray)(t)?t:(0,S.flatten)(t);if(r.length!==a.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${a.length}.\nActual:   ${r}.\nExpected: ${a}.`);for(let i=0;i<a.length;++i){const e=r[i],t=a[i];if(!n(e,t))throw new Error(`Arrays differ: actual[${i}] = ${e}, expected[${i}] = ${t}.\nActual:   ${r}.\nExpected: ${a}.`)}"undefined"!=typeof expect&&expect().nothing()}function Kt(e,t){e().then((()=>t.fail()),(()=>t())),"undefined"!=typeof expect&&expect().nothing()}function Qt(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return(0,k.HD)(e)||(0,k.HD)(e[0])||(0,k.HD)(t)||(0,k.HD)(t[0])?qt(e,n,((e,t)=>e==t)):qt(e,t,((e,t)=>Jt(e,t,0)))}function Yt(e,t,n){if(null==n&&(n=Xt()),!Jt(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!=typeof expect&&expect().nothing()}function Jt(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Zt(e,t,n){for(let s=0;s<e.length;s++)if(e[s]<t||e[s]>n)throw new Error(`Value out of range:${e[s]} low: ${t}, high: ${n}`)}function en(e,t){const n=new Float32Array(e),s=new Float32Array(t);if(n.length!==s.length)throw new Error(`Expected ArrayBuffer to be of length ${s.length}, but it was ${n.length}`);for(let r=0;r<s.length;r++)if(n[r]!==s[r])throw new Error(`Expected ArrayBuffer value at ${r} to be ${s[r]} but got ${n[r]} instead`)}function tn(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?tn(n):e[t]=(0,S.encodeString)(n)}return e}function nn(e){const t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise((e=>{t.addEventListener("loadeddata",(n=>e(t))),t.load()}))}async function sn(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise((t=>{e.requestVideoFrameCallback(t)}))}const rn="4.6.0";class an{static sgd(e){return new Je(e)}static momentum(e,t,n=!1){return new Ze(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new et(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new qe(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new Ve(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new Ye(e,t,n,s,r)}static adagrad(e,t=.1){return new He(e,t)}}var on=n(66261),un=n(97049),ln=n(72375);const cn=an,hn="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function pn(){return new Promise((e=>hn((()=>e()))))}var dn=n(15422);function fn(e,t){const n=e[0].length;e.forEach(((e,t)=>{k.hu(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),k.hu(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const s=e[0];e.forEach(((e,r)=>{for(let a=0;a<n;a++)k.hu(a===t||e[a]===s[a],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`))}))}function mn(e,t){const n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}var gn,yn=n(86294),bn=n(16077);function xn(e,t,n){let s=new Array;if(null==n&&null==t)return s;if(null==t)for(;s.length<e+n.length;)s.push(-1);else s=t.slice();if(null==n)return s;if(e+n.length!==s.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${s.length}`);for(let r=1;r<n.length;++r){const a=n[r],i=s[s.length-n.length+r],o=s[i];if(a>=0)if(o>=0){if(o!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+e}] = ${a} but shape[${r+e}] = ${o}`)}else s[i]=a}return s}function wn(e){const t={FIRST_DIM_SIZE:gn.FIRST_DIM_SIZE,VALUE_ROWIDS:gn.VALUE_ROWIDS,ROW_LENGTHS:gn.ROW_LENGTHS,ROW_SPLITS:gn.ROW_SPLITS,ROW_LIMITS:gn.ROW_LIMITS,ROW_STARTS:gn.ROW_STARTS},n=[];for(const s of e){if(!(s in t))break;n.push(t[s])}return n}function vn(e){return 0===e.length?0:e[0]===gn.FIRST_DIM_SIZE?e.length-1:e.length}function kn(e,t){if(null==e||null==t)return;const n=e.length,s=t.length;if(n>=s)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(n,s-1);++r){const n=e[r],s=t[r+1];if(n>=0&&s>=0&&1!==n&&n!==s)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-e.length}] = ${n} but ragged tensor input.flatValues.shape[${r-e.length}] = ${s}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(gn||(gn={}));const In=30;function Sn(e){return e<=In?e:(0,k.jP)(e,Math.floor(Math.sqrt(e)))}function Nn(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Tn(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let s=0;s<n;++s)r=r.concat([e[s+1]/t[s],t[s]]);r=r.concat(e.slice(n+1))}return r}function Cn(e,t,n=!0){const s=[];if(n){s.push(t);for(let n=t+1;n<e;++n)n<=2*t?(s.push(n),s.push(n-(t+1))):s.push(n)}else{const n=[],r=[];for(let s=1;s<e;++s)s>=2*t+1||s%2==1?r.push(s):n.push(s);s.push(...n),s.push(0),s.push(...r)}return s}function $n(e,t,n,s=!0){const r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?s?r.push(t[a-1]*e[a]):r.push(e[a]/t[a-1]):r.push(e[a]);return r}function En(e,t){const n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function An(e,t,n){const s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}var Dn=n(41627);const Rn=.3275911,_n=.254829592,Fn=-.284496736,On=1.421413741,Mn=-1.453152027,Bn=1.061405429;var zn=n(19164);function Ln(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function Un(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function Wn(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function Pn(e){const t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function Vn(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Gn(e,t,n,s){e[2*s]=t,e[2*s+1]=n}function Hn(e,t){const n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function jn(e,t,n){const s=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(s),imag:Math.sin(s)}}const Xn="->",qn=/->/g;function Kn(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(qn,"").length)/Xn.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[s,r]=e.split(Xn);(0,k.hu)(-1===s.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const a=s.split(","),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let h=0;h<r.length;++h){const e=r[h];if(!a.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let h=0;h<s.length;++h){const e=s[h];-1===o.indexOf(e)&&","!==e&&o.push(e)}const u=new Array(a.length);for(let h=0;h<i;++h){if(new Set(a[h].split("")).size!==a[h].length)throw new Error(`Found duplicate axes in input component ${a[h]}. Support for duplicate axes in input is not implemented yet.`);u[h]=[];for(let e=0;e<a[h].length;++e)u[h].push(o.indexOf(a[h][e]))}const l=o.length,c=[];for(let h=r.length;h<l;++h)c.push(h);return{allDims:o,summedDims:c,idDims:u}}function Qn(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;const s=[];for(let r=0;r<e;++r)-1===n[r]&&s.push(r);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:s}}function Yn(e,t,n){const s=new Array(e);for(let r=0;r<n.length;++r){const e=n[r].shape;for(let n=0;n<t[r].length;++n)void 0===s[t[r][n]]?s[t[r][n]]=e[n]:(0,k.hu)(s[t[r][n]]===e[n],(()=>`Expected dimension ${s[t[r][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function Jn(e,t){const n=e,s=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let i=0;i<r;++i)s.push([]);const a=[];for(let i=0;i<n.length;++i){const e=es(t,n[i]);for(const t of e)-1===a.indexOf(t)&&(s[i].push(t),a.push(t))}return{path:n,steps:s}}function Zn(e){return e.every(((e,t)=>e===t))}function es(e,t){const n=[];for(let s=0;s<e.length;++s)0!==e[s].length&&-1===e[s].indexOf(t)&&-1!==t||n.push(s);return n}function ts(e,t,n=0){let s=[];if("number"==typeof t)(0,k.hu)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,k.hu)(r<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const s=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-s}(0,k.hu)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=t}return s}function ns(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function ss(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function rs(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function as(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function is(e,t){return`size ${e} must be non-negative, not ${t}`}function os(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function us(e,t){return`Input to reshape is a SparseTensor with ${(0,k.NA)(e)}\n  dense values, but the requested shape requires a multiple of ${(0,k.NA)(t)}. inputShape=${e} outputShape= ${t}`}function ls(e,t){return`Input to reshape is a tensor with ${(0,k.NA)(e)} dense values, but the requested shape has ${(0,k.NA)(t)}. inputShape=${e} outputShape=${t}`}function cs(){return"segment ids must be >= 0"}function hs(){return"segment ids are not increasing"}function ps(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function ds(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function fs(e,t){let n,s=!1;for(e<=In?(n=e,s=!0):n=(0,k.jP)(e,Math.floor(Math.sqrt(e)));!s;)n>t||n===e?s=!0:n=(0,k.jP)(e,n+1);return n}function ms(e,t,n){const s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function gs(e,t,n,s){const r=t.shape.length,a=e.shape.length;if(0!==s&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (\n    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let h=0;h<s;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let h=0;h<s;++h)o.push(e.shape[h]),u*=e.shape[h];for(let h=s;h<n;h++)o.push(e.shape[h]),l*=e.shape[h];for(let h=s;h<r;h++)o.push(t.shape[h]);for(let h=n+1;h<a;h++)o.push(e.shape[h]),c*=e.shape[h];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function ys(e){try{return e.map((e=>(0,S.decodeString)(e)))}catch(ks){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${ks}`)}}function bs(e){return e.map((e=>(0,S.encodeString)(e)))}var xs=n(80662),ws=n(14810),vs=n(22439);!function(){for(const e of tt)We(e)}()},65853:(e,t,n)=>{"use strict";n.d(t,{$HU:()=>bt,$g6:()=>te,$w:()=>K,Acj:()=>be,BMI:()=>We,BiW:()=>mt,Byc:()=>W,CAk:()=>Ce,CQl:()=>ft,D2d:()=>Kt,DlI:()=>pt,Eh3:()=>R,FKq:()=>Ut,G3Y:()=>cn,GBy:()=>Wt,Gcp:()=>Gt,HEU:()=>se,HZH:()=>wt,Hhh:()=>ze,Hmb:()=>kt,IKK:()=>l,IMb:()=>w,J$2:()=>Ne,J7O:()=>Le,J_u:()=>ve,JhU:()=>y,Kgp:()=>lt,L8s:()=>Vt,Ly9:()=>N,M2y:()=>p,MIZ:()=>an,MRv:()=>Lt,MZg:()=>_e,NEP:()=>ie,NZg:()=>Je,O3z:()=>Ht,OAf:()=>Ge,OR:()=>pe,OU7:()=>He,OV7:()=>Ve,Omj:()=>re,Oyi:()=>m,PYm:()=>De,PhF:()=>Rt,QCc:()=>g,QRR:()=>G,Qg5:()=>we,QiL:()=>ot,Qvg:()=>dn,RFZ:()=>C,ROF:()=>b,RQH:()=>Ot,RuY:()=>mn,SIB:()=>At,SX0:()=>ne,SYM:()=>s,SbG:()=>Nt,SpW:()=>a,T0n:()=>H,TQc:()=>Pt,TR1:()=>U,ToN:()=>pn,Tr8:()=>sn,Uyb:()=>he,VGw:()=>r,Vbg:()=>Ye,VcC:()=>V,VfG:()=>Re,Vn9:()=>J,W0H:()=>rt,XDQ:()=>fn,XLW:()=>v,XkS:()=>nn,Xze:()=>o,Y0y:()=>ue,YFo:()=>oe,YoZ:()=>Ue,ZbH:()=>Ee,ZjV:()=>qt,Zz9:()=>A,_JP:()=>en,_V0:()=>wn,_Yw:()=>It,_k9:()=>x,_tC:()=>Qt,a5O:()=>zt,aJk:()=>h,avt:()=>ke,b9H:()=>bn,bK0:()=>Yt,bV0:()=>$t,c17:()=>qe,cWu:()=>un,cie:()=>j,cye:()=>st,dDz:()=>dt,deh:()=>ce,dpD:()=>vt,e07:()=>Ct,e0R:()=>Jt,e6w:()=>gt,e7N:()=>$e,eBW:()=>yn,eEB:()=>T,eZ0:()=>Be,ekb:()=>Y,gJX:()=>$,h8e:()=>gn,hCO:()=>S,hGc:()=>Z,hdR:()=>ae,i5y:()=>Bt,iHb:()=>P,iJz:()=>xe,iWB:()=>Ie,iZT:()=>ye,ik2:()=>z,jMg:()=>f,jQk:()=>Zt,jQs:()=>Qe,jeX:()=>de,kU:()=>Ae,kpP:()=>hn,kuV:()=>et,luS:()=>vn,lyA:()=>ut,mKl:()=>Tt,mTV:()=>Pe,mc4:()=>L,mhS:()=>_,mm_:()=>i,n9L:()=>on,nhH:()=>jt,nr8:()=>Dt,o0g:()=>ht,o2y:()=>B,oFR:()=>_t,oHH:()=>ee,oT6:()=>u,p2w:()=>Ft,p4S:()=>Q,pe_:()=>ct,q1x:()=>ge,q2K:()=>Xe,q8u:()=>Ke,qCd:()=>Oe,qIC:()=>Me,qWM:()=>at,qi_:()=>me,qkr:()=>xt,qw7:()=>d,r7n:()=>Se,s1s:()=>tn,sEM:()=>rn,sHE:()=>fe,sJF:()=>c,sL$:()=>X,usg:()=>xn,uv1:()=>nt,vFR:()=>je,vtC:()=>Te,vwp:()=>le,w3H:()=>Xt,w6g:()=>Fe,wUP:()=>F,wYB:()=>Mt,wYn:()=>Ze,we_:()=>it,wm:()=>O,wx7:()=>ln,x12:()=>M,xJR:()=>yt,xQA:()=>Et,xnO:()=>E,y7R:()=>q,yQU:()=>tt,yj2:()=>D,zbQ:()=>St,zvY:()=>I,zws:()=>k});const s="Abs",r="Acos",a="Acosh",i="Add",o="AddN",u="All",l="Any",c="ArgMax",h="ArgMin",p="Asin",d="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",b="AvgPoolGrad",x="AvgPool3D",w="AvgPool3DGrad",v="BatchMatMul",k="BatchToSpaceND",I="Bincount",S="BitwiseAnd",N="BroadcastTo",T="BroadcastArgs",C="Cast",$="Ceil",E="ClipByValue",A="Complex",D="ComplexAbs",R="Concat",_="Conv2D",F="Conv2DBackpropFilter",O="Conv2DBackpropInput",M="Conv3D",B="Conv3DBackpropFilterV2",z="Conv3DBackpropInputV2",L="Cos",U="Cosh",W="Cumprod",P="Cumsum",V="CropAndResize",G="DenseBincount",H="DepthToSpace",j="DepthwiseConv2dNative",X="DepthwiseConv2dNativeBackpropFilter",q="DepthwiseConv2dNativeBackpropInput",K="Diag",Q="Dilation2D",Y="Dilation2DBackpropInput",J="Dilation2DBackpropFilter",Z="Draw",ee="RealDiv",te="Einsum",ne="Elu",se="EluGrad",re="Erf",ae="Equal",ie="Exp",oe="ExpandDims",ue="Expm1",le="FFT",ce="Fill",he="FlipLeftRight",pe="Floor",de="FloorDiv",fe="FusedBatchNorm",me="GatherV2",ge="GatherNd",ye="Greater",be="GreaterEqual",xe="Identity",we="IFFT",ve="Imag",ke="IsFinite",Ie="IsInf",Se="IsNan",Ne="LeakyRelu",Te="Less",Ce="LessEqual",$e="LinSpace",Ee="Log",Ae="Log1p",De="LogicalAnd",Re="LogicalNot",_e="LogicalOr",Fe="LogicalXor",Oe="LogSoftmax",Me="LowerBound",Be="LRN",ze="LRNGrad",Le="MatrixBandPart",Ue="Max",We="Maximum",Pe="MaxPool",Ve="MaxPoolGrad",Ge="MaxPool3D",He="MaxPool3DGrad",je="MaxPoolWithArgmax",Xe="Mean",qe="Min",Ke="Minimum",Qe="MirrorPad",Ye="Mod",Je="Multinomial",Ze="Multiply",et="Neg",tt="NotEqual",nt="NonMaxSuppressionV3",st="NonMaxSuppressionV4",rt="NonMaxSuppressionV5",at="OnesLike",it="OneHot",ot="Pack",ut="PadV2",lt="Pool",ct="Pow",ht="Prelu",pt="Prod",dt="RaggedGather",ft="RaggedRange",mt="RaggedTensorToTensor",gt="Range",yt="Real",bt="Reciprocal",xt="Relu",wt="Reshape",vt="ResizeNearestNeighbor",kt="ResizeNearestNeighborGrad",It="ResizeBilinear",St="ResizeBilinearGrad",Nt="Relu6",Tt="Reverse",Ct="Round",$t="Rsqrt",Et="ScatterNd",At="TensorScatterUpdate",Dt="SearchSorted",Rt="Select",_t="Selu",Ft="Slice",Ot="Sin",Mt="Sinh",Bt="Sign",zt="Sigmoid",Lt="Softplus",Ut="Sqrt",Wt="Sum",Pt="SpaceToBatchND",Vt="SplitV",Gt="Softmax",Ht="SparseFillEmptyRows",jt="SparseReshape",Xt="SparseSegmentMean",qt="SparseSegmentSum",Kt="SparseToDense",Qt="SquaredDifference",Yt="Square",Jt="StaticRegexReplace",Zt="StridedSlice",en="StringNGrams",tn="StringSplit",nn="StringToHashBucketFast",sn="Sub",rn="Tan",an="Tanh",on="Tile",un="TopK",ln="Transform",cn="Transpose",hn="Unique",pn="Unpack",dn="UnsortedSegmentSum",fn="UpperBound",mn="ZerosLike",gn="Step",yn="FromPixels",bn="RotateWithOffset",xn="_FusedMatMul",wn="FusedConv2D",vn="FusedDepthwiseConv2D"},74300:(e,t,n)=>{"use strict";n.d(t,{Li:()=>p,T3:()=>m,bt:()=>f,nE:()=>d,pI:()=>u,tr:()=>c,uk:()=>l,wC:()=>h});var s=n(75658),r=n(79700),a=n(19164);const i=(0,r.R)("kernelRegistry",(()=>new Map)),o=(0,r.R)("gradRegistry",(()=>new Map));function u(e,t){const n=g(e,t);return i.get(n)}function l(e){return o.get(e)}function c(e){const t=i.entries(),n=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[a,i]=r,[o]=a.split("_");o===e&&n.push(i)}return n}function h(e){const{kernelName:t,backendName:n}=e,s=g(t,n);i.has(s)&&a.Z(`The kernel '${t}' for backend '${n}' is already registered`),i.set(s,e)}function p(e){const{kernelName:t}=e;o.has(t)&&(0,s.OB)().getBool("DEBUG")&&a.Z(`Overriding the gradient for '${t}'`),o.set(t,e)}function d(e,t){const n=g(e,t);if(!i.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);i.delete(n)}function f(e){if(!o.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);o.delete(e)}function m(e,t){c(e).forEach((e=>{h(Object.assign({},e,{backendName:t}))}))}function g(e,t){return`${t}_${e}`}},19164:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r,c:()=>a});var s=n(75658);function r(...e){(0,s.OB)().getBool("IS_TEST")||(0,s.OB)().getBool("PROD")||console.warn(...e)}function a(...e){(0,s.OB)().getBool("IS_TEST")||(0,s.OB)().getBool("PROD")||console.log(...e)}},38116:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({abs_:function(e){const t=(0,a._1)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return s.BV.runKernel(r.yj2,e)}{const e={x:t};return s.BV.runKernel(r.SYM,e)}}})},31546:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({acos_:function(e){const t={x:(0,a._1)(e,"x","acos")};return s.BV.runKernel(r.VGw,t)}})},63456:(e,t,n)=>{"use strict";n.d(t,{_:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({acosh_:function(e){const t={x:(0,a._1)(e,"x","acosh")};return s.BV.runKernel(r.SpW,t)}})},37672:(e,t,n)=>{"use strict";n.d(t,{I:()=>o});var s=n(47672),r=n(65853),a=n(54699),i=n(53133);const o=(0,n(83118).op)({add_:function(e,t){let n=(0,i._1)(e,"a","add"),o=(0,i._1)(t,"b","add");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return s.BV.runKernel(r.mm_,u)}})},73497:(e,t,n)=>{"use strict";n.d(t,{$:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({all_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","all","bool")},o={axis:t,keepDims:n};return s.BV.runKernel(r.oT6,i,o)}})},45053:(e,t,n)=>{"use strict";n.d(t,{Y:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({any_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","any","bool")},o={axis:t,keepDims:n};return s.BV.runKernel(r.IKK,i,o)}})},84069:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({argMax_:function(e,t=0){const n={x:(0,a._1)(e,"x","argMax")},i={axis:t};return s.BV.runKernel(r.sJF,n,i)}})},77480:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({argMin_:function(e,t=0){const n={x:(0,a._1)(e,"x","argMin")},i={axis:t};return s.BV.runKernel(r.aJk,n,i)}})},53054:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({asin_:function(e){const t={x:(0,a._1)(e,"x","asin")};return s.BV.runKernel(r.M2y,t)}})},99273:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({asinh_:function(e){const t={x:(0,a._1)(e,"x","asinh")};return s.BV.runKernel(r.qw7,t)}})},39889:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({atan_:function(e){const t={x:(0,a._1)(e,"x","atan")};return s.BV.runKernel(r.jMg,t)}})},432:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var s=n(47672),r=n(65853),a=n(54699),i=n(53133);const o=(0,n(83118).op)({atan2_:function(e,t){let n=(0,i._1)(e,"a","atan2"),o=(0,i._1)(t,"b","atan2");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return s.BV.runKernel(r.QCc,u)}})},83052:(e,t,n)=>{"use strict";n.d(t,{C:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({atanh_:function(e){const t={x:(0,a._1)(e,"x","atanh")};return s.BV.runKernel(r.Oyi,t)}})},78940:(e,t,n)=>{"use strict";n.d(t,{w:()=>h});var s=n(47672),r=n(65853),a=n(53133),i=n(50756),o=n(27742),u=n(86294),l=n(83118),c=n(66398);const h=(0,l.op)({avgPool_:function(e,t,n,l,h){const p=(0,a._1)(e,"x","avgPool","float32");i.hu(u.jT(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let d=p,f=!1;3===p.rank&&(f=!0,d=(0,c.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.hu(4===d.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${d.rank}.`)),u.m("avgPool",l,h);const m={x:d},g={filterSize:t,strides:n,pad:l,dimRoundingMode:h};let y=s.BV.runKernel(r.JhU,m,g);return y=(0,o.p)(y,p.dtype),f?(0,c.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},15422:(e,t,n)=>{"use strict";n.d(t,{LJ:()=>c,Q3:()=>l,Vh:()=>a,YB:()=>r,kz:()=>i,lB:()=>u,rv:()=>o,sY:()=>h});var s=n(50756);function r(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function a(e,t,n){const s=e.length+t.length,r=[];let a=0,i=0;for(let o=0;o<s;o++)-1===n.indexOf(o)?r.push(e[a++]):r.push(t[i++]);return r}function i(e,t){const n=[],s=e.length;for(let r=0;r<s;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function o(e,t){return a(e,t.map((e=>1)),t)}function u(e,t,n){s.hu(r(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function l(e,t){if(r(e,t))return null;const n=[];for(let s=0;s<t;++s)-1===e.indexOf(s)&&n.push(s);return e.forEach((e=>n.push(e))),n}function c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function h(e,t){const n=[];for(let s=t-e;s<t;++s)n.push(s);return n}},24131:(e,t,n)=>{"use strict";n.d(t,{E:()=>o});var s=n(47672),r=n(65853),a=n(53133),i=n(50756);const o=(0,n(83118).op)({batchToSpaceND_:function(e,t,n){const o=(0,a._1)(e,"x","batchToSpaceND"),u=t.reduce(((e,t)=>e*t));i.hu(o.rank>=1+t.length,(()=>`input rank is ${o.rank} but should be > than blockShape.length ${t.length}`)),i.hu(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),i.hu(o.shape[0]%u==0,(()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${u}`));const l={x:o},c={blockShape:t,crops:n};return s.BV.runKernel(r.zws,l,c)}})},58861:(e,t,n)=>{"use strict";n.d(t,{t:()=>u});var s=n(47672),r=n(65853),a=n(53133),i=n(50756),o=n(66398);const u=(0,n(83118).op)({batchNorm_:function(e,t,n,u,l,c){null==c&&(c=.001);const h=(0,a._1)(e,"x","batchNorm"),p=(0,a._1)(t,"mean","batchNorm"),d=(0,a._1)(n,"variance","batchNorm");let f,m;null!=l&&(f=(0,a._1)(l,"scale","batchNorm")),null!=u&&(m=(0,a._1)(u,"offset","batchNorm")),i.hu(p.rank===d.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),i.hu(null==m||p.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),i.hu(null==f||p.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g=function(e){let t;return t=0===e.rank||1===e.rank?(0,o.X)(e,[1,1,1,e.size]):2===e.rank?(0,o.X)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,o.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(h),y={x:g,scale:f,offset:m,mean:p,variance:d},b={varianceEpsilon:c},x=s.BV.runKernel(r.sHE,y,b);return(0,o.X)(x,h.shape)}})},14580:(e,t,n)=>{"use strict";n.d(t,{U:()=>c});var s=n(47672),r=n(65853),a=n(53133),i=n(50756),o=n(62469),u=n(83118),l=n(66398);const c=(0,u.op)({broadcastTo_:function(e,t){let n=(0,a._1)(e,"broadcastTo","x");const u=n.shape;if((0,i.Mu)(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,l.X)(n,e)}const c=n.shape,h=Array.from(t);for(let s=t.length-1;s>=0;s--)if(c[s]===t[s])h[s]=1;else if(1!==n.shape[s])throw new Error(`broadcastTo(): [${u}] cannot be broadcast to [${t}].`);if(0===h.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,o.d)(n);const p={x:n},d={reps:h};return s.BV.runKernel(r.n9L,p,d)}})},65052:(e,t,n)=>{"use strict";function s(e,t){const n=e.length,s=[];for(let r=0;r<n;r++){const a=n-1-r,i=e[a]||1;(t[t.length-1-r]||1)>1&&1===i&&s.unshift(a)}return s}function r(e,t){const n=[];for(let s=0;s<t.length;s++){const r=e[e.length-s-1],a=t.length-s-1,i=t[a];(null==r||1===r&&i>1)&&n.unshift(a)}return n}function a(e,t){const n=Math.max(e.length,t.length),s=new Array(n);for(let r=0;r<n;r++){let a=e[e.length-r-1];null==a&&(a=1);let i=t[t.length-r-1];if(null==i&&(i=1),1===a)s[n-r-1]=i;else if(1===i)s[n-r-1]=a;else{if(a!==i){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}s[n-r-1]=a}}return s}n.r(t),n.d(t,{assertAndGetBroadcastShape:()=>a,getBroadcastDims:()=>s,getReductionAxes:()=>r})},79410:(e,t,n)=>{"use strict";n.d(t,{f:()=>a});var s=n(39608),r=n(50756);function a(e,t="float32",n){return t=t||"float32",r.Mu(e),new s.YD(e,t,n)}},27742:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var s=n(47672),r=n(65853),a=n(53133),i=n(50756);const o=(0,n(83118).op)({cast_:function(e,t){const n=(0,a._1)(e,"x","cast");if(!i.LP(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const o={x:n},u={dtype:t};return s.BV.runKernel(r.RFZ,o,u)}})},85402:(e,t,n)=>{"use strict";n.d(t,{m:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({ceil_:function(e){const t={x:(0,a._1)(e,"x","ceil","float32")};return s.BV.runKernel(r.gJX,t)}})},74983:(e,t,n)=>{"use strict";n.d(t,{i:()=>u});var s=n(47672),r=n(65853),a=n(53133),i=n(50756),o=n(33173);const u=(0,n(83118).op)({clipByValue_:function(e,t,n){const u=(0,a._1)(e,"x","clipByValue");if(i.hu(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return(0,o.h)(u.shape,t,u.dtype);const l={x:u},c={clipValueMin:t,clipValueMax:n};return s.BV.runKernel(r.xnO,l,c)}})},62469:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({clone_:function(e){const t={x:(0,a._1)(e,"x","clone","string_or_numeric")};return s.BV.runKernel(r.iJz,t)}})},37496:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var s=n(47672),r=n(65853),a=n(53133),i=n(50756);const o=(0,n(83118).op)({complex_:function(e,t){const n=(0,a._1)(e,"real","complex"),o=(0,a._1)(t,"imag","complex");i.k5(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`);const u={real:n,imag:o};return s.BV.runKernel(r.Zz9,u)}})},2344:(e,t,n)=>{"use strict";n.d(t,{z:()=>u});var s=n(47672),r=n(65853),a=n(53133),i=n(50756),o=n(62469);const u=(0,n(83118).op)({concat_:function(e,t=0){(0,i.hu)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,a.sI)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return(0,o.d)(n[0]);const u=n,l={axis:t};return s.BV.runKernel(r.Eh3,u,l)}})},8695:(e,t,n)=>{"use strict";n.d(t,{P:()=>l});var s=n(53133),r=n(50756),a=n(46387),i=n(86294),o=n(83118),u=n(66398);const l=(0,o.op)({conv1d_:function(e,t,n,o,l="NWC",c=1,h){const p=(0,s._1)(e,"x","conv1d"),d=(0,s._1)(t,"filter","conv1d");let f=p,m=!1;2===p.rank&&(m=!0,f=(0,u.X)(p,[1,p.shape[0],p.shape[1]])),r.hu(3===f.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`)),r.hu(3===d.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${d.rank}.`)),i.m("conv1d",o,h),r.hu(f.shape[2]===d.shape[1],(()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${d.shape[1]}.`)),r.hu(i.jT(n,c),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${c}'`)),r.hu(i.U3(c),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),r.hu(i.U3(n),(()=>"Error in conv1D: Stride should be larger than 0.")),r.hu("NWC"===l,(()=>`Error in conv1d: got dataFormat of ${l} but only NWC is currently supported.`));const g=(0,u.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),y=(0,u.X)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),b=[1,n],x=[1,c],w=(0,a.T)(y,g,b,o,"NHWC",x,h);return m?(0,u.X)(w,[w.shape[2],w.shape[3]]):(0,u.X)(w,[w.shape[0],w.shape[2],w.shape[3]])}})},46387:(e,t,n)=>{"use strict";n.d(t,{T:()=>c});var s=n(47672),r=n(65853),a=n(53133),i=n(50756),o=n(86294),u=n(83118),l=n(66398);const c=(0,u.op)({conv2d_:function(e,t,n,u,c="NHWC",h=[1,1],p){const d=(0,a._1)(e,"x","conv2d","float32"),f=(0,a._1)(t,"filter","conv2d","float32");let m=d,g=!1;3===d.rank&&(g=!0,m=(0,l.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.hu(4===m.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`)),i.hu(4===f.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`)),o.m("conv2d",u,p);const y="NHWC"===c?m.shape[3]:m.shape[1];i.hu(y===f.shape[2],(()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${f.shape[2]}.`)),i.hu(o.jT(n,h),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${h}'`)),i.hu(o.U3(h),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),i.hu(o.U3(n),(()=>"Error in conv2D: Strides should be larger than 0."));const b={x:m,filter:f},x={strides:n,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p},w=s.BV.runKernel(r.mhS,b,x);return g?(0,l.X)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})},35064:(e,t,n)=>{"use strict";n.d(t,{p:()=>l});var s=n(47672),r=n(65853),a=n(50756),i=n(86294),o=n(83118),u=n(66398);const l=(0,o.op)({conv2DBackpropFilter_:function(e,t,n,o,l,c="NHWC",h){let p=e;3===e.rank&&(p=(0,u.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=(0,u.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),a.hu(4===p.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${p.shape}.`)),a.hu(4===d.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${d.shape}.`)),a.hu(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const f="NHWC"===c?p.shape[3]:p.shape[1],m="NHWC"===c?d.shape[3]:d.shape[1];a.hu(f===n[2],(()=>`Error in conv2dDerFilter: depth of input ${f}) must match input depth in filter (${n[2]}.`)),a.hu(m===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${m}) must match output depth for filter (${n[3]}).`)),i.m("conv2dDerFilter",l,h);const g={x:p,dy:d},y={strides:o,pad:l,dataFormat:c,dimRoundingMode:h,filterShape:n};return s.BV.runKernel(r.wUP,g,y)}})},46753:(e,t,n)=>{"use strict";n.d(t,{_:()=>l});var s=n(47672),r=n(65853),a=n(50756),i=n(86294),o=n(83118),u=n(66398);const l=(0,o.op)({conv2DBackpropInput_:function(e,t,n,o,l,c="NHWC",h){a.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let p=e,d=t,f=!1;3===t.rank&&(f=!0,d=(0,u.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),p=[1,e[0],e[1],e[2]]),a.hu(4===p.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${p.length}.`)),a.hu(4===d.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${d.rank}`)),a.hu(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const m="NHWC"===c?p[3]:p[1],g="NHWC"===c?d.shape[3]:d.shape[1];a.hu(m===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${m}) must match input depth for filter ${n.shape[2]}.`)),a.hu(g===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${g}) must match output depth for filter ${n.shape[3]}.`)),i.m("conv2dDerInput",l,h);const y={dy:d,filter:n},b={strides:o,pad:l,dataFormat:c,dimRoundingMode:h,inputShape:p},x=s.BV.runKernel(r.wm,y,b);return f?(0,u.X)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},74337:(e,t,n)=>{"use strict";n.d(t,{b:()=>a});var s=n(53133),r=n(46753);const a=(0,n(83118).op)({conv2dTranspose_:function(e,t,n,a,i,o){const u=(0,s._1)(e,"x","conv2dTranspose"),l=(0,s._1)(t,"filter","conv2dTranspose");return(0,r._)(n,u,l,a,i,"NHWC",o)}})},26402:(e,t,n)=>{"use strict";n.d(t,{_:()=>u});var s=n(47672),r=n(65853),a=n(50756),i=n(83118),o=n(66398);const u=(0,i.op)({conv3DBackpropInput_:function(e,t,n,i,u){a.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let l=e,c=t,h=!1;4===t.rank&&(h=!0,c=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),l=[1,e[0],e[1],e[2],e[3]]);const p=l[4],d=c.shape[4];a.hu(5===l.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${l.length}.`)),a.hu(5===c.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${c.rank}`)),a.hu(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),a.hu(p===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${p}) must match input depth for filter ${n.shape[3]}.`)),a.hu(d===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[4]}.`));const f={dy:c,filter:n},m={pad:u,strides:i,inputShape:l},g=s.BV.runKernel(r.ik2,f,m);return h?(0,o.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},86294:(e,t,n)=>{"use strict";n.d(t,{I0:()=>f,Ix:()=>o,Rf:()=>r,U3:()=>g,Xw:()=>a,aO:()=>l,jT:()=>m,jw:()=>u,m:()=>b,pl:()=>i,sl:()=>y});var s=n(50756);function r(e,t,n,s,r="NHWC",a){return o(e,[...t,e[3]],n,a,s,null,null,y(r))}function a(e,t,n,s,r,a,i="channelsLast"){const[u,l]=c(t);let h;if("channelsLast"===i)h=[u,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);h=[u,l,e[1],e[1]]}return o(e,h,n,s,r,a,!1,i)}function i(e,t,n,s,r,a,i="NDHWC"){const[o,l,c]=h(t);let p,d;if("NDHWC"===i)d="channelsLast",p=[o,l,c,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);d="channelsFirst",p=[o,l,c,e[1],e[1]]}return u(e,p,n,s,r,!1,d,a)}function o(e,t,n,s,r,a,i=!1,o="channelsLast"){let[u,h,f,m]=[-1,-1,-1,-1];if("channelsLast"===o)[u,h,f,m]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,m,h,f]=e}const[g,y,,b]=t,[x,w]=c(n),[v,k]=c(s),I=p(g,v),S=p(y,k),{padInfo:N,outHeight:T,outWidth:C}=function(e,t,n,s,r,a,i,o,u){let c,h,p;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,s,r){null==s&&(s=l(e,t,n));const a=e[0],i=e[1],o=d((a-t+2*s)/n+1,r),u=d((i-t+2*s)/n+1,r);return[o,u]}([t,n],a,s,e,o);h=r[0],p=r[1]}else if("same"===e){h=Math.ceil(t/s),p=Math.ceil(n/r);const e=Math.max(0,(h-1)*s+a-t),o=Math.max(0,(p-1)*r+i-n),u=Math.floor(e/2),l=e-u,d=Math.floor(o/2);c={top:u,bottom:l,left:d,right:o-d,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((t-a+1)/s),p=Math.ceil((n-i+1)/r);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const l="channelsLast"===u?e[1][0]:e[2][0],f="channelsLast"===u?e[1][1]:e[2][1],m="channelsLast"===u?e[2][0]:e[3][0],g="channelsLast"===u?e[2][1]:e[3][1];c={top:l,bottom:f,left:m,right:g,type:0===l&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},h=d((t-a+l+f)/s+1,o),p=d((n-i+m+g)/r+1,o)}}return{padInfo:c,outHeight:h,outWidth:p}}(r,h,f,x,w,I,S,a,o),$=i?b*m:b;let E;return"channelsFirst"===o?E=[u,$,T,C]:"channelsLast"===o&&(E=[u,T,C,$]),{batchSize:u,dataFormat:o,inHeight:h,inWidth:f,inChannels:m,outHeight:T,outWidth:C,outChannels:$,padInfo:N,strideHeight:x,strideWidth:w,filterHeight:g,filterWidth:y,effectiveFilterHeight:I,effectiveFilterWidth:S,dilationHeight:v,dilationWidth:k,inShape:e,outShape:E,filterShape:t}}function u(e,t,n,s,r,a=!1,i="channelsLast",o){let[u,c,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,c,f,m,g]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,g,c,f,m]=e}const[y,b,x,,w]=t,[v,k,I]=h(n),[S,N,T]=h(s),C=p(y,S),$=p(b,N),E=p(x,T),{padInfo:A,outDepth:D,outHeight:R,outWidth:_}=function(e,t,n,s,r,a,i,o,u,c,h){let p,f,m,g;"valid"===e&&(e=0);if("number"==typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const y=function(e,t,n,s,r,a){null==r&&(r=l(e,t[0],s[0]));const i=[0,0,0,n];for(let o=0;o<3;o++)e[o]+2*r>=t[o]&&(i[o]=d((e[o]-t[o]+2*r)/s[o]+1,a));return i}([t,n,s,1],[o,u,c],1,[r,a,i],e,h);f=y[0],m=y[1],g=y[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{f=Math.ceil(t/r),m=Math.ceil(n/a),g=Math.ceil(s/i);const e=(f-1)*r+o-t,l=(m-1)*a+u-n,h=(g-1)*i+c-s,d=Math.floor(e/2),y=e-d,b=Math.floor(l/2),x=l-b,w=Math.floor(h/2);p={top:b,bottom:x,left:w,right:h-w,front:d,back:y,type:"SAME"}}}return{padInfo:p,outDepth:f,outHeight:m,outWidth:g}}(r,c,f,m,v,k,I,C,$,E,o),F=a?w*g:w;let O;return"channelsFirst"===i?O=[u,F,D,R,_]:"channelsLast"===i&&(O=[u,D,R,_,F]),{batchSize:u,dataFormat:i,inDepth:c,inHeight:f,inWidth:m,inChannels:g,outDepth:D,outHeight:R,outWidth:_,outChannels:F,padInfo:A,strideDepth:v,strideHeight:k,strideWidth:I,filterDepth:y,filterHeight:b,filterWidth:x,effectiveFilterDepth:C,effectiveFilterHeight:$,effectiveFilterWidth:E,dilationDepth:S,dilationHeight:N,dilationWidth:T,inShape:e,outShape:O,filterShape:t}}function l(e,t,n,s=1){const r=p(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function c(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function h(e){return"number"==typeof e?[e,e,e]:e}function p(e,t){return t<=1?e:e+(e-1)*(t-1)}function d(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function f(e){const[t,n,s]=c(e);return 1===t&&1===n&&1===s}function m(e,t){return f(e)||f(t)}function g(e){return c(e).every((e=>e>0))}function y(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function b(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)s.hu(s.GN(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{s.hu(s.GN(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}},96145:(e,t,n)=>{"use strict";n.d(t,{m:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({cos_:function(e){const t={x:(0,a._1)(e,"x","cos","float32")};return s.BV.runKernel(r.mc4,t)}})},48349:(e,t,n)=>{"use strict";n.d(t,{f:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({cosh_:function(e){const t={x:(0,a._1)(e,"x","cosh","float32")};return s.BV.runKernel(r.TR1,t)}})},98520:(e,t,n)=>{"use strict";n.d(t,{$:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({cumprod_:function(e,t=0,n=!1,i=!1){const o={x:(0,a._1)(e,"x","cumprod")},u={axis:t,exclusive:n,reverse:i};return s.BV.runKernel(r.Byc,o,u)}})},91121:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({cumsum_:function(e,t=0,n=!1,i=!1){const o={x:(0,a._1)(e,"x","cumsum")},u={axis:t,exclusive:n,reverse:i};return s.BV.runKernel(r.iHb,o,u)}})},28181:(e,t,n)=>{"use strict";n.d(t,{n:()=>o});var s=n(47672),r=n(65853),a=n(53133),i=n(50756);const o=(0,n(83118).op)({depthToSpace_:function(e,t,n="NHWC"){const o=(0,a._1)(e,"x","depthToSpace","float32"),u="NHWC"===n?o.shape[1]:o.shape[2],l="NHWC"===n?o.shape[2]:o.shape[3],c="NHWC"===n?o.shape[3]:o.shape[1];i.hu(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),i.hu(u*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t}  for depthToSpace with input shape\n    ${o.shape}`)),i.hu(l*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${l} and ${t} for depthToSpace with input shape\n        ${o.shape}`)),i.hu(c%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${c} for depthToSpace with input shape ${o.shape}`));const h={x:o},p={blockSize:t,dataFormat:n};return s.BV.runKernel(r.T0n,h,p)}})},44851:(e,t,n)=>{"use strict";n.d(t,{B:()=>c});var s=n(47672),r=n(65853),a=n(53133),i=n(50756),o=n(86294),u=n(83118),l=n(66398);const c=(0,u.op)({depthwiseConv2d_:function(e,t,n,u,c="NHWC",h=[1,1],p){const d=(0,a._1)(e,"x","depthwiseConv2d","float32"),f=(0,a._1)(t,"filter","depthwiseConv2d","float32");let m=d,g=!1;3===d.rank&&(g=!0,m=(0,l.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.hu(4===m.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`)),i.hu(4===f.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`));const y="NHWC"===c?m.shape[3]:m.shape[1];i.hu(y===f.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${y}) must match the inChannels dimension in filter ${f.shape[2]}.`)),o.m("depthwiseConv2d",u,p);const b={x:m,filter:f},x={strides:n,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p},w=s.BV.runKernel(r.cie,b,x);return g?(0,l.X)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})},57:(e,t,n)=>{"use strict";n.d(t,{z:()=>o});var s=n(47672),r=n(65853),a=n(83118),i=n(66398);const o=(0,a.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,o,u=[1,1],l){let c=e;3===e.rank&&(c=(0,i.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let h=t;3===h.rank&&(h=(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const p={x:c,dy:h},d={strides:a,pad:o,dimRoundingMode:l,dilations:u,filterShape:n};return s.BV.runKernel(r.sL$,p,d)}})},90461:(e,t,n)=>{"use strict";n.d(t,{v:()=>o});var s=n(47672),r=n(65853),a=n(83118),i=n(66398);const o=(0,a.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,o,u=[1,1],l){let c=t,h=!1;3===t.rank&&(h=!0,c=(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const p={dy:c,filter:n},d={strides:a,pad:o,dimRoundingMode:l,dilations:u,inputShape:e},f=s.BV.runKernel(r.y7R,p,d);return h?(0,i.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},54162:(e,t,n)=>{"use strict";n.d(t,{W:()=>l});var s=n(47672),r=n(65853),a=n(53133),i=n(50756),o=n(83118),u=n(66398);const l=(0,o.op)({dilation2d_:function(e,t,n,o,l=[1,1],c="NHWC"){const h=(0,a._1)(e,"x","dilation2d"),p=(0,a._1)(t,"filter","dilation2d");i.hu(3===h.rank||4===h.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${h.rank}.`)),i.hu(3===p.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${p.rank}.`)),i.hu("NHWC"===c,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${c}`));let d=h,f=!1;3===h.rank&&(d=(0,u.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]]),f=!0),i.hu(d.shape[3]===p.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${d.shape[3]} vs ${p.shape[2]}`));const m={x:d,filter:p},g={strides:n,pad:o,dilations:l},y=s.BV.runKernel(r.p4S,m,g);return f?(0,u.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},31323:(e,t,n)=>{"use strict";n.d(t,{h:()=>u});var s=n(47672),r=n(65853),a=n(54699),i=n(53133),o=n(13768);const u=(0,n(83118).op)({div_:function(e,t){let n=(0,i._1)(e,"a","div"),u=(0,i._1)(t,"b","div");if([n,u]=(0,a.makeTypesMatch)(n,u),"int32"===n.dtype&&"int32"===u.dtype)return(0,o.q)(n,u);const l={a:n,b:u};return s.BV.runKernel(r.oHH,l,{})}})},70357:(e,t,n)=>{"use strict";n.d(t,{N:()=>c});var s=n(54699),r=n(53133),a=n(31323),i=n(18022),o=n(83118),u=n(41201),l=n(39047);const c=(0,o.op)({divNoNan_:function(e,t){let n=(0,r._1)(e,"a","div"),o=(0,r._1)(t,"b","div");[n,o]=(0,s.makeTypesMatch)(n,o);const c=(0,a.h)(n,o),h=(0,l.P)(c),p=(0,i.D)(o,h);return(0,u.a)(p,h,c)}})},46032:(e,t,n)=>{"use strict";n.d(t,{A:()=>u});var s=n(53133),r=n(50756),a=n(14274),i=n(83118),o=n(66398);const u=(0,i.op)({dot_:function(e,t){const n=(0,s._1)(e,"t1","dot"),i=(0,s._1)(t,"t2","dot");r.hu(!(1!==n.rank&&2!==n.rank||1!==i.rank&&2!==i.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${i.rank}.`));const u=1===n.rank?n.size:n.shape[1],l=1===i.rank?i.size:i.shape[0];if(r.hu(u===l,(()=>`Error in dot: inner dimensions of inputs must match, but got ${u} and ${l}.`)),1===n.rank&&1===i.rank){const e=(0,o.X)(n,[1,-1]),t=(0,o.X)(i,[-1,1]),s=(0,a.O)(e,t);return(0,o.X)(s,[])}if(1===n.rank&&2===i.rank){const e=(0,o.X)(n,[1,-1]),t=(0,o.X)(i,[i.shape[0],i.shape[1]]),s=(0,a.O)(e,t);return(0,o.X)(s,[s.size])}if(2===n.rank&&1===i.rank){const e=(0,o.X)(i,[-1,1]),t=(0,a.O)(n,e);return(0,o.X)(t,[t.size])}{const e=(0,o.X)(i,[i.shape[0],i.shape[1]]);return(0,a.O)(n,e)}}})},53289:(e,t,n)=>{"use strict";n.d(t,{p:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({elu_:function(e){const t={x:(0,a._1)(e,"x","elu","float32")};return s.BV.runKernel(r.SX0,t)}})},18022:(e,t,n)=>{"use strict";n.d(t,{D:()=>u});var s=n(47672),r=n(65853),a=n(54699),i=n(53133),o=n(65052);const u=(0,n(83118).op)({equal_:function(e,t){let n=(0,i._1)(e,"a","equal","string_or_numeric"),u=(0,i._1)(t,"b","equal","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return s.BV.runKernel(r.hdR,l)}})},20599:(e,t,n)=>{"use strict";n.d(t,{q:()=>u});var s=n(47672),r=n(65853),a=n(53133),i=n(50756),o=n(27742);const u=(0,n(83118).op)({erf_:function(e){let t=(0,a._1)(e,"x","erf");i.hu("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,o.p)(t,"float32"));const n={x:t};return s.BV.runKernel(r.Omj,n)}})},62886:(e,t,n)=>{"use strict";n.d(t,{d:()=>r});var s=n(23153);const r=(0,n(83118).op)({euclideanNorm_:function(e,t=null,n=!1){return(0,s.K)(e,"euclidean",t,n)}})},65270:(e,t,n)=>{"use strict";n.d(t,{Q:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({exp_:function(e){const t={x:(0,a._1)(e,"x","exp")};return s.BV.runKernel(r.NEP,t)}})},2682:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var s=n(47672),r=n(65853),a=n(53133),i=n(50756);const o=(0,n(83118).op)({expandDims_:function(e,t=0){const n=(0,a._1)(e,"x","expandDims","string_or_numeric");i.hu(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const o={input:n},u={dim:t};return s.BV.runKernel(r.YFo,o,u)}})},86799:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({expm1_:function(e){const t={x:(0,a._1)(e,"x","expm1")};return s.BV.runKernel(r.Y0y,t)}})},33173:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var s=n(47672),r=n(65853),a=n(50756);function i(e,t,n){(0,a.Mu)(e);const i={shape:e,value:t,dtype:n=n||(0,a.D2)(t)};return s.BV.runKernel(r.deh,{},i)}},57055:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({floor_:function(e){const t={x:(0,a._1)(e,"x","floor","float32")};return s.BV.runKernel(r.OR,t)}})},13768:(e,t,n)=>{"use strict";n.d(t,{q:()=>o});var s=n(47672),r=n(65853),a=n(54699),i=n(53133);const o=(0,n(83118).op)({floorDiv_:function(e,t){let n=(0,i._1)(e,"a","floorDiv"),o=(0,i._1)(t,"b","floorDiv");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return s.BV.runKernel(r.jeX,u)}})},16077:(e,t,n)=>{"use strict";n.d(t,{Fr:()=>f,QH:()=>g,pf:()=>m,uy:()=>y});var s=n(65052),r=n(53289),a=n(59385),i=n(81009),o=n(70756),u=n(10440),l=n(8459),c=n(66398),h=n(88813),p=n(74431),d=n(16966);function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,i.d)(e,(0,p.N)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function m(e,t){let n=t;const r=s.getReductionAxes(e.shape,t.shape);return r.length>0&&(n=(0,d.S)(n,r)),(0,c.X)(n,e.shape)}function g(e,t,n,s){if("linear"===t)return e;if("relu"===t)return(0,u.U)(e);if("elu"===t)return(0,r.p)(e);if("relu6"===t)return(0,l.b)(e);if("prelu"===t)return(0,o.A)(e,n);if("leakyrelu"===t)return(0,a.h)(e,s);if("sigmoid"===t)return(0,h.X)(e);throw new Error(`Unknown fused activation ${t}.`)}const y=(e,t)=>!(e>0)||"linear"===t},64353:(e,t,n)=>{"use strict";n.d(t,{I:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({gather_:function(e,t,n=0,i=0){const o={x:(0,a._1)(e,"x","gather"),indices:(0,a._1)(t,"indices","gather","int32")},u={axis:n,batchDims:i};return s.BV.runKernel(r.qi_,o,u)}})},66651:(e,t,n)=>{"use strict";n.d(t,{p:()=>u});var s=n(47672),r=n(65853),a=n(54699),i=n(53133),o=n(65052);const u=(0,n(83118).op)({greater_:function(e,t){let n=(0,i._1)(e,"a","greater","string_or_numeric"),u=(0,i._1)(t,"b","greater","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return s.BV.runKernel(r.iZT,l)}})},66928:(e,t,n)=>{"use strict";n.d(t,{b:()=>u});var s=n(47672),r=n(65853),a=n(54699),i=n(53133),o=n(65052);const u=(0,n(83118).op)({greaterEqual_:function(e,t){let n=(0,i._1)(e,"a","greaterEqual","string_or_numeric"),u=(0,i._1)(t,"b","greaterEqual","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return s.BV.runKernel(r.Acj,l)}})},3073:(e,t,n)=>{"use strict";n.d(t,{a:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({imag_:function(e){const t={input:(0,a._1)(e,"input","imag")};return s.BV.runKernel(r.J_u,t)}})},52794:(e,t,n)=>{"use strict";n.d(t,{I:()=>l});var s=n(47672),r=n(65853),a=n(53133),i=n(50756),o=n(83118),u=n(66398);const l=(0,o.op)({resizeBilinear_:function(e,t,n=!1,o=!1){const l=(0,a._1)(e,"images","resizeBilinear");i.hu(3===l.rank||4===l.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${l.rank}.`)),i.hu(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),i.hu(!1===o||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let c=l,h=!1;3===l.rank&&(h=!0,c=(0,u.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,p={images:c},d={alignCorners:n,halfPixelCenters:o,size:t},f=s.BV.runKernel(r._Yw,p,d);return h?(0,u.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},10959:(e,t,n)=>{"use strict";n.d(t,{j:()=>l});var s=n(47672),r=n(65853),a=n(53133),i=n(50756),o=n(83118),u=n(66398);const l=(0,o.op)({resizeNearestNeighbor_:function(e,t,n=!1,o=!1){const l=(0,a._1)(e,"images","resizeNearestNeighbor");i.hu(3===l.rank||4===l.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${l.rank}.`)),i.hu(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),i.hu("float32"===l.dtype||"int32"===l.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),i.hu(!1===o||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let c=l,h=!1;3===l.rank&&(h=!0,c=(0,u.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,p={images:c},d={alignCorners:n,halfPixelCenters:o,size:t},f=s.BV.runKernel(r.dpD,p,d);return h?(0,u.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},6852:(e,t,n)=>{"use strict";n.d(t,{x:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({isFinite_:function(e){const t={x:(0,a._1)(e,"x","isFinite")};return s.BV.runKernel(r.avt,t)}})},3948:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({isInf_:function(e){const t={x:(0,a._1)(e,"x","isInf")};return s.BV.runKernel(r.iWB,t)}})},11467:(e,t,n)=>{"use strict";n.d(t,{i:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({isNaN_:function(e){const t={x:(0,a._1)(e,"x","isNaN")};return s.BV.runKernel(r.r7n,t)}})},59385:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({leakyRelu_:function(e,t=.2){const n={x:(0,a._1)(e,"x","leakyRelu")},i={alpha:t};return s.BV.runKernel(r.J$2,n,i)}})},38602:(e,t,n)=>{"use strict";n.d(t,{d:()=>u});var s=n(47672),r=n(65853),a=n(54699),i=n(53133),o=n(65052);const u=(0,n(83118).op)({less_:function(e,t){let n=(0,i._1)(e,"a","less","string_or_numeric"),u=(0,i._1)(t,"b","less","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return s.BV.runKernel(r.vtC,l)}})},86830:(e,t,n)=>{"use strict";n.d(t,{z:()=>u});var s=n(47672),r=n(65853),a=n(54699),i=n(53133),o=n(65052);const u=(0,n(83118).op)({lessEqual_:function(e,t){let n=(0,i._1)(e,"a","lessEqual","string_or_numeric"),u=(0,i._1)(t,"b","lessEqual","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return s.BV.runKernel(r.CAk,l)}})},45621:(e,t,n)=>{"use strict";n.d(t,{G:()=>l});var s=n(47672),r=n(65853),a=n(53133),i=n(50756),o=n(83118),u=n(66398);const l=(0,o.op)({localResponseNormalization_:function(e,t=5,n=1,o=1,l=.5){const c=(0,a._1)(e,"x","localResponseNormalization");i.hu(4===c.rank||3===c.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${c.rank}.`)),i.hu(i.GN(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let h=c,p=!1;3===c.rank&&(p=!0,h=(0,u.X)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const d={x:h},f={depthRadius:t,bias:n,alpha:o,beta:l},m=s.BV.runKernel(r.eZ0,d,f);return p?(0,u.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},71150:(e,t,n)=>{"use strict";n.d(t,{c:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({log_:function(e){const t={x:(0,a._1)(e,"x","log","float32")};return s.BV.runKernel(r.ZbH,t)}})},68066:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({log1p_:function(e){const t={x:(0,a._1)(e,"x","log1p")};return s.BV.runKernel(r.kU,t)}})},652:(e,t,n)=>{"use strict";n.d(t,{e:()=>c});var s=n(69371),r=n(53133),a=n(81009),i=n(15637),o=n(83118),u=n(88813),l=n(91628);const c=(0,o.op)({logSigmoid_:function(e){const t=(0,r._1)(e,"x","logSigmoid"),n=(0,s.cb)((e=>({value:(0,i.W)((0,l.W)((0,i.W)(e))),gradFunc:t=>(0,a.d)(t,(0,u.X)((0,i.W)(e)))})));return n(t)}})},32062:(e,t,n)=>{"use strict";n.d(t,{C:()=>d});var s=n(69371),r=n(53133),a=n(27742),i=n(65270),o=n(71150),u=n(2535),l=n(81009),c=n(83118),h=n(69392),p=n(16966);const d=(0,c.op)({logSoftmax_:function(e,t=-1){const n=(0,r._1)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const c=(0,s.cb)(((e,n)=>{const s=(0,u.F)(e,t,!0),r=(0,h.l)(e,s),c=(0,h.l)((0,a.p)(r,"float32"),(0,o.c)((0,p.S)((0,i.Q)(r),t,!0)));n([c]);return{value:c,gradFunc:(e,n)=>{const[s]=n,r=(0,i.Q)(s);return(0,h.l)(e,(0,l.d)((0,p.S)(e,t,!0),r))}}}));return c(n)}})},36883:(e,t,n)=>{"use strict";n.d(t,{l:()=>f});var s=n(53133),r=n(50756),a=n(37672),i=n(15422),o=n(65270),u=n(71150),l=n(2535),c=n(83118),h=n(66398),p=n(69392),d=n(16966);const f=(0,c.op)({logSumExp_:function(e,t=null,n=!1){const c=(0,s._1)(e,"x","logSumExp"),f=(0,r.EC)(t,c.shape),m=(0,l.F)(c,f,!0),g=(0,p.l)(c,m),y=(0,o.Q)(g),b=(0,d.S)(y,f),x=(0,u.c)(b),w=(0,a.I)((0,h.X)(m,x.shape),x);if(n){const e=(0,i.rv)(w.shape,f);return(0,h.X)(w,e)}return w}})},54858:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var s=n(47672),r=n(65853),a=n(53133),i=n(65052);const o=(0,n(83118).op)({logicalAnd_:function(e,t){const n=(0,a._1)(e,"a","logicalAnd","bool"),o=(0,a._1)(t,"b","logicalAnd","bool");(0,i.assertAndGetBroadcastShape)(n.shape,o.shape);const u={a:n,b:o};return s.BV.runKernel(r.PYm,u)}})},31626:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({logicalNot_:function(e){const t={x:(0,a._1)(e,"x","logicalNot","bool")};return s.BV.runKernel(r.VfG,t)}})},32923:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var s=n(47672),r=n(65853),a=n(53133),i=n(65052);const o=(0,n(83118).op)({logicalOr_:function(e,t){const n=(0,a._1)(e,"a","logicalOr","bool"),o=(0,a._1)(t,"b","logicalOr","bool");(0,i.assertAndGetBroadcastShape)(n.shape,o.shape);const u={a:n,b:o};return s.BV.runKernel(r.MZg,u)}})},68636:(e,t,n)=>{"use strict";n.d(t,{e:()=>u});var s=n(53133),r=n(65052),a=n(54858),i=n(31626),o=n(32923);const u=(0,n(83118).op)({logicalXor_:function(e,t){const n=(0,s._1)(e,"a","logicalXor","bool"),u=(0,s._1)(t,"b","logicalXor","bool");return(0,r.assertAndGetBroadcastShape)(n.shape,u.shape),(0,a.H)((0,o.K)(e,t),(0,i.h)((0,a.H)(e,t)))}})},72375:(e,t,n)=>{"use strict";var s;n.d(t,{I:()=>s}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(s||(s={}))},14274:(e,t,n)=>{"use strict";n.d(t,{O:()=>o});var s=n(47672),r=n(65853),a=n(54699),i=n(53133);const o=(0,n(83118).op)({matMul_:function(e,t,n=!1,o=!1){let u=(0,i._1)(e,"a","matMul"),l=(0,i._1)(t,"b","matMul");[u,l]=(0,a.makeTypesMatch)(u,l);const c={a:u,b:l},h={transposeA:n,transposeB:o};return s.BV.runKernel(r.XLW,c,h)}})},2535:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({max_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","max")},o={reductionIndices:t,keepDims:n};return s.BV.runKernel(r.YoZ,i,o)}})},70173:(e,t,n)=>{"use strict";n.d(t,{_:()=>c});var s=n(47672),r=n(65853),a=n(53133),i=n(50756),o=n(86294),u=n(83118),l=n(66398);const c=(0,u.op)({maxPool_:function(e,t,n,u,c){const h=(0,a._1)(e,"x","maxPool");let p=h,d=!1;3===h.rank&&(d=!0,p=(0,l.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.hu(4===p.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${p.rank}.`)),i.hu(o.jT(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),o.m("maxPool",u,c);const f={x:p},m={filterSize:t,strides:n,pad:u,dimRoundingMode:c},g=s.BV.runKernel(r.mTV,f,m);return d?(0,l.X)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},56150:(e,t,n)=>{"use strict";n.d(t,{g:()=>l});var s=n(47672),r=n(65853),a=n(54699),i=n(53133),o=n(65052),u=n(27742);const l=(0,n(83118).op)({maximum_:function(e,t){let n=(0,i._1)(e,"a","maximum"),l=(0,i._1)(t,"b","maximum");[n,l]=(0,a.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),l=(0,u.p)(l,"int32")),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const c={a:n,b:l};return s.BV.runKernel(r.BMI,c)}})},86501:(e,t,n)=>{"use strict";n.d(t,{J:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({mean_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","mean")},o={axis:t,keepDims:n};return s.BV.runKernel(r.q2K,i,o)}})},56321:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({min_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","min")},o={axis:t,keepDims:n};return s.BV.runKernel(r.c17,i,o)}})},86955:(e,t,n)=>{"use strict";n.d(t,{L:()=>l});var s=n(47672),r=n(65853),a=n(54699),i=n(53133),o=n(65052),u=n(27742);const l=(0,n(83118).op)({minimum_:function(e,t){let n=(0,i._1)(e,"a","minimum"),l=(0,i._1)(t,"b","minimum");[n,l]=(0,a.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),l=(0,u.p)(l,"int32")),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const c={a:n,b:l};return s.BV.runKernel(r.q8u,c)}})},36482:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var s=n(47672),r=n(65853),a=n(53133),i=n(50756);const o=(0,n(83118).op)({mirrorPad_:function(e,t,n){i.hu("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const o=(0,a._1)(e,"x","mirrorPad");if(0===o.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");i.hu(t.length===o.rank,(()=>`Padding doesn't match input. Must be ${o.rank}. Got ${t.length}.`));const u="reflect"===n?1:0;for(let s=0;s<o.rank;s++)i.hu(2===t[s].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),i.hu(t[s][0]>=0&&t[s][0]<=o.shape[s]-u&&t[s][1]>=0&&t[s][1]<=o.shape[s]-u,(()=>`Padding in dimension ${s} cannot be greater than or equal to ${o.shape[s]-u} or less than 0 for input of shape ${o.shape}`));const l={paddings:t,mode:n},c={x:o};return s.BV.runKernel(r.jQs,c,l)}})},70377:(e,t,n)=>{"use strict";n.d(t,{w:()=>o});var s=n(47672),r=n(65853),a=n(54699),i=n(53133);const o=(0,n(83118).op)({mod_:function(e,t){let n=(0,i._1)(e,"a","mod"),o=(0,i._1)(t,"b","mod");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return s.BV.runKernel(r.Vbg,u)}})},81009:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var s=n(47672),r=n(65853),a=n(54699),i=n(53133);const o=(0,n(83118).op)({mul_:function(e,t){let n=(0,i._1)(e,"a","mul"),o=(0,i._1)(t,"b","mul");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return s.BV.runKernel(r.wYn,u)}})},15637:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({neg_:function(e){const t={x:(0,a._1)(e,"x","neg")};return s.BV.runKernel(r.kuV,t)}})},23153:(e,t,n)=>{"use strict";n.d(t,{K:()=>y});var s=n(53133),r=n(50756),a=n(38116),i=n(15422),o=n(2535),u=n(56321),l=n(83118),c=n(59715),h=n(66398),p=n(15656),d=n(7149),f=n(79512),m=n(16966);function g(e,t,n=null){if(0===e.rank)return(0,a.W)(e);if(1!==e.rank&&null===n)return g((0,h.X)(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,m.S)((0,a.W)(e),n);if(t===1/0)return(0,o.F)((0,a.W)(e),n);if(t===-1/0)return(0,u.V)((0,a.W)(e),n);if("euclidean"===t||2===t)return(0,d._)((0,m.S)((0,c.s)((0,a.W)(e),(0,p.i)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,o.F)((0,m.S)((0,a.W)(e),n[0]),n[1]-1);if(t===1/0)return(0,o.F)((0,m.S)((0,a.W)(e),n[1]),n[0]);if(t===-1/0)return(0,u.V)((0,m.S)((0,a.W)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,d._)((0,m.S)((0,f.h)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const y=(0,l.op)({norm_:function(e,t="euclidean",n=null,a=!1){const o=g(e=(0,s._1)(e,"x","norm"),t,n);let u=o.shape;if(a){const t=(0,r.EC)(n,e.shape);u=i.rv(o.shape,t)}return(0,h.X)(o,u)}})},65963:(e,t,n)=>{"use strict";n.d(t,{Q:()=>u});var s=n(47672),r=n(65853),a=n(54699),i=n(53133),o=n(65052);const u=(0,n(83118).op)({notEqual_:function(e,t){let n=(0,i._1)(e,"a","notEqual","string_or_numeric"),u=(0,i._1)(t,"b","notEqual","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return s.BV.runKernel(r.yQU,l)}})},62535:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({oneHot_:function(e,t,n=1,i=0,o="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const u={indices:(0,a._1)(e,"indices","oneHot","int32")},l={dtype:o,depth:t,onValue:n,offValue:i};return s.BV.runKernel(r.we_,u,l)}})},82965:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var s=n(47672),r=n(50756),a=n(37496),i=n(72622);function o(e,t="float32"){if((0,r.Mu)(e),"complex64"===t){const t=o(e,"float32"),n=(0,i.l)(e,"float32");return(0,a.P)(t,n)}const n=(0,r.p8)((0,r.NA)(e),t);return s.BV.makeTensor(n,e,t)}},90458:(e,t,n)=>{"use strict";n.d(t,{J:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({onesLike_:function(e){const t={x:(0,a._1)(e,"x","onesLike")};return s.BV.runKernel(r.qWM,t)}})},83118:(e,t,n)=>{"use strict";n.d(t,{op:()=>i,z:()=>a});var s=n(47672),r=n(50756);const a="__op";function i(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const i=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=a;const o=(...e)=>{s.BV.startScope(n);try{const t=i(...e);return(0,r.tI)(t)&&console.error("Cannot return a Promise inside of tidy."),s.BV.endScope(t),t}catch(t){throw s.BV.endScope(null),t}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}},97049:(e,t,n)=>{"use strict";n.d(t,{zvA:()=>p.z,WnP:()=>r.W,Khb:()=>a.K,__u:()=>i._,IHx:()=>o.I,QBD:()=>d,$6P:()=>f.$,YjB:()=>m.Y,NqF:()=>g.N,vHJ:()=>y.v,ZRM:()=>b.Z,VfV:()=>x.V,z4N:()=>w.z,fvJ:()=>v.f,C80:()=>k.C,wS1:()=>I.w,uR5:()=>C,zEQ:()=>F,tgs:()=>M.t,Dxk:()=>B,JY5:()=>z,p3b:()=>L,E4h:()=>O.E,yE8:()=>U,ycw:()=>W,anm:()=>ns,XsQ:()=>P,UFq:()=>V.U,f3b:()=>G.f,pju:()=>S.p,mDi:()=>H.m,iUl:()=>j.i,d9v:()=>X.d,PYB:()=>q.P,zoF:()=>$.z,gME:()=>K,Izb:()=>Q,MNy:()=>Y,ZaL:()=>J,PAt:()=>Z.P,Tek:()=>ee.T,bc:()=>te.b,pdZ:()=>ne,$QV:()=>re,mCk:()=>ae.m,f9Y:()=>ie.f,mew:()=>ps,$Gn:()=>oe.$,zbp:()=>ue.z,ppE:()=>le,nTT:()=>ce.n,B10:()=>he.B,Ka3:()=>pe,WmZ:()=>de.W,hiC:()=>fe.h,NTj:()=>me.N,AKD:()=>ge.A,rvX:()=>cs,WYO:()=>ye,pyx:()=>be.p,GRh:()=>hs,EDe:()=>xe,DgJ:()=>we.D,qNN:()=>ve.q,d2q:()=>ke.d,Qqt:()=>Ie.Q,dt4:()=>Se.d,t$B:()=>Ne.t,iyy:()=>Ce,kp_:()=>vn.k,hlL:()=>$e.h,GWj:()=>Ee.G,qPi:()=>Ae.q,imm:()=>s,Iqj:()=>De.I,dbB:()=>ls,pjt:()=>Re.p,brS:()=>_e.b,Sxn:()=>kn.S,asL:()=>Fe.a,BHj:()=>mr,V3u:()=>ds,wx0:()=>In.w,xVT:()=>Oe.x,UWc:()=>Me.U,i2d:()=>Be.i,hi7:()=>ze.h,d9m:()=>Le.d,zN1:()=>Ue.z,$r2:()=>gr,SX3:()=>We,G9k:()=>Pe.G,cM7:()=>Ve.c,Krr:()=>Ge.K,e_t:()=>He.e,CmS:()=>je.C,l_t:()=>Xe.l,HvI:()=>qe.H,hJK:()=>Ke.h,K5V:()=>Qe.K,egP:()=>Ye.e,MB5:()=>yr,eab:()=>et,OI3:()=>E.O,Fp7:()=>tt.F,_sB:()=>nt._,YQQ:()=>st,Ip$:()=>rt,gWQ:()=>at.g,J69:()=>it.J,ry_:()=>lt,VV$:()=>ct.V,LTh:()=>ht.L,VdP:()=>pt.V,wQq:()=>dt.w,Gi7:()=>yt,p_:()=>is,dC7:()=>A.d,rq4:()=>bt,SJ_:()=>xt,W76:()=>wt.W,KOy:()=>rs.K,Quu:()=>vt.Q,lfX:()=>kt.l,iUs:()=>ot.i,JpU:()=>It.J,op:()=>p.op,N2O:()=>St,vku:()=>Nt.v,pNR:()=>Tt,koy:()=>Ct,t1L:()=>$t,lGY:()=>Et,d_R:()=>At.d,sQ3:()=>Dt.s,AL3:()=>Rt.A,S0v:()=>_t.S,WVs:()=>Ft.W,$gW:()=>Ot,VT$:()=>Mt,N89:()=>Bt,TN_:()=>zt,wzB:()=>Vt,nGf:()=>Gt,ruB:()=>Ht,LGj:()=>jt,pe5:()=>Xt,w6H:()=>qt,kwC:()=>Kt.k,M25:()=>Qt.M,UYe:()=>Yt.U,btT:()=>Jt.b,XLQ:()=>T.X,GYS:()=>Zt.G,SDf:()=>en,diP:()=>tn,sx7:()=>nn,mG2:()=>sn,QEs:()=>Sn.Q,NMM:()=>rn.N,bp0:()=>an.b,iD$:()=>on.i,snQ:()=>os,zcT:()=>Ze,U8D:()=>un.U,U_I:()=>ln.U,ODp:()=>cn,XD2:()=>D.X,Xxe:()=>hn.X,tdS:()=>fr,O$l:()=>pn.O,R_K:()=>dn.R,tPi:()=>R.t,jZU:()=>fn,SmN:()=>mn,CnO:()=>gn,p0P:()=>yn,XAC:()=>bn.X,Wvh:()=>xn.W,fBT:()=>wn.f,rVs:()=>br,ers:()=>us,uN7:()=>dr,Vl2:()=>Nn.V,_b3:()=>Tn._,h62:()=>mt.h,$i:()=>Cn.$,L9e:()=>$n.L,knu:()=>En.k,Nbs:()=>An.N,NXj:()=>Dn.N,Z_8:()=>xr,luU:()=>gt.l,Smz:()=>Rn.S,ORZ:()=>_n.O,AEp:()=>_.A,XeE:()=>Fn.X,RRF:()=>Mn,odF:()=>Bn,wOQ:()=>zn.w,yXz:()=>Ln,Bfx:()=>Un,xZs:()=>Wn,Pg0:()=>Vn,Gg6:()=>Te.G,hg7:()=>Gn.h,p4s:()=>ss.p,Xu6:()=>Hn,Two:()=>jn.T,pUJ:()=>Xn.p,HHK:()=>qn.H,GaM:()=>Kn,VD$:()=>Qn,arb:()=>Yn.a,itS:()=>Zn,lls:()=>es.l,P84:()=>ts.P});var s={};n.r(s),n.d(s,{conv2d:()=>xs,depthwiseConv2d:()=>ks,matMul:()=>Is});var r=n(38116),a=n(31546),i=n(63456),o=n(37672),u=n(47672),l=n(65853),c=n(53133),h=n(50756),p=n(83118);const d=(0,p.op)({addN_:function(e){h.hu(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),h.hu(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>(0,c._1)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!h.cO(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const s=t;return u.BV.runKernel(l.Xze,s)}});var f=n(73497),m=n(45053),g=n(84069),y=n(77480),b=n(53054),x=n(99273),w=n(39889),v=n(432),k=n(83052),I=n(78940),S=n(27742),N=n(86294),T=n(66398);const C=(0,p.op)({avgPool3d_:function(e,t,n,s,r,a="NDHWC"){const i=(0,c._1)(e,"x","avgPool3d","float32");let o=i,p=!1;4===i.rank&&(p=!0,o=(0,T.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),h.hu(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),h.hu("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),h.hu("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),(0,N.m)("avgPool3d",s,r);const d={x:o},f={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a};let m=u.BV.runKernel(l._k9,d,f);return m=(0,S.p)(m,o.dtype),p?(0,T.X)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});var $=n(2344),E=n(14274),A=n(81009),D=n(88813),R=n(21501),_=n(49291);const F=(0,p.op)({basicLSTMCell_:function(e,t,n,s,r,a){const i=(0,c._1)(e,"forgetBias","basicLSTMCell"),u=(0,c._1)(t,"lstmKernel","basicLSTMCell"),l=(0,c._1)(n,"lstmBias","basicLSTMCell"),h=(0,c._1)(s,"data","basicLSTMCell"),p=(0,c._1)(r,"c","basicLSTMCell"),d=(0,c._1)(a,"h","basicLSTMCell"),f=(0,$.z)([h,d],1),m=(0,E.O)(f,u),g=(0,o.I)(m,l),y=g.shape[0],b=g.shape[1]/4,x=[y,b],w=(0,R.t)(g,[0,0],x),v=(0,R.t)(g,[0,b],x),k=(0,R.t)(g,[0,2*b],x),I=(0,R.t)(g,[0,3*b],x),S=(0,o.I)((0,A.d)((0,D.X)(w),(0,_.A)(v)),(0,A.d)(p,(0,D.X)((0,o.I)(i,k))));return[S,(0,A.d)((0,_.A)(S),(0,D.X)(I))]}});var O=n(24131),M=n(58861);const B=(0,p.op)({batchNorm2d_:function(e,t,n,s,r,a){const i=(0,c._1)(e,"x","batchNorm"),o=(0,c._1)(t,"mean","batchNorm"),u=(0,c._1)(n,"variance","batchNorm");let l,p;return null!=r&&(l=(0,c._1)(r,"scale","batchNorm")),null!=s&&(p=(0,c._1)(s,"offset","batchNorm")),h.hu(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),h.hu(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),h.hu(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&h.hu(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=p&&h.hu(2===p.rank||1===p.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${p.rank}.`)),(0,M.t)(i,o,u,p,l,a)}});const z=(0,p.op)({batchNorm3d_:function(e,t,n,s,r,a){const i=(0,c._1)(e,"x","batchNorm"),o=(0,c._1)(t,"mean","batchNorm"),u=(0,c._1)(n,"variance","batchNorm");let l,p;return null!=r&&(l=(0,c._1)(r,"scale","batchNorm")),null!=s&&(p=(0,c._1)(s,"offset","batchNorm")),h.hu(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),h.hu(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),h.hu(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&h.hu(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=p&&h.hu(3===p.rank||1===p.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${p.rank}.`)),(0,M.t)(i,o,u,p,l,a)}});const L=(0,p.op)({batchNorm4d_:function(e,t,n,s,r,a){const i=(0,c._1)(e,"x","batchNorm"),o=(0,c._1)(t,"mean","batchNorm"),u=(0,c._1)(n,"variance","batchNorm");let l,p;return null!=r&&(l=(0,c._1)(r,"scale","batchNorm")),null!=s&&(p=(0,c._1)(s,"offset","batchNorm")),h.hu(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),h.hu(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),h.hu(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&h.hu(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=p&&h.hu(4===p.rank||1===p.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${p.rank}.`)),(0,M.t)(i,o,u,p,l,a)}});const U=(0,p.op)({bincount_:function(e,t,n){const s=(0,c._1)(e,"x","bincount"),r=(0,c._1)(t,"weights","bincount");h.hu("int32"===s.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`)),h.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),h.hu(r.size===s.size||0===r.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`));const a={x:s,weights:r},i={size:n};return u.BV.runKernel(l.zvY,a,i)}});const W=(0,p.op)({bitwiseAnd_:function(e,t){const n=(0,c._1)(e,"x","bitwiseAnd"),s=(0,c._1)(t,"y","bitwiseAnd");if(!(0,h.cO)(n.shape,s.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${s.shape}`);if("int32"!==n.dtype||"int32"!==s.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${s.dtype}`);const r={a:n,b:s};return u.BV.runKernel(l.hCO,r)}});const P=(0,p.op)({broadcastArgs_:function(e,t){const n=(0,c._1)(e,"s0","broadcastArgs","int32"),s=(0,c._1)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==s.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const r={s0:n,s1:s};return u.BV.runKernel(l.eEB,r)}});var V=n(14580),G=n(79410),H=n(85402),j=n(74983),X=n(62469),q=n(37496);const K=(0,p.op)({concat1d_:function(e){return(0,$.z)(e,0)}});const Q=(0,p.op)({concat2d_:function(e,t){return(0,$.z)(e,t)}});const Y=(0,p.op)({concat3d_:function(e,t){return(0,$.z)(e,t)}});const J=(0,p.op)({concat4d_:function(e,t){return(0,$.z)(e,t)}});var Z=n(8695),ee=n(46387),te=n(74337);const ne=(0,p.op)({conv3d_:function(e,t,n,s,r="NDHWC",a=[1,1,1]){const i=(0,c._1)(e,"x","conv3d"),o=(0,c._1)(t,"filter","conv3d");let p=i,d=!1;4===i.rank&&(d=!0,p=(0,T.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),h.hu(5===p.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${p.rank}.`)),h.hu(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),h.hu(p.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${p.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),h.hu((0,N.jT)(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),h.hu("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`)),h.hu((0,N.U3)(a),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),h.hu((0,N.U3)(n),(()=>"Error in conv3D: Strides should be larger than 0."));const f={x:p,filter:o},m={strides:n,pad:s,dataFormat:r,dilations:a},g=u.BV.runKernel(l.x12,f,m);return d?(0,T.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}});var se=n(26402);const re=(0,p.op)({conv3dTranspose_:function(e,t,n,s,r){const a=(0,c._1)(e,"x","conv3dTranspose"),i=(0,c._1)(t,"filter","conv3dTranspose");return(0,se._)(n,a,i,s,r)}});var ae=n(96145),ie=n(48349),oe=n(98520),ue=n(91121);const le=(0,p.op)({denseBincount_:function(e,t,n,s=!1){const r=(0,c._1)(e,"x","denseBincount"),a=(0,c._1)(t,"weights","denseBincount");h.hu("int32"===r.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`)),h.hu(r.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`)),h.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),h.hu(a.size===r.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`));const i={x:r,weights:a},o={size:n,binaryOutput:s};return u.BV.runKernel(l.QRR,i,o)}});var ce=n(28181),he=n(44851);const pe=(0,p.op)({diag_:function(e){const t={x:(0,c._1)(e,"x","diag")};return u.BV.runKernel(l.$w,t)}});var de=n(54162),fe=n(31323),me=n(70357),ge=n(46032);const ye=(0,p.op)({einsum_:function(e,...t){const n=t.map(((e,t)=>(0,c._1)(e,`tensors${t}`,"einsum"))),s={equation:e};return u.BV.runKernel(l.$g6,n,s)}});var be=n(53289);const xe=(0,p.op)({ensureShape_:function(e,t){const n=(0,c._1)(e,"x","ensureShape","string_or_numeric");if(!(0,h.DK)(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}});var we=n(18022),ve=n(20599),ke=n(62886),Ie=n(65270),Se=n(2682),Ne=n(86799),Te=n(36987);const Ce=(0,p.op)({eye_:function(e,t,n,s="float32"){null==t&&(t=e);const r=(0,G.f)([e,t],s),a=e<=t?e:t;for(let o=0;o<a;++o)r.set(1,o,o);const i=(0,T.X)(r.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return(0,Te.G)((0,Se.d)(i,0),[n[0],1,1]);if(2===n.length)return(0,Te.G)((0,Se.d)((0,Se.d)(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,Te.G)((0,Se.d)((0,Se.d)((0,Se.d)(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var $e=n(33173),Ee=n(57055),Ae=n(13768),De=n(64353),Re=n(66651),_e=n(66928),Fe=n(3073),Oe=n(6852),Me=n(3948),Be=n(11467),ze=n(59385),Le=n(38602),Ue=n(86830);function We(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:e,stop:t,num:n};return u.BV.runKernel(l.e7N,{},s)}var Pe=n(45621),Ve=n(71150),Ge=n(68066),He=n(652),je=n(32062),Xe=n(36883),qe=n(54858),Ke=n(31626),Qe=n(32923),Ye=n(68636);const Je=2147483648;const Ze=(0,p.op)({searchSorted_:function(e,t,n="left"){const s=(0,c._1)(e,"sortedSequence","searchSorted"),r=(0,c._1)(t,"values","searchSorted"),a=s.shape[s.shape.length-1],i=r.shape[r.shape.length-1],o=(0,T.X)(s,[-1,a]),p=(0,T.X)(r,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==p.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,h.NA)(p.shape)>=Je)throw new Error("values tensor size must less than 2147483648");if(o.shape[1]>=Je)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${o.shape[1]}`);const d={sortedSequence:o,values:p},f={side:n};return u.BV.runKernel(l.nr8,d,f)}});function et(e,t){return Ze(e,t,"left")}var tt=n(2535),nt=n(70173);const st=(0,p.op)({maxPool3d_:function(e,t=[1,1,1],n,s,r,a="NDHWC"){const i=(0,c._1)(e,"x","maxPool3d");let o=i,p=!1;4===i.rank&&(p=!0,o=(0,T.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),h.hu(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),h.hu("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),(0,N.m)("maxPool3d",s,r);const d={x:o},f={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},m=u.BV.runKernel(l.OAf,d,f);return p?(0,T.X)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});const rt=(0,p.op)({maxPoolWithArgmax_:function(e,t,n,s,r=!1){const a={x:(0,c._1)(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:s,includeBatchInIndex:r},o=u.BV.runKernel(l.vFR,a,i);return{result:o[0],indexes:o[1]}}});var at=n(56150),it=n(86501),ot=n(82965),ut=n(39608);function lt(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let s=(0,c._1)(e,"x","meshgrid",e instanceof ut.es?e.dtype:"float32");if(void 0===t)return[s];let r=(0,c._1)(t,"y","meshgrid",t instanceof ut.es?t.dtype:"float32");const a=(0,h.NA)(s.shape),i=(0,h.NA)(r.shape);return"xy"===n?(s=(0,T.X)(s,[1,-1]),r=(0,T.X)(r,[-1,1]),[(0,E.O)((0,ot.i)([i,1],s.dtype),s),(0,E.O)(r,(0,ot.i)([1,a],r.dtype))]):(s=(0,T.X)(s,[-1,1]),r=(0,T.X)(r,[1,-1]),[(0,E.O)(s,(0,ot.i)([1,i],s.dtype)),(0,E.O)((0,ot.i)([a,1],r.dtype),r)])}var ct=n(56321),ht=n(86955),pt=n(36482),dt=n(70377),ft=n(15422),mt=n(79512),gt=n(69392);const yt=(0,p.op)({moments_:function(e,t=null,n=!1){e=(0,c._1)(e,"x","moments");const s=(0,h.EC)(t,e.shape),r=(0,it.J)(e,s,n);let a=r.shape;n||(a=(0,ft.rv)(r.shape,s));const i=(0,mt.h)((0,gt.l)((0,S.p)(e,"float32"),(0,T.X)(r,a)));return{mean:r,variance:(0,it.J)(i,s,n)}}});const bt=(0,p.op)({multiRNNCell_:function(e,t,n,s){const r=(0,c._1)(t,"data","multiRNNCell"),a=(0,c.sI)(n,"c","multiRNNCell"),i=(0,c.sI)(s,"h","multiRNNCell");let o=r;const u=[];for(let c=0;c<e.length;c++){const t=e[c](o,a[c],i[c]);u.push(t[0]),u.push(t[1]),o=t[1]}const l=[],h=[];for(let c=0;c<u.length;c+=2)l.push(u[c]),h.push(u[c+1]);return[l,h]}});const xt=(0,p.op)({multinomial_:function(e,t,n,s=!1){const r=(0,c._1)(e,"logits","multinomial"),a=r.size,i=r.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?(0,T.X)(r,[1,-1]):r},h={numSamples:t,seed:n,normalized:s},p=u.BV.runKernel(l.NZg,o,h);return 1===i?(0,T.X)(p,[p.size]):p}});var wt=n(15637),vt=n(65963),kt=n(62535),It=n(90458);const St=(0,p.op)({outerProduct_:function(e,t){const n=(0,c._1)(e,"v1","outerProduct"),s=(0,c._1)(t,"v2","outerProduct");h.hu(1===n.rank&&1===s.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`));const r=(0,T.X)(n,[-1,1]),a=(0,T.X)(s,[1,-1]);return(0,E.O)(r,a)}});var Nt=n(78170);const Tt=(0,p.op)({pad1d_:function(e,t,n=0){return(0,h.hu)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),(0,Nt.v)(e,[t],n)}});const Ct=(0,p.op)({pad2d_:function(e,t,n=0){return(0,h.hu)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Nt.v)(e,t,n)}});const $t=(0,p.op)({pad3d_:function(e,t,n=0){return(0,h.hu)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Nt.v)(e,t,n)}});const Et=(0,p.op)({pad4d_:function(e,t,n=0){return(0,h.hu)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Nt.v)(e,t,n)}});var At=n(86826),Dt=n(59715),Rt=n(70756),_t=n(73860),Ft=n(66422);const Ot=(0,p.op)({raggedGather_:function(e,t,n,s){const r={paramsNestedSplits:e.map(((e,t)=>(0,c._1)(e,`tensors${t}`,"raggedGather","int32"))),paramsDenseValues:(0,c._1)(t,"paramsDenseValues","raggedGather"),indices:(0,c._1)(n,"indices","raggedGather","int32")},a={outputRaggedRank:s},i=u.BV.runKernel(l.dDz,r,a);return{outputNestedSplits:i.slice(0,i.length-1),outputDenseValues:i[i.length-1]}}});const Mt=(0,p.op)({raggedRange_:function(e,t,n){const s=(0,c._1)(e,"starts","raggedRange"),r={starts:s,limits:(0,c._1)(t,"limits","raggedRange",s.dtype),deltas:(0,c._1)(n,"deltas","raggedRange",s.dtype)},a=u.BV.runKernel(l.CQl,r);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}});const Bt=(0,p.op)({raggedTensorToTensor_:function(e,t,n,s,r){const a=(0,c._1)(e,"shape","raggedTensorToTensor","int32"),i=(0,c._1)(t,"values","raggedTensorToTensor"),o={shape:a,values:i,defaultValue:(0,c._1)(n,"defaultValue","raggedTensorToTensor",i.dtype),rowPartitionTensors:s.map(((e,t)=>(0,c._1)(e,`tensors${t}`,"raggedTensorToTensor","int32")))},h={rowPartitionTypes:r};return u.BV.runKernel(l.BiW,o,h)}});const zt=(0,p.op)({rand_:function(e,t,n){(0,h.Mu)(e);const s=(0,h.NA)(e);let r=null;if(null==n||"float32"===n)r=new Float32Array(s);else if("int32"===n)r=new Int32Array(s);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);r=new Uint8Array(s)}for(let a=0;a<s;a++)r[a]=t();return u.BV.makeTensor(r,e,n)}});var Lt=n(95552);class Ut{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=r||Math.random();this.random=Lt.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let s,r,a;do{s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*i,t=this.mean+this.stdDev*r*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Wt{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;const r=s||Math.random();this.randu=Lt.alea(r.toString()),this.randn=new Ut(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,s,r,a;for(;;){do{s=this.randn.nextValue(),a=1+this.c*s}while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),r=this.randu(),r<t||Math.log(r)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Pt{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==s&&(s=Math.random()),"number"==typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Lt.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Vt=(0,p.op)({randomGamma_:function(e,t,n=1,s="float32",r){if((0,h.Mu)(e),null==n&&(n=1),null==s&&(s="float32"),"float32"!==s&&"int32"!==s)throw new Error(`Unsupported data type ${s}`);const a=new Wt(t,n,s,r),i=(0,G.f)(e,s);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}});const Gt=(0,p.op)({randomNormal_:function(e,t=0,n=1,s,r){if((0,h.Mu)(e),null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const a=new Ut(t,n,s,!1,r),i=(0,G.f)(e,s);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}});const Ht=(0,p.op)({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return Gt(e,0,1,t,n)}});const jt=(0,p.op)({randomUniform_:function(e,t=0,n=1,s="float32",r){(0,h.Mu)(e);const a=(0,G.f)(e,s),i=new Pt(t,n,null,r);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}});const Xt=(0,p.op)({randomUniformInt_:function(e,t,n,s){return jt(e,t,n,"int32",s)}});function qt(e,t,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:s};return u.BV.runKernel(l.e6w,{},r)}var Kt=n(98974),Qt=n(75972),Yt=n(10440),Jt=n(8459),Zt=n(93750);const en=(0,p.op)({reverse1d_:function(e){const t=(0,c._1)(e,"x","reverse");return h.hu(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),(0,Zt.G)(t,0)}});const tn=(0,p.op)({reverse2d_:function(e,t){const n=(0,c._1)(e,"x","reverse");return h.hu(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),(0,Zt.G)(n,t)}});const nn=(0,p.op)({reverse3d_:function(e,t){const n=(0,c._1)(e,"x","reverse");return h.hu(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),(0,Zt.G)(n,t)}});const sn=(0,p.op)({reverse4d_:function(e,t){const n=(0,c._1)(e,"x","reverse");return h.hu(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),(0,Zt.G)(n,t)}});var rn=n(9452),an=n(66823),on=n(15656),un=n(71641),ln=n(50447);const cn=async function(e,t){const n=(0,c._1)(e,"x","setdiff1d"),s=(0,c._1)(t,"y","setdiff1d");h.hu(n.dtype===s.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`)),h.hu(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),h.hu(1===s.rank,(()=>`y should be 1D tensor, but got y (${s.shape}).`));const r=await n.data(),a=await s.data(),i=new Set(a);let o=0;for(let c=0;c<r.length;c++)i.has(r[c])||o++;const u=new ut.YD([o],n.dtype),l=new ut.YD([o],"int32");for(let c=0,h=0;c<r.length;c++)i.has(r[c])||(u.values[h]=r[c],l.values[h]=c,h++);return[u.toTensor(),l.toTensor()]};var hn=n(39882),pn=n(92751),dn=n(70454);const fn=(0,p.op)({slice1d_:function(e,t,n){const s=(0,c._1)(e,"x","slice1d");return h.hu(1===s.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`)),(0,R.t)(s,[t],[n])}});const mn=(0,p.op)({slice2d_:function(e,t,n){const s=(0,c._1)(e,"x","slice2d");return h.hu(2===s.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`)),(0,R.t)(s,t,n)}});const gn=(0,p.op)({slice3d_:function(e,t,n){const s=(0,c._1)(e,"x","slice3d");return h.hu(3===s.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`)),(0,R.t)(s,t,n)}});const yn=(0,p.op)({slice4d_:function(e,t,n){const s=(0,c._1)(e,"x","slice4d");return h.hu(4===s.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`)),(0,R.t)(s,t,n)}});var bn=n(87411),xn=n(91628),wn=n(21752),vn=n(40789),kn=n(25615),In=n(52328),Sn=n(34895),Nn=n(20953),Tn=n(7149),Cn=n(8258),$n=n(26507),En=n(84505),An=n(74431),Dn=n(36383),Rn=n(16966),_n=n(45794),Fn=n(32209),On=n(29058);function Mn(e,t){(0,h.Cq)(e);const n=(0,c.C)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,On.H)(e,null,n,t)}function Bn(e,t,n){if((0,h.Cq)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const s=(0,c.C)(e,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,On.H)(e,t,s,n)}var zn=n(39134);function Ln(e,t,n){if((0,h.Cq)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const s=(0,c.C)(e,n);if(4!==s.length&&1!==s.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,On.H)(e,t,s,n)}function Un(e,t,n){if((0,h.Cq)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const s=(0,c.C)(e,n);if(5!==s.length&&1!==s.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,On.H)(e,t,s,n)}function Wn(e,t,n){if((0,h.Cq)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const s=(0,c.C)(e,n);if(6!==s.length&&1!==s.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||s,(0,On.H)(e,t,s,n)}var Pn=n(53766);const Vn=(0,p.op)({tensorScatterUpdate_:function(e,t,n){const s=(0,c._1)(e,"tensor","tensorScatterupdate"),r=(0,c._1)(t,"indices","tensorScatterupdate","int32"),a=(0,c._1)(n,"updates","tensorScatterupdate");if(Pn.validateInput(a,r,s.shape),s.dtype!==a.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${s.dtype} and ${a.dtype}.`);const i={tensor:s,indices:r,updates:a};return u.BV.runKernel(l.SIB,i,{})}});var Gn=n(21867);const Hn=(0,p.op)({truncatedNormal_:function(e,t=0,n=1,s,r){if((0,h.Mu)(e),null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const a=new Ut(t,n,s,!0,r),i=(0,G.f)(e,s);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}});var jn=n(20589),Xn=n(60895),qn=n(44870);function Kn(e,t){return Ze(e,t,"right")}function Qn(e,t=!0,n,s){return u.BV.makeVariable(e,t,n,s)}var Yn=n(41201),Jn=n(14810);const Zn=async function(e){const t=(0,c._1)(e,"condition","whereAsync","bool"),n=await t.data(),s=(0,Jn.Z)(t.shape,n);return e!==t&&t.dispose(),s};var es=n(72622),ts=n(39047);const ns=async function(e,t,n){const s=(0,c._1)(e,"tensor","boolMask"),r=(0,c._1)(t,"mask","boolMask","bool"),a=null==n?0:n,i=r.rank,o=s.shape;h.hu(i>0,(()=>"mask cannot be scalar")),h.k5(o.slice(a,a+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let c=a;c<a+i;c++)u*=o[c];const l=o.slice(0,a).concat([u],o.slice(a+i)),p=(0,T.X)(s,l),d=(0,T.X)(r,[-1]),f=await Zn(d),m=(0,$n.L)(f,[1]),g=(0,De.I)(p,m,a);return e!==s&&s.dispose(),t!==r&&r.dispose(),m.dispose(),p.dispose(),d.dispose(),f.dispose(),g};var ss=n(61268),rs=n(23153),as=n(54699);const is=(0,p.op)({movingAverage_:function(e,t,n,s,r=!0){const a=(0,c._1)(e,"v","movingAverage"),i=(0,c._1)(t,"x","movingAverage"),u=(0,c._1)(n,"decay","movingAverage");(0,as.assertTypesMatch)(a,i),h.hu(h.cO(a.shape,i.shape),(()=>"Shape mismatch in v and x"));const l=(0,on.i)(1),p=(0,gt.l)(l,u);let d=(0,A.d)((0,gt.l)(i,a),p);if(r){h.hu(null!=s,(()=>"When using zeroDebias: true, step is required."));const e=(0,c._1)(s,"step","movingAverage");d=(0,fe.h)(d,(0,gt.l)(l,(0,Dt.s)(u,e)))}return(0,o.I)(a,d)}});const os=(0,p.op)({scatterND_:function(e,t,n){(0,h.Mu)(n);const s=(0,c._1)(e,"indices","scatterND","int32"),r=(0,c._1)(t,"updates","scatterND");Pn.validateInput(r,s,n);const a={indices:s,updates:r},i={shape:n};return u.BV.runKernel(l.xQA,a,i)}});const us=(0,p.op)({sparseToDense_:function(e,t,n,s=0){(0,h.Mu)(n);const r=(0,c._1)(e,"sparseIndices","sparseToDense","int32"),a=(0,c._1)(t,"sparseValues","sparseToDense","string_or_numeric"),i=(0,c._1)(s,"defaultValue","sparseToDense",a.dtype);!function(e,t,n,s){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const r=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,a,n,i);const o={sparseIndices:r,sparseValues:a,defaultValue:i},p={outputShape:n};return u.BV.runKernel(l.D2d,o,p)}});const ls=(0,p.op)({gatherND_:function(e,t){const n=(0,c._1)(t,"indices","gatherND","int32"),s={params:(0,c._1)(e,"x","gatherND","string_or_numeric"),indices:n};return u.BV.runKernel(l.q1x,s)}});const cs=(0,p.op)({dropout_:function(e,t,n,s){const r=(0,c._1)(e,"x","dropout");if(h.hu("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),h.hu(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof ut.es?r.clone():r;const a=function(e,t){if(null==t)return e.shape.slice();if(h.cO(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let s=0;s<e.shape.length;s++)null==t[s]&&null!=e.shape[s]?n.push(e.shape[s]):n.push(t[s]);return n}return t}(r,n),i=1-t,u=(0,fe.h)((0,Ee.G)((0,o.I)(jt(a,0,1,"float32",s),i)),i);return(0,A.d)(r,u)}});function hs(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function ps(e,t,n){const s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(i)}return Mn(r,"float32")}const ds=async function(e,t,n=1){const s=(0,c._1)(e,"predictions","inTopK"),r=(0,c._1)(t,"targets","inTopK");(0,h.hu)(s.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`)),(0,h.hu)(s.rank-1===r.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`)),(0,h.k5)(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=s.shape[s.shape.length-1];(0,h.hu)(n>0&&n<=a,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const i=await s.data(),o=await r.data(),[u,l]=[i.length/a,a],p=(0,h.WP)("bool",u);for(let c=0;c<u;c++){const e=c*l,t=i.subarray(e,e+l),s=[];for(let n=0;n<t.length;n++)s.push({value:t[n],index:n});s.sort(((e,t)=>t.value-e.value)),p[c]=0;for(let r=0;r<n;r++)if(s[r].index===o[c]){p[c]=1;break}}return e!==s&&s.dispose(),t!==r&&r.dispose(),(0,Fn.X)(p,r.shape,"bool")};var fs=n(69371),ms=n(65052),gs=n(35064),ys=n(46753),bs=n(16077);const xs=(0,p.op)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:p,activation:d="linear",preluActivationWeights:f,leakyreluAlpha:m}){if(d=d||"linear",!1===(0,bs.uy)(u.BV.state.gradientDepth,d)){h.hu("NHWC"===r,(()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let u=(0,ee.T)(e,t,n,s,r,a,i);return null!=p&&(u=(0,o.I)(u,p)),(0,bs.QH)(u,d,f,m)}const g=(0,c._1)(e,"x","conv2d","float32"),y=(0,c._1)(t,"filter","conv2d","float32");let b=g,x=!1;3===g.rank&&(x=!0,b=(0,T.X)(g,[1,g.shape[0],g.shape[1],g.shape[2]])),h.hu(4===b.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${b.rank}.`)),h.hu(4===y.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${y.rank}.`)),N.m("fused conv2d",s,i);const w="NHWC"===r?b.shape[3]:b.shape[1];h.hu(y.shape[2]===w,(()=>`Error in conv2d: depth of input (${w}) must match input depth for filter ${y.shape[2]}.`)),h.hu(N.jT(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const v=N.Ix(b.shape,y.shape,n,a,s,i);let k,I;if(null!=p&&(k=(0,c._1)(p,"bias","fused conv2d"),[k]=(0,as.makeTypesMatch)(k,g),"NHWC"===r?ms.assertAndGetBroadcastShape(v.outShape,k.shape):(h.hu(k.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${k.shape.length}.`)),h.hu(0===k.shape.length||k.shape[0]===v.outChannels||1===k.shape[0],(()=>`Error in fused conv2d: bias shape (${k.shape}) is not compatible with the number of output channels (${v.outChannels})`)))),null!=f){const e=f.shape;if(h.hu(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)h.hu(1===e[0]||e[0]===v.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${v.outChannels}).`));else if(3===e.length)try{ms.assertAndGetBroadcastShape(e,v.outShape)}catch(E){const t=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${v.outShape}).`;throw Error(t)}I=(0,c._1)(f,"prelu weights","fused conv2d")}const S=(e,t)=>{h.hu("NHWC"===r,(()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`));const[i,o,u,l]=t,c=(0,bs.Fr)(e,u,d);h.hu(N.I0(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const p=[(0,ys._)(o.shape,c,i,n,s),(0,gs.p)(o,c,i.shape,n,s)];if(null!=l){const e=(0,bs.pf)(l,c);p.push(e)}return p},C={x:b,filter:y,bias:k,preluActivationWeights:I},$={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:d,leakyreluAlpha:m};if(null==p){const e=(0,fs.cb)(((e,t,n)=>{let s=u.BV.runKernel(l._V0,C,$);return n([t,e,s]),x&&(s=(0,T.X)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:S}}));return e(b,y)}{const e=(0,fs.cb)(((e,t,n,s)=>{let r=u.BV.runKernel(l._V0,C,$);return s([t,e,r,n]),x&&(r=(0,T.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:S}}));return e(b,y,k)}}});var ws=n(57),vs=n(90461);const ks=(0,p.op)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:p,activation:d="linear",preluActivationWeights:f,leakyreluAlpha:m}){if(!1===(0,bs.uy)(u.BV.state.gradientDepth,d)){let u=(0,he.B)(e,t,n,s,r,a,i);return null!=p&&(u=(0,o.I)(u,p)),(0,bs.QH)(u,d,f,m)}const g=(0,c._1)(e,"x","depthwiseConv2d","float32"),y=(0,c._1)(t,"filter","depthwiseConv2d","float32");let b=g,x=!1;3===g.rank&&(x=!0,b=(0,T.X)(g,[1,g.shape[0],g.shape[1],g.shape[2]])),h.hu(4===b.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${b.rank}.`)),h.hu(4===y.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${y.rank}.`)),h.hu(b.shape[3]===y.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${b.shape[3]}) must match the inChannels dimension in filter ${y.shape[2]}.`)),null==a&&(a=[1,1]),h.hu(N.jT(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),N.m("fused depthwiseConv2d",s,i);const w=N.Ix(b.shape,y.shape,n,a,s,i,!0);let v,k;null!=p&&(v=(0,c._1)(p,"bias","fused conv2d"),[v]=(0,as.makeTypesMatch)(v,g),ms.assertAndGetBroadcastShape(w.outShape,v.shape)),null!=f&&(k=(0,c._1)(f,"prelu weights","fused depthwiseConv2d"));const I=(e,t)=>{h.hu(N.I0(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[r,o,u,l]=t,c=(0,bs.Fr)(e,u,d),p=(0,vs.v)(o.shape,c,r,n,s,a,i),f=(0,ws.z)(o,c,r.shape,n,s,a,i);if(null!=l){return[p,f,(0,bs.pf)(v,c)]}return[p,f]},S={x:b,filter:y,bias:v,preluActivationWeights:k},C={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:d,leakyreluAlpha:m};if(null==p){const e=(0,fs.cb)(((e,t,n)=>{let s=u.BV.runKernel(l.luS,S,C);return n([t,e,s]),x&&(s=(0,T.X)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:I}}));return e(b,y)}{const e=(0,fs.cb)(((e,t,n,s)=>{let r=u.BV.runKernel(l.luS,S,C);return s([t,e,r,n]),x&&(r=(0,T.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:I}}));return e(b,y,v)}}});const Is=(0,p.op)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:p=.2}){if(!1===(0,bs.uy)(u.BV.state.gradientDepth,a)){let u=(0,E.O)(e,t,n,s);return null!=r&&(u=(0,o.I)(u,r)),(0,bs.QH)(u,a,i,p)}let d=(0,c._1)(e,"a","fused matMul"),f=(0,c._1)(t,"b","fused matMul");[d,f]=(0,as.makeTypesMatch)(d,f);const m=n?d.shape[d.rank-2]:d.shape[d.rank-1],g=s?f.shape[f.rank-1]:f.shape[f.rank-2],y=n?d.shape[d.rank-1]:d.shape[d.rank-2],b=s?f.shape[f.rank-2]:f.shape[f.rank-1],x=d.shape.slice(0,-2),w=f.shape.slice(0,-2),v=h.NA(x),k=h.NA(w);h.hu(m===g,(()=>`Error in fused matMul: inner shapes (${m}) and (${g}) of Tensors with shapes ${d.shape} and ${f.shape} and transposeA=${n} and transposeB=${s} must match.`));const I=ms.assertAndGetBroadcastShape(d.shape.slice(0,-2),f.shape.slice(0,-2)).concat([y,b]),S=n?(0,T.X)(d,[v,m,y]):(0,T.X)(d,[v,y,m]),N=s?(0,T.X)(f,[k,b,g]):(0,T.X)(f,[k,g,b]);let C,$;null!=r&&(C=(0,c._1)(r,"bias","fused matMul"),[C]=(0,as.makeTypesMatch)(C,d),ms.assertAndGetBroadcastShape(I,C.shape)),null!=i&&($=(0,c._1)(i,"prelu weights","fused matMul"));const A=(e,t)=>{const[i,o,u,l]=t,c=(0,bs.Fr)((0,T.X)(e,u.shape),u,a);let h,p;if(n||s?!n&&s?(h=(0,E.O)(c,o,!1,!1),p=(0,E.O)(c,i,!0,!1)):n&&!s?(h=(0,E.O)(o,c,!1,!0),p=(0,E.O)(i,c,!1,!1)):(h=(0,E.O)(o,c,!0,!0),p=(0,E.O)(c,i,!0,!0)):(h=(0,E.O)(c,o,!1,!0),p=(0,E.O)(i,c,!0,!1)),null!=r){return[h,p,(0,bs.pf)(l,c)]}return[h,p]},D={a:S,b:N,bias:C,preluActivationWeights:$},R={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:p};if(null==r){const e=(0,fs.cb)(((e,t,n)=>{const s=u.BV.runKernel(l.usg,D,R);return n([e,t,s]),{value:(0,T.X)(s,I),gradFunc:A}}));return e(S,N)}{const e=(0,fs.cb)(((e,t,n,s)=>{const r=u.BV.runKernel(l.usg,D,R);return s([e,t,r,n]),{value:(0,T.X)(r,I),gradFunc:A}}));return e(S,N,C)}}});const Ss=(0,p.op)({hammingWindow_:function(e){return ps(e,.54,.46)}});const Ns=(0,p.op)({hannWindow_:function(e){return ps(e,.5,.5)}});const Ts=(0,p.op)({frame_:function(e,t,n,s=!1,r=0){let a=0;const i=[];for(;a+t<=e.size;)i.push((0,R.t)(e,a,t)),a+=n;if(s)for(;a<e.size;){const s=a+t-e.size,o=(0,$.z)([(0,R.t)(e,a,t-s),(0,$e.h)([s],r)]);i.push(o),a+=n}return 0===i.length?Bn([],[0,t]):(0,T.X)((0,$.z)(i),[i.length,t])}});const Cs=(0,p.op)({stft_:function(e,t,n,s,r=Ns){null==s&&(s=hs(t));const a=Ts(e,t,n),i=(0,A.d)(a,r(t));return(0,Sn.Q)(i,s)}});const $s=(0,p.op)({cropAndResize_:function(e,t,n,s,r="bilinear",a=0){const i=(0,c._1)(e,"image","cropAndResize"),o=(0,c._1)(t,"boxes","cropAndResize","float32"),p=(0,c._1)(n,"boxInd","cropAndResize","int32"),d=o.shape[0];h.hu(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),h.hu(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${d},4] but had shape ${o.shape}.`)),h.hu(1===p.rank&&p.shape[0]===d,(()=>`Error in cropAndResize: boxInd must be have size [${d}] but had shape ${o.shape}.`)),h.hu(2===s.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`)),h.hu(s[0]>=1&&s[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${s}`)),h.hu("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const f={image:i,boxes:o,boxInd:p},m={method:r,extrapolationValue:a,cropSize:s};return u.BV.runKernel(l.VcC,f,m)}});const Es=(0,p.op)({flipLeftRight_:function(e){const t=(0,c._1)(e,"image","flipLeftRight","float32");h.hu(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return u.BV.runKernel(l.Uyb,n,{})}});const As=(0,p.op)({grayscaleToRGB_:function(e){const t=(0,c._1)(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];h.hu(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),h.hu(1===s,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,(0,Te.G)(t,r)}});const Ds=(0,p.op)({rotateWithOffset_:function(e,t,n=0,s=.5){const r=(0,c._1)(e,"image","rotateWithOffset","float32");h.hu(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const a={image:r},i={radians:t,fillValue:n,center:s};return u.BV.runKernel(l.b9H,a,i)}});function Rs(e,t,n,s,r,a){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),h.hu(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was '${s}'`)),h.hu(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),h.hu(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),h.hu(1===t.rank,(()=>"scores must be a 1D tensor")),h.hu(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),h.hu(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}const _s=(0,p.op)({nonMaxSuppression_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=(0,c._1)(e,"boxes","nonMaxSuppression","float32"),i=(0,c._1)(t,"scores","nonMaxSuppression","float32"),o=Rs(a,i,n,s,r),h={maxOutputSize:n=o.maxOutputSize,iouThreshold:s=o.iouThreshold,scoreThreshold:r=o.scoreThreshold};return u.BV.runKernel(l.uv1,{boxes:a,scores:i},h)}});var Fs=n(80662);const Os=async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=(0,c._1)(e,"boxes","nonMaxSuppressionAsync"),i=(0,c._1)(t,"scores","nonMaxSuppressionAsync"),o=Rs(a,i,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const u=await Promise.all([a.data(),i.data()]),l=u[0],h=u[1],{selectedIndices:p}=(0,Fs.GP)(l,h,n,s,r);return a!==e&&a.dispose(),i!==t&&i.dispose(),Mn(p,"int32")};const Ms=(0,p.op)({nonMaxSuppressionWithScore_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=(0,c._1)(e,"boxes","nonMaxSuppression"),o=(0,c._1)(t,"scores","nonMaxSuppression"),h=Rs(i,o,n,s,r,a),p={boxes:i,scores:o},d={maxOutputSize:n=h.maxOutputSize,iouThreshold:s=h.iouThreshold,scoreThreshold:r=h.scoreThreshold,softNmsSigma:a=h.softNmsSigma},f=u.BV.runKernel(l.W0H,p,d);return{selectedIndices:f[0],selectedScores:f[1]}}});const Bs=async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=(0,c._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,c._1)(t,"scores","nonMaxSuppressionAsync"),u=Rs(i,o,n,s,r,a);n=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,a=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),h=l[0],p=l[1],{selectedIndices:d,selectedScores:f}=(0,Fs.pA)(h,p,n,s,r,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Mn(d,"int32"),selectedScores:Mn(f)}};const zs=(0,p.op)({nonMaxSuppressionPadded_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=(0,c._1)(e,"boxes","nonMaxSuppression"),o=(0,c._1)(t,"scores","nonMaxSuppression"),h=Rs(i,o,n,s,r,null),p={boxes:i,scores:o},d={maxOutputSize:h.maxOutputSize,iouThreshold:h.iouThreshold,scoreThreshold:h.scoreThreshold,padToMaxOutputSize:a},f=u.BV.runKernel(l.cye,p,d);return{selectedIndices:f[0],validOutputs:f[1]}}});const Ls=async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=(0,c._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,c._1)(t,"scores","nonMaxSuppressionAsync"),u=Rs(i,o,n,s,r,null),l=u.maxOutputSize,h=u.iouThreshold,p=u.scoreThreshold,[d,f]=await Promise.all([i.data(),o.data()]),{selectedIndices:m,validOutputs:g}=(0,Fs.qP)(d,f,l,h,p,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Mn(m,"int32"),validOutputs:(0,on.i)(g,"int32")}};var Us=n(52794),Ws=n(10959);const Ps=(0,p.op)({threshold_:function(e,t="binary",n=!1,s=.5){const r=(0,c._1)(e,"image","threshold"),a=r.shape[0]*r.shape[1];let i,u,l,p,d=(0,A.d)(Mn([s]),255);if(h.hu(3===r.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`)),h.hu(3===r.shape[2]||1===r.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`)),h.hu("int32"===r.dtype||"float32"===r.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`)),h.hu("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===r.shape[2]){[i,u,l]=(0,Nn.V)(r,[1,1,1],-1);const e=(0,A.d)(i,.2989),t=(0,A.d)(u,.587),n=(0,A.d)(l,.114);p=(0,o.I)((0,o.I)(e,t),n)}else p=e;if("otsu"===t){d=function(e,t){let n,s,r,a,i,u,l=Mn([-1]),c=Mn([0]),h=Mn([0]);for(let p=0;p<e.size-1;p++){n=(0,R.t)(e,0,p+1),s=(0,R.t)(e,p+1),i=(0,fe.h)((0,Rn.S)(n),t),u=(0,fe.h)((0,Rn.S)(s),t);const d=(0,Rn.S)((0,A.d)(n,qt(0,n.size)));r=(0,fe.h)(d,(0,Rn.S)(n));const f=(0,$e.h)(s.shape,n.size),m=(0,o.I)(qt(0,s.size),f),g=(0,A.d)(s,m);a=(0,fe.h)((0,Rn.S)(g),(0,Rn.S)(s));const y=(0,gt.l)(r,a),b=(0,gt.l)(r,a),x=(0,A.d)(i,u);h=(0,A.d)((0,A.d)(x,y),b);const w=(0,Re.p)(h,c);c=(0,Yn.a)(w,h,c),l=(0,Yn.a)(w,Mn([p]),l)}return l}(U((0,S.p)((0,rn.N)(p),"int32"),(0,Fn.X)([]),256),a)}const f=n?(0,Ue.z)(p,d):(0,Re.p)(p,d);return(0,S.p)((0,A.d)(f,255),"int32")}});const Vs=(0,p.op)({transform_:function(e,t,n="nearest",s="constant",r=0,a){const i=(0,c._1)(e,"image","transform","float32"),o=(0,c._1)(t,"transforms","transform","float32");h.hu(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),h.hu(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),h.hu(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const p={image:i,transforms:o},d={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return u.BV.runKernel(l.wx7,p,d)}});const Gs=(0,p.op)({bandPart_:function(e,t,n){const s=(0,c._1)(e,"a","bandPart");(0,h.hu)(s.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`));const r=s.shape,[a,i]=s.shape.slice(-2);let o,u;"number"==typeof t?((0,h.hu)(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,h.hu)(t<=a,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`)),o=(0,c._1)(t<0?a:t,"numLower","bandPart")):((0,h.hu)("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),o=(0,Yn.a)((0,Le.d)(t,0),a,(0,ht.L)(t,a))),"number"==typeof n?((0,h.hu)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),(0,h.hu)(n<=i,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`)),u=(0,c._1)(n<0?i:n,"numUpper","bandPart")):((0,h.hu)("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),u=(0,Yn.a)((0,Le.d)(n,0),i,(0,ht.L)(n,i)));const l=(0,T.X)(qt(0,a,1,"int32"),[-1,1]),p=qt(0,i,1,"int32"),d=(0,gt.l)(l,p),f=(0,qe.H)((0,Ue.z)(d,o),(0,_e.b)(d,(0,wt.W)(u))),m=(0,es.l)([a,i],s.dtype);return(0,T.X)((0,En.k)((0,qn.H)((0,T.X)(s,[-1,a,i])).map((e=>(0,Yn.a)(f,e,m)))),r)}});const Hs=(0,p.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,h.hu)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,h.hu)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=(0,Nn.V)(e,e.shape[0],0).map((e=>(0,$n.L)(e,[0])));(0,h.hu)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],s=e;for(let r=0;r<e.length;++r)n.push(u.BV.tidy((()=>{let e=s[r];if(r>0)for(let t=0;t<r;++t){const s=(0,A.d)((0,Rn.S)((0,A.d)(n[t],e)),n[t]);e=(0,gt.l)(e,s)}return(0,fe.h)(e,(0,rs.K)(e,"euclidean"))})));return t?(0,En.k)(n,0):n}});var js=n(14069);function Xs(e,t=!1){return u.BV.tidy((()=>{(0,h.hu)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],s=e.shape[1];let r=Ce(n),a=(0,X.d)(e);const i=Bn([[1]],[1,1]);let o=(0,X.d)(i);const l=n>=s?s:n;for(let e=0;e<l;++e){const t=a,l=o,c=r;[o,a,r]=u.BV.tidy((()=>{const t=(0,R.t)(a,[e,e],[n-e,1]),u=(0,rs.K)(t),l=(0,R.t)(a,[e,e],[1,1]),c=(0,Yn.a)((0,Re.p)(l,0),Bn([[-1]]),Bn([[1]])),h=(0,gt.l)(l,(0,A.d)(c,u)),p=(0,fe.h)(t,h);o=1===p.shape[0]?(0,X.d)(i):(0,$.z)([i,(0,R.t)(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=(0,wt.W)((0,fe.h)((0,E.O)(c,h),u)),f=(0,R.t)(a,[e,0],[n-e,s]),m=(0,A.d)(d,o),g=(0,ss.p)(o);if(0===e)a=(0,gt.l)(f,(0,E.O)(m,(0,E.O)(g,f)));else{const t=(0,gt.l)(f,(0,E.O)(m,(0,E.O)(g,f)));a=(0,$.z)([(0,R.t)(a,[0,0],[e,s]),t],0)}const y=(0,ss.p)(m),b=(0,R.t)(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=(0,gt.l)(b,(0,E.O)((0,E.O)(b,o),y));else{const t=(0,gt.l)(b,(0,E.O)((0,E.O)(b,o),y));r=(0,$.z)([(0,R.t)(r,[0,0],[n,e]),t],1)}return[o,a,r]})),(0,js.B9)([t,l,c])}return!t&&n>s&&(r=(0,R.t)(r,[0,0],[n,s]),a=(0,R.t)(a,[0,0],[s,s])),[r,a]}))}const qs=(0,p.op)({qr_:function(e,t=!1){if((0,h.hu)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Xs(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),s=(0,qn.H)((0,T.X)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];s.forEach((e=>{const[n,s]=Xs(e,t);r.push(n),a.push(s)}));return[(0,T.X)((0,En.k)(r,0),e.shape),(0,T.X)((0,En.k)(a,0),e.shape)]}}});var Ks=n(72375);const Qs=(0,p.op)({computeWeightedLoss_:function(e,t,n=Ks.I.SUM_BY_NONZERO_WEIGHTS){const s=(0,c._1)(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=(0,c._1)(t,"weights","computeWeightedLoss"));const a=null==r?s:(0,A.d)(s,r);if(n===Ks.I.NONE)return a;if(n===Ks.I.SUM)return(0,Rn.S)(a);if(n===Ks.I.MEAN){if(null==r)return(0,it.J)(a);{const e=s.size/r.size,t=(0,fe.h)((0,Rn.S)(a),(0,Rn.S)(r));return e>1?(0,fe.h)(t,(0,on.i)(e)):t}}if(n===Ks.I.SUM_BY_NONZERO_WEIGHTS){if(null==r)return(0,fe.h)((0,Rn.S)(a),(0,on.i)(s.size));{const e=(0,A.d)(r,(0,ot.i)(s.shape)),t=(0,S.p)((0,Rn.S)((0,vt.Q)(e,(0,on.i)(0))),"float32");return(0,fe.h)((0,Rn.S)(a),t)}}throw Error(`Unknown reduction: ${n}`)}});const Ys=(0,p.op)({absoluteDifference_:function(e,t,n,s=Ks.I.SUM_BY_NONZERO_WEIGHTS){const a=(0,c._1)(e,"labels","absoluteDifference"),i=(0,c._1)(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=(0,c._1)(n,"weights","absoluteDifference")),(0,h.k5)(a.shape,i.shape,"Error in absoluteDifference: ");const u=(0,r.W)((0,gt.l)(a,i));return Qs(u,o,s)}});const Js=(0,p.op)({cosineDistance_:function(e,t,n,s,r=Ks.I.SUM_BY_NONZERO_WEIGHTS){const a=(0,c._1)(e,"labels","cosineDistance"),i=(0,c._1)(t,"predictions","cosineDistance");let o=null;null!=s&&(o=(0,c._1)(s,"weights","cosineDistance")),(0,h.k5)(a.shape,i.shape,"Error in cosineDistance: ");const u=(0,on.i)(1),l=(0,gt.l)(u,(0,Rn.S)((0,A.d)(a,i),n,!0));return Qs(l,o,r)}});const Zs=(0,p.op)({hingeLoss_:function(e,t,n,s=Ks.I.SUM_BY_NONZERO_WEIGHTS){let r=(0,c._1)(e,"labels","hingeLoss");const a=(0,c._1)(t,"predictions","hingeLoss");let i=null;null!=n&&(i=(0,c._1)(n,"weights","hingeLoss")),(0,h.k5)(r.shape,a.shape,"Error in hingeLoss: ");const o=(0,on.i)(1);r=(0,gt.l)((0,A.d)((0,on.i)(2),r),o);const u=(0,Yt.U)((0,gt.l)(o,(0,A.d)(r,a)));return Qs(u,i,s)}});const er=(0,p.op)({huberLoss_:function(e,t,n,s=1,a=Ks.I.SUM_BY_NONZERO_WEIGHTS){const i=(0,c._1)(e,"labels","huberLoss"),u=(0,c._1)(t,"predictions","huberLoss");let l=null;null!=n&&(l=(0,c._1)(n,"weights","huberLoss")),(0,h.k5)(i.shape,u.shape,"Error in huberLoss: ");const p=(0,on.i)(s),d=(0,r.W)((0,gt.l)(u,i)),f=(0,ht.L)(d,p),m=(0,gt.l)(d,f),g=(0,o.I)((0,A.d)((0,on.i)(.5),(0,mt.h)(f)),(0,A.d)(p,m));return Qs(g,l,a)}});const tr=(0,p.op)({logLoss_:function(e,t,n,s=1e-7,r=Ks.I.SUM_BY_NONZERO_WEIGHTS){const a=(0,c._1)(e,"labels","logLoss"),i=(0,c._1)(t,"predictions","logLoss");let u=null;null!=n&&(u=(0,c._1)(n,"weights","logLoss")),(0,h.k5)(a.shape,i.shape,"Error in logLoss: ");const l=(0,on.i)(1),p=(0,on.i)(s),d=(0,wt.W)((0,A.d)(a,(0,Ve.c)((0,o.I)(i,p)))),f=(0,A.d)((0,gt.l)(l,a),(0,Ve.c)((0,o.I)((0,gt.l)(l,i),p))),m=(0,gt.l)(d,f);return Qs(m,u,r)}});const nr=(0,p.op)({meanSquaredError_:function(e,t,n,s=Ks.I.SUM_BY_NONZERO_WEIGHTS){const r=(0,c._1)(e,"labels","meanSquaredError"),a=(0,c._1)(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=(0,c._1)(n,"weights","meanSquaredError")),(0,h.k5)(r.shape,a.shape,"Error in meanSquaredError: ");const o=(0,Cn.$)(r,a);return Qs(o,i,s)}});const sr=(0,p.op)({sigmoidCrossEntropy_:function(e,t,n,s=0,a=Ks.I.SUM_BY_NONZERO_WEIGHTS){let i=(0,c._1)(e,"multiClassLabels","sigmoidCrossEntropy");const u=(0,c._1)(t,"logits","sigmoidCrossEntropy");let l=null;if(null!=n&&(l=(0,c._1)(n,"weights","sigmoidCrossEntropy")),(0,h.k5)(i.shape,u.shape,"Error in sigmoidCrossEntropy: "),s>0){const e=(0,on.i)(s),t=(0,on.i)(1),n=(0,on.i)(.5);i=(0,o.I)((0,A.d)(i,(0,gt.l)(t,e)),(0,A.d)(n,e))}const p=function(e,t){const n=(0,c._1)(e,"labels","sigmoidCrossEntropyWithLogits"),s=(0,c._1)(t,"logits","sigmoidCrossEntropyWithLogits");(0,h.k5)(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=(0,Yt.U)(s),i=(0,A.d)(s,n),u=(0,Ge.K)((0,Ie.Q)((0,wt.W)((0,r.W)(s))));return(0,o.I)((0,gt.l)(a,i),u)}(i,u);return Qs(p,l,a)}});const rr=(0,p.op)({softmaxCrossEntropy_:function(e,t,n,s=0,r=Ks.I.SUM_BY_NONZERO_WEIGHTS){let a=(0,c._1)(e,"onehotLabels","softmaxCrossEntropy");const i=(0,c._1)(t,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=(0,c._1)(n,"weights","softmaxCrossEntropy")),(0,h.k5)(a.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const e=(0,on.i)(s),t=(0,on.i)(1),n=(0,on.i)(a.shape[1]);a=(0,o.I)((0,A.d)(a,(0,gt.l)(t,e)),(0,fe.h)(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const s=(0,fs.cb)(((e,t,s)=>{const r=(0,Xe.l)(t,[n],!0),a=(0,gt.l)((0,S.p)(t,"float32"),r);s([e,a]);const i=(0,wt.W)((0,A.d)(a,e));return{value:(0,Rn.S)(i,[n]),gradFunc:(e,t)=>{const[s,r]=t,a=(0,ft.rv)(e.shape,[n]);return[(0,A.d)((0,T.X)(e,a),(0,gt.l)((0,S.p)(s,"float32"),(0,Ie.Q)(r))),(0,A.d)((0,T.X)(e,a),(0,gt.l)((0,Ie.Q)(r),(0,S.p)(s,"float32")))]}}}));return s(e,t)}(a,i);return Qs(l,u,r)}});const ar=(0,p.op)({sparseFillEmptyRows_:function(e,t,n,s){const r=(0,c._1)(e,"indices","sparseFillEmptyRows","int32"),a=(0,c._1)(t,"values","sparseFillEmptyRows"),i=(0,c._1)(n,"denseShape","sparseFillEmptyRows","int32"),o=(0,c._1)(s,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==r.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const h={indices:r,values:a,denseShape:i,defaultValue:o},p=u.BV.runKernel(l.O3z,h);return{outputIndices:p[0],outputValues:p[1],emptyRowIndicator:p[2],reverseIndexMap:p[3]}}});const ir=(0,p.op)({sparseReshape_:function(e,t,n){const s=(0,c._1)(e,"inputIndices","sparseReshape","int32"),r=(0,c._1)(t,"inputShape","sparseReshape","int32"),a=(0,c._1)(n,"newShape","sparseReshape","int32");if(2!==s.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==r.rank)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:s,inputShape:r,newShape:a},o=u.BV.runKernel(l.nhH,i);return{outputIndices:o[0],outputShape:o[1]}}});const or=(0,p.op)({sparseSegmentMean_:function(e,t,n){const s=(0,c._1)(e,"data","sparseSegmentMean"),r=(0,c._1)(t,"indices","sparseSegmentMean","int32"),a=(0,c._1)(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${r.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const i={data:s,indices:r,segmentIds:a};return u.BV.runKernel(l.w3H,i)}});const ur=(0,p.op)({sparseSegmentSum_:function(e,t,n){const s=(0,c._1)(e,"data","sparseSegmentSum"),r=(0,c._1)(t,"indices","sparseSegmentSum","int32"),a=(0,c._1)(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${r.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const i={data:s,indices:r,segmentIds:a};return u.BV.runKernel(l.ZjV,i)}});const lr=(0,p.op)({stringNGrams_:function(e,t,n,s,r,a,i,o){const h=(0,c._1)(e,"data","stringNGrams","string");if("string"!==h.dtype)throw new Error("Data must be of datatype string");if(1!==h.shape.length)throw new Error(`Data must be a vector, saw: ${h.shape}`);const p=(0,c._1)(t,"dataSplits","stringNGrams");if("int32"!==p.dtype)throw new Error("Data splits must be of datatype int32");const d={separator:n,nGramWidths:s,leftPad:r,rightPad:a,padWidth:i,preserveShortSequences:o},f={data:h,dataSplits:p},m=u.BV.runKernel(l._JP,f,d);return{nGrams:m[0],nGramsSplits:m[1]}}});const cr=(0,p.op)({stringSplit_:function(e,t,n=!0){const s=(0,c._1)(e,"input","stringSplit","string"),r=(0,c._1)(t,"delimiter","stringSplit","string");if(1!==s.rank)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(0!==r.rank)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const a={skipEmpty:n},i={input:s,delimiter:r},o=u.BV.runKernel(l.s1s,i,a);return{indices:o[0],values:o[1],shape:o[2]}}});const hr=(0,p.op)({stringToHashBucketFast_:function(e,t){const n=(0,c._1)(e,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return u.BV.runKernel(l.XkS,r,s)}});const pr=(0,p.op)({staticRegexReplace_:function(e,t,n,s=!0){const r=(0,c._1)(e,"input","staticRegexReplace","string"),a={pattern:t,rewrite:n,replaceGlobal:s};return u.BV.runKernel(l.e0R,{x:r},a)}}),dr={fft:vn.k,ifft:kn.S,rfft:Sn.Q,irfft:In.w},fr={hammingWindow:Ss,hannWindow:Ns,frame:Ts,stft:Cs},mr={flipLeftRight:Es,grayscaleToRGB:As,resizeNearestNeighbor:Ws.j,resizeBilinear:Us.I,rotateWithOffset:Ds,cropAndResize:$s,nonMaxSuppression:_s,nonMaxSuppressionAsync:Os,nonMaxSuppressionWithScore:Ms,nonMaxSuppressionWithScoreAsync:Bs,nonMaxSuppressionPadded:zs,nonMaxSuppressionPaddedAsync:Ls,threshold:Ps,transform:Vs},gr={bandPart:Gs,gramSchmidt:Hs,qr:qs},yr={absoluteDifference:Ys,computeWeightedLoss:Qs,cosineDistance:Js,hingeLoss:Zs,huberLoss:er,logLoss:tr,meanSquaredError:nr,sigmoidCrossEntropy:sr,softmaxCrossEntropy:rr},br={sparseFillEmptyRows:ar,sparseReshape:ir,sparseSegmentMean:or,sparseSegmentSum:ur},xr={stringNGrams:lr,stringSplit:cr,stringToHashBucketFast:hr,staticRegexReplace:pr}},78170:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({pad_:function(e,t,n=0){const i=(0,a._1)(e,"x","pad");if(0===i.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:t,constantValue:n},u={x:i};return s.BV.runKernel(r.lyA,u,o)}})},86826:(e,t,n)=>{"use strict";n.d(t,{d:()=>p});var s=n(53133),r=n(50756),a=n(78940),i=n(24131),o=n(86294),u=n(70173),l=n(83118),c=n(66398),h=n(21752);const p=(0,l.op)({pool_:function(e,t,n,l,p,d,f){null==p&&(p=[1,1]),null==d&&(d=1),0===l&&(l="valid");const m=(0,s._1)(e,"x","maxPool");let g=m,y=!1;3===m.rank&&(y=!0,g=(0,c.X)(m,[1,m.shape[0],m.shape[1],m.shape[2]])),r.hu(o.jT(d,p),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${d} and dilations '${p}'`));const b=o.Xw(g.shape,t,d,p,l),x=[b.dilationHeight,b.dilationWidth];let w;w="same"===l?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),s=n.map((e=>Math.floor(e/2))),r=n.map(((e,t)=>e-s[t]));return n.map(((e,t)=>[s[t],r[t]]))}([b.filterHeight,b.filterWidth],x):[[0,0],[0,0]];const v=1===x[0]&&1===x[1],[k,I]=function(e,t,n){const s=n.map((e=>e[0])),r=n.map((e=>e[1])),a=e.concat(s,r),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=r.map(((e,t)=>e+i[t])),u=t.map(((e,t)=>[s[t],o[t]])),l=t.map(((e,t)=>[0,i[t]]));return[u,l]}([b.inHeight,b.inWidth],x,w),S=v?l:"valid",N=v?g:(0,h.f)(g,x,k),T=("avg"===n?()=>(0,a.w)(N,t,d,S,f):()=>(0,u._)(N,t,d,S,f))(),C=v?T:(0,i.E)(T,x,I);return y?(0,c.X)(C,[C.shape[1],C.shape[2],C.shape[3]]):C}})},59715:(e,t,n)=>{"use strict";n.d(t,{s:()=>o});var s=n(47672),r=n(65853),a=n(54699),i=n(53133);const o=(0,n(83118).op)({pow_:function(e,t){let n=(0,i._1)(e,"base","pow"),o=(0,i._1)(t,"exp","pow");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return s.BV.runKernel(r.pe_,u)}})},70756:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({prelu_:function(e,t){const n={x:(0,a._1)(e,"x","prelu"),alpha:(0,a._1)(t,"alpha","prelu")};return s.BV.runKernel(r.o0g,n)}})},73860:(e,t,n)=>{"use strict";function s(e,t=!1){console.log(e.toString(t))}n.d(t,{S:()=>s})},66422:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var s=n(47672),r=n(65853),a=n(53133),i=n(27742);const o=(0,n(83118).op)({prod_:function(e,t=null,n=!1){let o=(0,a._1)(e,"x","prod");"bool"===o.dtype&&(o=(0,i.p)(o,"int32"));const u={x:o},l={axis:t,keepDims:n};return s.BV.runKernel(r.DlI,u,l)}})},98974:(e,t,n)=>{"use strict";n.d(t,{k:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({real_:function(e){const t={input:(0,a._1)(e,"input","real")};return s.BV.runKernel(r.xJR,t)}})},75972:(e,t,n)=>{"use strict";n.d(t,{M:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({reciprocal_:function(e){const t={x:(0,a._1)(e,"x","reciprocal")};return s.BV.runKernel(r.$HU,t)}})},10440:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({relu_:function(e){const t={x:(0,a._1)(e,"x","relu")};return s.BV.runKernel(r.qkr,t)}})},8459:(e,t,n)=>{"use strict";n.d(t,{b:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({relu6_:function(e){const t={x:(0,a._1)(e,"x","relu6")};return s.BV.runKernel(r.SbG,t)}})},66398:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({reshape_:function(e,t){const n={x:(0,a._1)(e,"x","reshape","string_or_numeric")},i={shape:t};return s.BV.runKernel(r.HZH,n,i)}})},93750:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({reverse_:function(e,t){const n={x:(0,a._1)(e,"x","reverse")},i={dims:t};return s.BV.runKernel(r.mKl,n,i)}})},9452:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({round_:function(e){const t={x:(0,a._1)(e,"x","round")};return s.BV.runKernel(r.e07,t)}})},66823:(e,t,n)=>{"use strict";n.d(t,{b:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({rsqrt_:function(e){const t={x:(0,a._1)(e,"x","rsqrt","float32")};return s.BV.runKernel(r.bV0,t)}})},15656:(e,t,n)=>{"use strict";n.d(t,{i:()=>a});var s=n(80884),r=n(29058);function a(e,t){if(((0,s.isTypedArray)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,s.isTypedArray)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,r.H)(e,[],[],t)}},53766:(e,t,n)=>{"use strict";n.r(t),n.d(t,{calculateShapes:()=>i,validateInput:()=>a,validateUpdateShape:()=>r});var s=n(50756);function r(e,t,n){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+" update.rank != "+(r+e.length-s));for(let i=0;i<r;++i)if(n.shape[i]!==t.shape[i])throw new Error(a+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-r;++i)if(n.shape[i+r]!==e[i+s])throw new Error(a+` updates.shape[${i+r}] (${n.shape[i+r]}) != shape[${i+r}] (${e[i+r]})`)}function a(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}r(n,t,e)}function i(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,i=n.length;let o=1;for(let s=a;s<i;++s)o*=n[s];const u=a<1?1:a;return{sliceRank:a,numUpdates:(0,s.NA)(t.shape)/u,sliceSize:o,strides:[...(0,s.e3)(n.slice(0,a)),1],outputSize:(0,s.NA)(n)}}},71641:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({selu_:function(e){const t={x:(0,a._1)(e,"x","selu")};return s.BV.runKernel(r.oFR,t)}})},41627:(e,t,n)=>{"use strict";n.d(t,{$:()=>r,y:()=>s});const s=1.7580993408473768,r=1.0507009873554805},50447:(e,t,n)=>{"use strict";n.d(t,{U:()=>l});var s=n(53133),r=n(50756),a=n(46387),i=n(44851),o=n(83118),u=n(66398);const l=(0,o.op)({separableConv2d_:function(e,t,n,o,l,c=[1,1],h="NHWC"){const p=(0,s._1)(e,"x","separableConv2d"),d=(0,s._1)(t,"depthwiseFilter","separableConv2d"),f=(0,s._1)(n,"pointwiseFilter","separableConv2d");let m=p,g=!1;if(3===p.rank&&(g=!0,m=(0,u.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),"NCHW"===h)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");r.hu(4===m.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`)),r.hu(4===d.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${d.rank}.`)),r.hu(4===f.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${d.rank}.`)),r.hu(1===f.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`)),r.hu(1===f.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`));const y=d.shape[2],b=d.shape[3];r.hu(f.shape[2]===y*b,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${y*b}, but got ${f.shape[2]}.`));const x=(0,i.B)(m,d,o,l,h,c),w=(0,a.T)(x,f,1,"valid",h);return g?(0,u.X)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})},88813:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({sigmoid_:function(e){const t={x:(0,a._1)(e,"x","sigmoid","float32")};return s.BV.runKernel(r.a5O,t)}})},39882:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({sign_:function(e){const t={x:(0,a._1)(e,"x","sign")};return s.BV.runKernel(r.i5y,t)}})},92751:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({sin_:function(e){const t={x:(0,a._1)(e,"x","sin","float32")};return s.BV.runKernel(r.RQH,t)}})},70454:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({sinh_:function(e){const t={x:(0,a._1)(e,"x","sinh")};return s.BV.runKernel(r.wYB,t)}})},21501:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({slice_:function(e,t,n){const i=(0,a._1)(e,"x","slice","string_or_numeric");if(0===i.rank)throw new Error("Slicing scalar is not possible");const o={x:i},u={begin:t,size:n};return s.BV.runKernel(r.p2w,o,u)}})},81620:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertParamsValid:()=>r,computeFlatOffset:()=>y,computeOutShape:()=>i,getNormalizedAxes:()=>c,isSliceContinous:()=>g,maskToAxes:()=>a,parseSliceParams:()=>b,sliceInfo:()=>x,startForAxis:()=>f,startIndicesWithElidedDims:()=>h,stopForAxis:()=>m,stopIndicesWithElidedDims:()=>p,stridesForAxis:()=>d,stridesWithElidedDims:()=>o});var s=n(50756);function r(e,t,n){const r=e.shape.length;s.hu(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),s.hu(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)s.hu(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function a(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function i(e,t,n){const s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function o(e,t,n,s){const r=[...e];for(let a=r.length;a<s.length;a++)r.push(1);for(let a=0;a<n;a++)0===a?r[t]=1:(r.splice(t,0,1),r.pop());return r}function u(e,t,n){return n<=e?n:n-(t-1)}function l(e,t){const n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function c(e,t,n,s,r,a,i,u,l){const c=e.length;let g=new Array(c),y=new Array(c),b=new Array(c);if(t.length&&n>0){const l=t[0],c=n+1;g=h(i,l,c,s,e),y=p(u,l,c,r,e),b=o(a,l,c,e)}else for(let o=0;o<c;o++)g[o]=f(i,s,a,e,o,l),y[o]=m(u,r,a,e,o,l),b[o]=d(a,o,l);return{begin:g,end:y,strides:b}}function h(e,t,n,s,r){const a=[...r],i=l(n,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=0;else{const r=u(t,n,o);let i=s[r];e&1<<r&&(i=0),a[o]=i}return a}function p(e,t,n,r,a){const i=[...a],o=l(n,t);for(let s=0;s<i.length;s++)if(o.indexOf(s)>-1)i[s]=Number.MAX_SAFE_INTEGER;else{const a=u(t,n,s);let o=r[a];e&1<<a&&(o=Number.MAX_SAFE_INTEGER),i[s]=o}for(let u=0;u<i.length;u++){const e=a[u];i[u]<0&&(i[u]+=e),i[u]=s.uZ(0,i[u],a[u])}return i}function d(e,t,n){let s=e[t];return(n&1<<t||null==s)&&(s=1),s}function f(e,t,n,r,a,i){let o=t[a];const u=n[a]||1;(e&1<<a||i&1<<a||null==o)&&(o=u>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[a];return o<0&&(o+=l),o=s.uZ(0,o,l-1),o}function m(e,t,n,r,a,i){let o=t[a];const u=n[a]||1;(e&1<<a||i&1<<a||null==o)&&(o=u>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[a];return o<0&&(o+=l),o=u>0?s.uZ(0,o,l):s.uZ(-1,o,l-1),o}function g(e,t,n){let s=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){s=r;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function y(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function b(e,t,n){let r;const a=e.shape.length;let i;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{s.hu(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(s.hu(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,i]}function x(e,t,n,s,r,a,i,o,u){let l;if(null==s?(l=new Array(t.length),l.fill(1)):l=s,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let b=0;b<h.dims;b++)c&&0!=(1<<b&o)&&h.numAddAxisAfterEllipsis++,1<<b&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[s]),null!=e.end&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}(h,p);let d=!0,f=!0,m=!0;const g=[],y=[];for(let b=0;b<e.length;++b){if(0===p.strides[b])throw Error(`strides[${b}] must be non-zero`);const t=!!(p.shrinkAxisMask&1<<b),n=e[b];if(-1===n){g.push(t?1:-1);continue}const s=[p.beginMask&1<<b,p.endMask&1<<b],r=[p.strides[b]>0?0:-1,p.strides[b]>0?n:n-1];if(t&&p.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[b];const a=!!(p.beginMask&1<<b&&p.endMask&1<<b);if(p.beginValid&&p.endValid){if(t){const e=p.begin[b]<0?n+p.begin[b]:p.begin[b];if(p.begin[b]=e,p.end[b]=p.begin[b]+1,e<0||e>=n)throw Error(`slice index ${p.begin[b]} of dimension ${b} out of bounds.`)}else p.begin[b]=w(p.begin[b],0,p.strides[b],n,s,r),p.end[b]=w(p.end[b],1,p.strides[b],n,s,r);const e=1===p.strides[b]&&0===p.begin[b]&&p.end[b]===n;d=d&&e,f=f&&(0===b&&1===p.strides[b]||e)}else d=d&&1===p.strides[b]&&a,f=f&&(0===b&&1===p.strides[b]||a);let i,o=!1;if(p.beginValid&&p.endValid?(i=p.end[b]-p.begin[b],o=!0):t?(i=1,o=!0):a&&n>=0&&(i=p.strides[b]<0?-n:n,o=!0),o){let e;e=0===i||i<0!=p.strides[b]<0?0:Math.trunc(i/p.strides[b])+(i%p.strides[b]!=0?1:0),g.push(e)}else g.push(-1)}for(let b=0;b<p.finalShapeGatherIndices.length;++b){const e=p.finalShapeGatherIndices[b];e>=0?y.push(g[e]):-2===e&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==p.finalShapeGatherIndices[t])),finalShape:y,isIdentity:d,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function w(e,t,n,s,r,a){if(r[t])return n>0?a[t]:a[t+1&1];{const t=e<0?s+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}},87411:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({softmax_:function(e,t=-1){const n=(0,a._1)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const i={logits:n},o={dim:t};return s.BV.runKernel(r.Gcp,i,o)}})},91628:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({softplus_:function(e){const t={x:(0,a._1)(e,"x","softplus")};return s.BV.runKernel(r.MRv,t)}})},21752:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var s=n(47672),r=n(65853),a=n(53133),i=n(50756);const o=(0,n(83118).op)({spaceToBatchND_:function(e,t,n){const o=(0,a._1)(e,"x","spaceToBatchND");i.hu(o.rank>=1+t.length,(()=>`input rank ${o.rank} should be > than [blockShape] ${t.length}`)),i.hu(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),i.hu(o.shape.reduce(((e,s,r)=>r>0&&r<=t.length?e&&(s+n[r-1][0]+n[r-1][1])%t[r-1]==0:e),!0),(()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const u={x:o},l={blockShape:t,paddings:n};return s.BV.runKernel(r.TQc,u,l)}})},40789:(e,t,n)=>{"use strict";n.d(t,{k:()=>i});var s=n(47672),r=n(65853),a=n(50756);const i=(0,n(83118).op)({fft_:function(e){(0,a.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return s.BV.runKernel(r.vwp,t)}})},25615:(e,t,n)=>{"use strict";n.d(t,{S:()=>i});var s=n(47672),r=n(65853),a=n(50756);const i=(0,n(83118).op)({ifft_:function(e){(0,a.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return s.BV.runKernel(r.Qg5,t)}})},52328:(e,t,n)=>{"use strict";n.d(t,{w:()=>f});var s=n(37496),r=n(2344),a=n(3073),i=n(81009),o=n(83118),u=n(98974),l=n(66398),c=n(93750),h=n(15656),p=n(21501),d=n(25615);const f=(0,o.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let o;if(t<=2){const s=(0,l.X)(e,[n,t]);o=(0,d.S)(s)}else{const f=[n,2*(t-1)],m=(0,l.X)((0,u.k)(e),[n,t]),g=(0,l.X)((0,a.a)(e),[n,t]),y=(0,c.G)((0,p.t)(m,[0,1],[n,t-2]),1),b=(0,i.d)((0,c.G)((0,p.t)(g,[0,1],[n,t-2]),1),(0,h.i)(-1)),x=(0,r.z)([m,y],1),w=(0,r.z)([g,b],1),v=(0,l.X)((0,s.P)(x,w),[f[0],f[1]]);o=(0,d.S)(v)}if(o=(0,u.k)(o),3===e.rank&&0!==e.shape[0]){const t=o,n=e.shape[0];o=(0,l.X)(o,[n,o.shape[0]/n,o.shape[1]]),t.dispose()}return o}})},34895:(e,t,n)=>{"use strict";n.d(t,{Q:()=>m});var s=n(50756),r=n(37496),a=n(2344),i=n(3073),o=n(83118),u=n(98974),l=n(66398),c=n(21501),h=n(20953),p=n(72622),d=n(39047),f=n(40789);const m=(0,o.op)({rfft_:function(e,t){(0,s.hu)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const o=e.size/n;let m;if(null!=t&&t<n){const s=e.shape.map((e=>0)),r=e.shape.map((e=>e));r[e.shape.length-1]=t,m=(0,c.t)(e,s,r),n=t}else if(null!=t&&t>n){const s=e.shape.map((e=>e));s[e.shape.length-1]=t-n,m=(0,a.z)([e,(0,p.l)(s)],e.shape.length-1),n=t}else m=e;const g=(0,d.P)(m),y=(0,l.X)((0,r.P)(m,g),[o,n]),b=(0,f.k)(y),x=Math.floor(n/2)+1,w=(0,u.k)(b),v=(0,i.a)(b),k=(0,h.V)(w,[x,n-x],w.shape.length-1),I=(0,h.V)(v,[x,n-x],v.shape.length-1),S=m.shape.slice();return S[m.shape.length-1]=x,(0,l.X)((0,r.P)(k[0],I[0]),S)}})},20953:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({split_:function(e,t,n=0){const i={x:(0,a._1)(e,"x","split")},o={numOrSizeSplits:t,axis:n};return s.BV.runKernel(r.L8s,i,o)}})},7149:(e,t,n)=>{"use strict";n.d(t,{_:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({sqrt_:function(e){const t={x:(0,a._1)(e,"x","sqrt","float32")};return s.BV.runKernel(r.FKq,t)}})},79512:(e,t,n)=>{"use strict";n.d(t,{h:()=>a});var s=n(47672),r=n(53133);const a=(0,n(83118).op)({square_:function(e){const t=(0,r._1)(e,"x","square");return s.BV.runKernel("Square",{x:t},{})}})},8258:(e,t,n)=>{"use strict";n.d(t,{$:()=>u});var s=n(47672),r=n(65853),a=n(54699),i=n(53133),o=n(65052);const u=(0,n(83118).op)({squaredDifference_:function(e,t){let n=(0,i._1)(e,"a","squaredDifference"),u=(0,i._1)(t,"b","squaredDifference");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return s.BV.runKernel(r._tC,l,{})}})},26507:(e,t,n)=>{"use strict";n.d(t,{L:()=>o});var s=n(53133),r=n(50756),a=n(83118),i=n(66398);const o=(0,a.op)({squeeze_:function(e,t){const n=(0,s._1)(e,"x","squeeze","string_or_numeric");return(0,i.X)(n,(0,r.bp)(n.shape,t).newShape)}})},84505:(e,t,n)=>{"use strict";n.d(t,{k:()=>o});var s=n(47672),r=n(65853),a=n(53133),i=n(50756);const o=(0,n(83118).op)({stack_:function(e,t=0){const n=(0,a.sI)(e,"tensors","stack","string_or_numeric");i.hu(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&i.hu(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const o=n,u={axis:t};return s.BV.runKernel(r.QiL,o,u)}})},74431:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({step_:function(e,t=0){const n={x:(0,a._1)(e,"x","step")},i={alpha:t};return s.BV.runKernel(r.h8e,n,i)}})},36383:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({stridedSlice_:function(e,t,n,i,o=0,u=0,l=0,c=0,h=0){const p={x:(0,a._1)(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:i,beginMask:o,endMask:u,ellipsisMask:l,newAxisMask:c,shrinkAxisMask:h};return s.BV.runKernel(r.jQk,p,d)}})},69392:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var s=n(47672),r=n(65853),a=n(54699),i=n(53133);const o=(0,n(83118).op)({sub_:function(e,t){let n=(0,i._1)(e,"a","sub"),o=(0,i._1)(t,"b","sub");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return s.BV.runKernel(r.Tr8,u)}})},16966:(e,t,n)=>{"use strict";n.d(t,{S:()=>o});var s=n(47672),r=n(65853),a=n(53133),i=n(27742);const o=(0,n(83118).op)({sum_:function(e,t=null,n=!1){let o=(0,a._1)(e,"x","sum");"bool"===o.dtype&&(o=(0,i.p)(o,"int32"));const u={x:o},l={axis:t,keepDims:n};return s.BV.runKernel(r.GBy,u,l)}})},45794:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({tan_:function(e){const t={x:(0,a._1)(e,"x","tan","float32")};return s.BV.runKernel(r.sEM,t)}})},49291:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({tanh_:function(e){const t={x:(0,a._1)(e,"x","tanh","float32")};return s.BV.runKernel(r.MIZ,t)}})},32209:(e,t,n)=>{"use strict";n.d(t,{X:()=>a});var s=n(53133),r=n(29058);function a(e,t,n){const a=(0,s.C)(e,n);return(0,r.H)(e,t,a,n)}},39134:(e,t,n)=>{"use strict";n.d(t,{w:()=>i});var s=n(53133),r=n(50756),a=n(29058);function i(e,t,n){if((0,r.Cq)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const i=(0,s.C)(e,n);if(3!==i.length&&1!==i.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===i.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,a.H)(e,t,i,n)}},29058:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var s=n(47672),r=n(66261),a=n(50756),i=n(80884);function o(e,t,n,o){if(null==o)o=(0,a.D2)(e);else if("complex64"===o)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if((0,r.$F)(e)||(0,r.Oq)(e)){if("float32"!==o&&"int32"!==o)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${o}.`);return s.BV.backend.createTensorFromGPUData(e,t||n,o)}if(!(0,i.isTypedArray)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,a.Mu)(t);const e=(0,a.NA)(t),s=(0,a.NA)(n);(0,a.hu)(e===s,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${s}`));for(let r=0;r<n.length;++r){const e=n[r],s=r!==n.length-1||e!==(0,a.NA)(t.slice(r));(0,a.hu)(n[r]===t[r]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,i.isTypedArray)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==o?(0,i.toTypedArray)(e,o):(0,i.flatten)(e,[],!0),s.BV.makeTensor(e,t,o)}},36987:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var s=n(47672),r=n(65853),a=n(53133),i=n(50756);const o=(0,n(83118).op)({tile_:function(e,t){const n=(0,a._1)(e,"x","tile","string_or_numeric");i.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const o={x:n},u={reps:t};return s.BV.runKernel(r.n9L,o,u)}})},21867:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({topk_:function(e,t=1,n=!0){const i=(0,a._1)(e,"x","topk");if(0===i.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=i.shape[i.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);const u={x:i},l={k:t,sorted:n},[c,h]=s.BV.runKernel(r.cWu,u,l);return{values:c,indices:h}}})},61268:(e,t,n)=>{"use strict";n.d(t,{p:()=>d});var s=n(47672),r=n(14069),a=n(65853),i=n(53133),o=n(50756),u=n(37496),l=n(3073),c=n(15637),h=n(83118),p=n(98974);const d=(0,h.op)({transpose_:function(e,t,n){const h=(0,i._1)(e,"x","transpose");if(null==t&&(t=h.shape.map(((e,t)=>t)).reverse()),o.hu(h.rank===t.length,(()=>`Error in transpose: rank of input ${h.rank} must match length of perm ${t}.`)),t.forEach((e=>{o.hu(e>=0&&e<h.rank,(()=>"All entries in 'perm' must be between 0 and "+(h.rank-1)+` but got ${t}`))})),h.rank<=1)return h.clone();const d={x:h},f={perm:t};return"complex64"===h.dtype?(0,r.lu)((()=>{let e=(0,p.k)(h),t=(0,l.a)(h);return e=s.BV.runKernel(a.G3Y,{x:e},f),t=s.BV.runKernel(a.G3Y,{x:t},f),n&&(t=(0,c.W)(t)),(0,u.P)(e,t)})):s.BV.runKernel(a.G3Y,d,f)}})},20589:(e,t,n)=>{"use strict";n.d(t,{T:()=>o});var s=n(47672),r=n(65853),a=n(53133),i=n(50756);const o=(0,n(83118).op)({unique_:function(e,t=0){const n=(0,a._1)(e,"x","unique","string_or_numeric");(0,i.hu)(n.rank>0,(()=>"The input tensor must be at least 1D"));const o={x:n},u={axis:t},[l,c]=s.BV.runKernel(r.kpP,o,u);return{values:l,indices:c}}})},60895:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var s=n(47672),r=n(65853),a=n(53133),i=n(50756);const o=(0,n(83118).op)({unsortedSegmentSum_:function(e,t,n){const o=(0,a._1)(e,"x","unsortedSegmentSum"),u=(0,a._1)(t,"segmentIds","unsortedSegmentSum","int32");(0,i.hu)((0,i.GN)(n),(()=>"numSegments must be of dtype int"));const l={x:o,segmentIds:u},c={numSegments:n};return s.BV.runKernel(r.Qvg,l,c)}})},44870:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var s=n(47672),r=n(65853),a=n(53133),i=n(50756);const o=(0,n(83118).op)({unstack_:function(e,t=0){const n=(0,a._1)(e,"x","unstack","string_or_numeric");i.hu(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const o={value:n},u={axis:t};return s.BV.runKernel(r.ToN,o,u)}})},41201:(e,t,n)=>{"use strict";n.d(t,{a:()=>u});var s=n(47672),r=n(65853),a=n(53133),i=n(14580),o=n(65052);const u=(0,n(83118).op)({where_:function(e,t,n){const u=(0,a._1)(t,"a","where"),l=(0,a._1)(n,"b","where"),c=(0,a._1)(e,"condition","where","bool"),h=(0,o.assertAndGetBroadcastShape)((0,o.assertAndGetBroadcastShape)(c.shape,u.shape),l.shape),p={condition:(0,i.U)(c,h),t:(0,i.U)(u,h),e:(0,i.U)(l,h)};return s.BV.runKernel(r.PhF,p)}})},72622:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var s=n(47672),r=n(50756),a=n(37496);function i(e,t="float32"){if((0,r.Mu)(e),"complex64"===t){const t=i(e,"float32"),n=i(e,"float32");return(0,a.P)(t,n)}const n=(0,r.wT)((0,r.NA)(e),t);return s.BV.makeTensor(n,e,t)}},39047:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var s=n(47672),r=n(65853),a=n(53133);const i=(0,n(83118).op)({zerosLike_:function(e){const t={x:(0,a._1)(e,"x","zerosLike")};return s.BV.runKernel(r.RuY,t)}})},77054:(e,t,n)=>{"use strict";function s(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}n.d(t,{j:()=>s})},39608:(e,t,n)=>{"use strict";n.d(t,{es:()=>b,YD:()=>h,_w:()=>w,t3:()=>x,FZ:()=>y,Vp:()=>g,Vi:()=>m});var s=n(79700),r=n(50756);function a(e,t,n,s){const a=(0,r.e3)(t),o=function(e,t,n,s){const a=(0,r.NA)(t),o=s[s.length-1],u=new Array(o).fill(0),c=t.length,h="complex64"===n?l(e):e;if(c>1)for(let r=0;r<a/o;r++){const e=r*o;for(let t=0;t<o;t++)u[t]=Math.max(u[t],i(h[e+t],0,n).length)}return u}(e,t,n,a),c=t.length,h=u(e,t,n,a,o),p=["Tensor"];return s&&(p.push(`  dtype: ${n}`),p.push(`  rank: ${c}`),p.push(`  shape: [${t}]`),p.push("  values:")),p.push(h.map((e=>"    "+e)).join("\n")),p.join("\n")}function i(e,t,n){let s;return s=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:(0,r.HD)(e)?`'${e}'`:"bool"===n?o(e):parseFloat(e.toFixed(7)).toString(),(0,r.oj)(s,t)}function o(e){return 0===e?"false":"true"}function u(e,t,n,s,r,a=!0){const c="complex64"===n?2:1,h=t[0],p=t.length;if(0===p){if("complex64"===n){return[i(l(e)[0],0,n)]}return"bool"===n?[o(e[0])]:[e[0].toString()]}if(1===p){if(h>20){const t=3*c;let s=Array.from(e.slice(0,t)),a=Array.from(e.slice((h-3)*c,h*c));return"complex64"===n&&(s=l(s),a=l(a)),["["+s.map(((e,t)=>i(e,r[t],n))).join(", ")+", ..., "+a.map(((e,t)=>i(e,r[h-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?l(e):Array.from(e)).map(((e,t)=>i(e,r[t],n))).join(", ")+"]"]}const d=t.slice(1),f=s.slice(1),m=s[0]*c,g=[];if(h>20){for(let t=0;t<3;t++){const s=t*m,a=s+m;g.push(...u(e.slice(s,a),d,n,f,r,!1))}g.push("...");for(let t=h-3;t<h;t++){const s=t*m,a=s+m;g.push(...u(e.slice(s,a),d,n,f,r,t===h-1))}}else for(let i=0;i<h;i++){const t=i*m,s=t+m;g.push(...u(e.slice(t,s),d,n,f,r,i===h-1))}const y=2===p?",":"";g[0]="["+(h>0?g[0]+y:"");for(let i=1;i<g.length-1;i++)g[i]=" "+g[i]+y;let b=",\n";for(let i=2;i<p;i++)b+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(a?"":b),g}function l(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var c=n(80884);class h{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=r.NA(e),null!=n){const e=n.length;r.hu(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||r.rQ(t,this.size),this.strides=(0,r.e3)(e)}set(e,...t){0===t.length&&(t=[0]),r.hu(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const s of e){if(s<0||s>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let s=0;s<e.length-1;++s)n+=this.strides[s]*e[s];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return p().makeTensor(this.values,this.shape,this.dtype)}}let p=null,d=null,f=null;function m(e){p=e}function g(e){d=e}function y(e){f=e}class b{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=r.NA(e),this.strides=(0,r.e3)(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return d.buffer(this.shape,this.dtype,e)}bufferSync(){return d.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,r.GX)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,r.GX)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=p().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>c.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),p().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=p().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>c.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await p().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(p().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return d.print(this,e)}clone(){return this.throwIfDisposed(),d.clone(this)}toString(e=!1){return a(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),d.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),p().makeVariable(this,e,t,n)}}function x(){return(0,s.R)("Tensor",(()=>b))}Object.defineProperty(b,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),x();class w extends b{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!r.cO(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);p().disposeTensor(this),this.dataId=e.dataId,p().incRef(this,null)}dispose(){p().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(w,Symbol.hasInstance,{value:e=>e instanceof b&&null!=e.assign&&e.assign instanceof Function})},54699:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertTypesMatch:()=>o,getTensorsInContainer:()=>l,isTensorInList:()=>u,makeTypesMatch:()=>i});var s=n(39608),r=n(66261),a=n(50756);function i(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,r.x8)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function o(e,t){(0,a.hu)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function u(e,t){return t.some((t=>t.id===e.id))}function l(e){const t=[];return c(e,t,new Set),t}function c(e,t,n){if(null==e)return;if(e instanceof s.es)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const s in a){const e=a[s];n.has(e)||(n.add(e),c(e,t,n))}}},53133:(e,t,n)=>{"use strict";n.d(t,{C:()=>l,_1:()=>p,sI:()=>d});var s=n(47672),r=n(75658),a=n(39608),i=n(66261),o=n(80884),u=n(50756);function l(e,t){let n=e;if((0,o.isTypedArray)(e))return"string"===t?[]:[e.length];if((0,i.Oq)(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if((0,i.$F)(e))return[e.buffer.size/(null==t?4:(0,u.bT)(t))];if(!Array.isArray(e))return[];const s=[];for(;Array.isArray(n)||(0,o.isTypedArray)(n)&&"string"!==t;)s.push(n.length),n=n[0];return Array.isArray(e)&&(0,r.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&c(e,s,[]),s}function c(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,o.isTypedArray)(e))return void(0,u.hu)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,u.hu)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,u.hu)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const s=t.slice(1);for(let r=0;r<e.length;++r)c(e[r],s,n.concat(r))}function h(e,t,n,s){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function p(e,t,n,r="numeric"){if(e instanceof a.es)return h(r,e.dtype,t,n),e;let i=(0,u.D2)(e);if("string"!==i&&["bool","int32","float32"].indexOf(r)>=0&&(i=r),h(r,i,t,n),null==e||!(0,o.isTypedArray)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const s=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${s}'`)}const c=l(e,i);(0,o.isTypedArray)(e)||Array.isArray(e)||(e=[e]);const p="string"!==i?(0,o.toTypedArray)(e,i):(0,o.flatten)(e,[],!0);return s.BV.makeTensor(p,c,i)}function d(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,r)=>p(e,`${t}[${r}]`,n,s)))}},66261:(e,t,n)=>{"use strict";var s,r,a,i,o;n.d(t,{$F:()=>p,Oq:()=>h,x8:()=>l,yw:()=>s,z4:()=>c}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(s||(s={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(i||(i={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(o||(o={}));const u={float32:i,int32:r,bool:a,complex64:o};function l(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function c(e){return l(e,"int32")}function h(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function p(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}},80884:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>a.cO,arraysEqualWithNull:()=>a.DK,assert:()=>a.hu,assertNonNegativeIntegerDimensions:()=>a.Mu,assertNonNull:()=>a.Cq,assertShapesMatch:()=>a.k5,bytesFromStringArray:()=>a.Ub,bytesPerElement:()=>a.bT,checkConversionForErrors:()=>a.D5,clamp:()=>a.uZ,computeStrides:()=>a.e3,convertBackendValuesAndArrayBuffer:()=>a.KS,createScalarValue:()=>w,createShuffledIndices:()=>a.U$,decodeString:()=>N,distSquared:()=>a.E7,encodeString:()=>S,fetch:()=>I,fingerPrint64:()=>x,flatten:()=>C,getArrayFromDType:()=>a.rQ,getTypedArrayFromDType:()=>a.WP,hasEncodingLoss:()=>a.QB,hexToLong:()=>u,indexToLoc:()=>a.NE,inferDtype:()=>a.D2,inferFromImplicitShape:()=>a.JZ,isBoolean:()=>a.jn,isFunction:()=>a.mf,isInt:()=>a.GN,isNumber:()=>a.hj,isPromise:()=>a.tI,isScalarShape:()=>a.xH,isString:()=>a.HD,isTypedArray:()=>T,isValidDtype:()=>a.LP,locToIndex:()=>a.qy,makeOnesTypedArray:()=>a.p8,makeZerosNestedTypedArray:()=>a.l6,makeZerosTypedArray:()=>a.wT,nearestDivisor:()=>a.jP,nearestLargerEven:()=>a.nY,now:()=>k,parseAxisParam:()=>a.EC,randUniform:()=>a.bj,repeatedTry:()=>a.WD,rightPad:()=>a.oj,shuffle:()=>a.TV,shuffleCombo:()=>a.d7,sizeFromShape:()=>a.NA,sizeToSquarishShape:()=>a.YP,squeezeShape:()=>a.bp,sum:()=>a.Sm,swap:()=>a.LF,tanh:()=>a.AE,toNestedArray:()=>a.GX,toTypedArray:()=>v});var s=n(75658),r=n(77054),a=n(50756),i=n(40177);const o=n.n(i)()||i;function u(e){return o.fromString(e,!0,16)}const l=u("c3a5c85c97cb3127"),c=u("b492b66fbe98f273"),h=u("9ae16a3b2f90404f");function p(e){return e.xor(e.shru(47))}function d(e,t,n){const s=e.slice(t,t+n);return o.fromBytes(Array.from(s),!0,!0)}function f(e,t){return d(e,t,8)}function m(e,t){return d(e,t,4)}function g(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function y(e,t,n=u("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function b(e,t,n,s){return function(e,t,n,s,r,a){r=r.add(e),a=g(a.add(r).add(s),21);const i=r;return r=(r=r.add(t)).add(n),a=a.add(g(r,44)),[r.add(s),a.add(i)]}(f(e,t),f(e,t+8),f(e,t+16),f(e,t+24),n,s)}function x(e,t=e.length){const n=o.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=h.add(2*t),s=f(e,0).add(h),r=f(e,t-8);return y(g(r,37).mul(n).add(s),g(s,25).add(r).mul(n),n)}if(t>=4){const n=h.add(2*t);return y(m(e,0).shl(3).add(t),m(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),s=t+(e[t-1]<<2);return p(h.mul(n).xor(l.mul(s))).mul(h)}return h}(e,t):function(e,t=e.length){const n=h.add(2*t),s=f(e,0).mul(c),r=f(e,8),a=f(e,t-8).mul(n),i=f(e,t-16).mul(h);return y(g(s.add(r),43).add(g(a,30)).add(i),s.add(g(r.add(h),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=h.add(2*t),s=f(e,0).mul(h),r=f(e,8),a=f(e,t-8).mul(n),i=f(e,t-16).mul(h),o=g(s.add(r),43).add(g(a,30)).add(i),u=y(o,s.add(g(r.add(h),18)).add(a),n),l=f(e,16).mul(n),c=f(e,24),p=o.add(f(e,t-32)).mul(n),d=u.add(f(e,t-24)).mul(n);return y(g(l.add(c),43).add(g(p,30)).add(d),l.add(g(c.add(s),18)).add(p),n)}(e,t);let s=n,r=n.mul(c).add(113),a=p(r.mul(h).add(113)).mul(h),i=[o.UZERO,o.UZERO],u=[o.UZERO,o.UZERO];s=s.mul(h).add(f(e,0));let d=0;const x=64*(t-1>>6),w=x+(t-1&63)-63;do{s=g(s.add(r).add(i[0]).add(f(e,d+8)),37).mul(c),r=g(r.add(i[1]).add(f(e,d+48)),42).mul(c),s=s.xor(u[1]),r=r.add(i[0]).add(f(e,d+40)),a=g(a.add(u[0]),33).mul(c),i=b(e,d,i[1].mul(c),s.add(u[0])),u=b(e,d+32,a.add(u[1]),r.add(f(e,d+16))),[a,s]=[s,a],d+=64}while(d!==x);const v=c.add(a.and(255).shl(1));return d=w,u[0]=u[0].add(t-1&63),i[0]=i[0].add(u[0]),u[0]=u[0].add(i[0]),s=g(s.add(r).add(i[0]).add(f(e,d+8)),37).mul(v),r=g(r.add(i[1]).add(f(e,d+48)),42).mul(v),s=s.xor(u[1].mul(9)),r=r.add(i[0].mul(9).add(f(e,d+40))),a=g(a.add(u[0]),33).mul(v),i=b(e,d,i[1].mul(v),s.add(u[0])),u=b(e,d+32,a.add(u[1]),r.add(f(e,d+16))),[a,s]=[s,a],y(y(i[0],u[0],v).add(p(r).mul(l)).add(a),y(i[1],u[1],v).add(s),v)}function w(e,t){return"string"===t?S(e):v([e],t)}function v(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=C(e)),(0,s.OB)().getBool("DEBUG")&&a.D5(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function k(){return(0,s.OB)().platform.now()}function I(e,t){return(0,s.OB)().platform.fetch(e,t)}function S(e,t="utf-8"){return t=t||"utf-8",(0,s.OB)().platform.encode(e,t)}function N(e,t="utf-8"){return t=t||"utf-8",(0,s.OB)().platform.decode(e,t)}function T(e){return null!=(0,s.OB)().platform.isTypedArray?(0,s.OB)().platform.isTypedArray(e):(0,r.j)(e)}function C(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||a.tI(e)||null==e||T(e)&&n)t.push(e);else if(Array.isArray(e)||T(e))for(let s=0;s<e.length;++s)C(e[s],t,n);else{let s=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(s=Math.max(s,Number(t)));for(let r=0;r<=s;r++)C(e[r],t,n)}return t}},50756:(e,t,n)=>{"use strict";function s(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,o(e,t,n)}function r(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,s=0;for(;n>0;)s=Math.random()*n|0,n--,o(e,n,s),o(t,n,s)}function a(e,t,n){return Math.max(e,Math.min(t,n))}function i(e){return e%2==0?e:e+1}function o(e,t,n){const s=e[t];e[t]=e[n],e[n]=s}function u(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function l(e,t){const n=Math.random();return t*n+(1-n)*e}function c(e,t){let n=0;for(let s=0;s<e.length;s++){const r=Number(e[s])-Number(t[s]);n+=r*r}return n}function h(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function p(e,t,n=""){h(y(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function d(e){h(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function m(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function b(e){return e%1==0}function x(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function w(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function v(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return s(t),t}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function I(e,t=(e=>0),n,s){return new Promise(((r,a)=>{let i=0;const o=()=>{if(e())return void r();i++;const u=t(i);null!=n&&i>=n?a():null!=s?s(o,u):setTimeout(o,u)};o()}))}function S(e,t){let n=1,s=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(-1===e[a]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${a}`);s=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(-1===s){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const r=e.slice();return r[s]=t/n,r}function N(e,t){const n=t.length;return h((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),h(e.every((e=>b(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function T(e,t){const n=[],s=[],r=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||r?null:N(t,e).sort();let i=0;for(let o=0;o<e.length;++o){if(null!=a){if(a[i]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==a[i]||a[i]>o)&&1===e[o]&&(n.push(e[o]),s.push(o)),a[i]<=o&&i++}1!==e[o]&&(n.push(e[o]),s.push(o))}return{newShape:n,keptDims:s}}function C(e,t){return $(e,t)}function $(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function E(e,t){for(let n=0;n<e.length;n++){const s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function A(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function D(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function R(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function _(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function F(e){return"string"==typeof e||e instanceof String}function O(e){return"boolean"==typeof e}function M(e){return"number"==typeof e}function B(e){return Array.isArray(e)?B(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":M(e)?"float32":F(e)?"string":O(e)?"bool":"float32"}function z(e){return!!(e&&e.constructor&&e.call&&e.apply)}function L(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function U(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function W(e,t,n,s=!1){const r=new Array;if(1===t.length){const a=t[0]*(s?2:1);for(let t=0;t<a;t++)r[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(s?2:1);for(let t=0;t<a;t++)r[t]=W(e+t*o,i,n,s)}return r}function P(e,t,n=!1){if(0===e.length)return t[0];const s=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===s)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return W(0,e,t,n)}function V(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function G(e,t){const n=H(e,t);for(let s=0;s<n.length;s++)n[s]=1;return n}function H(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function j(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return P(e,new Float32Array(n));if("int32"===t)return P(e,new Int32Array(n));if("bool"===t)return P(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function X(e){e.forEach((t=>{h(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function q(e,t,n){if(0===t)return 0;if(1===t)return e[0];let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=n[r]*e[r];return s}function K(e,t,n){if(0===t)return[];if(1===t)return[e];const s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(e/n[r]),e-=s[r]*n[r];return s[s.length-1]=e,s}function Q(e){return e&&e.then&&"function"==typeof e.then}n.d(t,{AE:()=>x,Cq:()=>d,D2:()=>B,D5:()=>E,DK:()=>g,E7:()=>c,EC:()=>N,GN:()=>b,GX:()=>P,HD:()=>F,JZ:()=>S,KS:()=>V,LF:()=>o,LP:()=>A,Mu:()=>X,NA:()=>f,NE:()=>K,QB:()=>D,Sm:()=>u,TV:()=>s,U$:()=>v,Ub:()=>_,WD:()=>I,WP:()=>C,YP:()=>w,bT:()=>R,bj:()=>l,bp:()=>T,cO:()=>y,d7:()=>r,e3:()=>U,hj:()=>M,hu:()=>h,jP:()=>L,jn:()=>O,k5:()=>p,l6:()=>j,mf:()=>z,nY:()=>i,oj:()=>k,p8:()=>G,qy:()=>q,rQ:()=>$,tI:()=>Q,uZ:()=>a,wT:()=>H,xH:()=>m})},25681:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>_.SYM,Acos:()=>_.VGw,Acosh:()=>_.SpW,AdadeltaOptimizer:()=>_.zJI,AdagradOptimizer:()=>_.HeW,AdamOptimizer:()=>_.a4z,AdamaxOptimizer:()=>_.DBS,Add:()=>_.mm_,AddN:()=>_.Xze,All:()=>_.oT6,Any:()=>_.IKK,ArgMax:()=>_.sJF,ArgMin:()=>_.aJk,Asin:()=>_.M2y,Asinh:()=>_.qw7,Atan:()=>_.jMg,Atan2:()=>_.QCc,Atanh:()=>_.Oyi,AvgPool:()=>_.JhU,AvgPool3D:()=>_._k9,AvgPool3DGrad:()=>_.IMb,AvgPoolGrad:()=>_.ROF,BatchMatMul:()=>_.XLW,BatchToSpaceND:()=>_.zws,Bincount:()=>_.zvY,BitwiseAnd:()=>_.hCO,BroadcastArgs:()=>_.eEB,BroadcastTo:()=>_.Ly9,Callback:()=>Cp,CallbackList:()=>io,Cast:()=>_.RFZ,Ceil:()=>_.gJX,ClipByValue:()=>_.xnO,Complex:()=>_.Zz9,ComplexAbs:()=>_.yj2,Concat:()=>_.Eh3,Conv2D:()=>_.mhS,Conv2DBackpropFilter:()=>_.wUP,Conv2DBackpropInput:()=>_.wm,Conv3D:()=>_.x12,Conv3DBackpropFilterV2:()=>_.o2y,Conv3DBackpropInputV2:()=>_.ik2,Cos:()=>_.mc4,Cosh:()=>_.TR1,CropAndResize:()=>_.VcC,Cumprod:()=>_.Byc,Cumsum:()=>_.iHb,CustomCallback:()=>lo,DataStorage:()=>_.JLz,DenseBincount:()=>_.QRR,DepthToSpace:()=>_.T0n,DepthwiseConv2dNative:()=>_.cie,DepthwiseConv2dNativeBackpropFilter:()=>_.sL$,DepthwiseConv2dNativeBackpropInput:()=>_.y7R,Diag:()=>_.$w,Dilation2D:()=>_.p4S,Dilation2DBackpropFilter:()=>_.Vn9,Dilation2DBackpropInput:()=>_.ekb,Draw:()=>_.hGc,ENV:()=>_.ViN,EarlyStopping:()=>Ap,Einsum:()=>_.$g6,Elu:()=>_.SX0,EluGrad:()=>_.HEU,Environment:()=>_.qAh,Equal:()=>_.hdR,Erf:()=>_.Omj,Exp:()=>_.NEP,ExpandDims:()=>_.YFo,Expm1:()=>_.Y0y,FFT:()=>_.vwp,Fill:()=>_.deh,FlipLeftRight:()=>_.Uyb,Floor:()=>_.OR,FloorDiv:()=>_.jeX,FromPixels:()=>_.eBW,FusedBatchNorm:()=>_.sHE,FusedConv2D:()=>_._V0,FusedDepthwiseConv2D:()=>_.luS,GPGPUContext:()=>nS,GatherNd:()=>_.q1x,GatherV2:()=>_.qi_,GraphModel:()=>Yd,Greater:()=>_.iZT,GreaterEqual:()=>_.Acj,History:()=>uo,IFFT:()=>_.Qg5,Identity:()=>_.iJz,Imag:()=>_.J_u,InputSpec:()=>hi,IsFinite:()=>_.avt,IsInf:()=>_.iWB,IsNan:()=>_.r7n,KernelBackend:()=>_.Zuw,LRN:()=>_.eZ0,LRNGrad:()=>_.Hhh,LayerVariable:()=>ui,LayersModel:()=>mu,LeakyRelu:()=>_.J$2,Less:()=>_.vtC,LessEqual:()=>_.CAk,LinSpace:()=>_.e7N,Log:()=>_.ZbH,Log1p:()=>_.kU,LogSoftmax:()=>_.qCd,LogicalAnd:()=>_.PYm,LogicalNot:()=>_.VfG,LogicalOr:()=>_.MZg,LogicalXor:()=>_.w6g,LowerBound:()=>_.qIC,MathBackendCPU:()=>mm,MathBackendWebGL:()=>fN,MatrixBandPart:()=>_.J7O,Max:()=>_.YoZ,MaxPool:()=>_.mTV,MaxPool3D:()=>_.OAf,MaxPool3DGrad:()=>_.OU7,MaxPoolGrad:()=>_.OV7,MaxPoolWithArgmax:()=>_.vFR,Maximum:()=>_.BMI,Mean:()=>_.q2K,Min:()=>_.c17,Minimum:()=>_.q8u,MirrorPad:()=>_.jQs,Mod:()=>_.Vbg,MomentumOptimizer:()=>_.rIn,Multinomial:()=>_.NZg,Multiply:()=>_.wYn,Neg:()=>_.kuV,NonMaxSuppressionV3:()=>_.uv1,NonMaxSuppressionV4:()=>_.cye,NonMaxSuppressionV5:()=>_.W0H,NotEqual:()=>_.yQU,OP_SCOPE_SUFFIX:()=>_.zvA,OneHot:()=>_.we_,OnesLike:()=>_.qWM,Optimizer:()=>_.gaJ,OptimizerConstructors:()=>_.eEe,Pack:()=>_.QiL,PadV2:()=>_.lyA,Pool:()=>_.Kgp,Pow:()=>_.pe_,Prelu:()=>_.o0g,Prod:()=>_.DlI,RMSPropOptimizer:()=>_.gVI,RNN:()=>Il,RaggedGather:()=>_.dDz,RaggedRange:()=>_.CQl,RaggedTensorToTensor:()=>_.BiW,Range:()=>_.e6w,Rank:()=>_.yw1,Real:()=>_.xJR,RealDiv:()=>_.oHH,Reciprocal:()=>_.$HU,Reduction:()=>_.IH3,Relu:()=>_.qkr,Relu6:()=>_.SbG,Reshape:()=>_.HZH,ResizeBilinear:()=>_._Yw,ResizeBilinearGrad:()=>_.zbQ,ResizeNearestNeighbor:()=>_.dpD,ResizeNearestNeighborGrad:()=>_.Hmb,Reverse:()=>_.mKl,RotateWithOffset:()=>_.b9H,Round:()=>_.e07,Rsqrt:()=>_.bV0,SGDOptimizer:()=>_.DYp,ScatterNd:()=>_.xQA,SearchSorted:()=>_.nr8,Select:()=>_.PhF,Selu:()=>_.oFR,Sequential:()=>xu,Sigmoid:()=>_.a5O,Sign:()=>_.i5y,Sin:()=>_.RQH,Sinh:()=>_.wYB,Slice:()=>_.p2w,Softmax:()=>_.Gcp,Softplus:()=>_.MRv,SpaceToBatchND:()=>_.TQc,SparseFillEmptyRows:()=>_.O3z,SparseReshape:()=>_.nhH,SparseSegmentMean:()=>_.w3H,SparseSegmentSum:()=>_.ZjV,SparseToDense:()=>_.D2d,SplitV:()=>_.L8s,Sqrt:()=>_.FKq,Square:()=>_.bK0,SquaredDifference:()=>_._tC,StaticRegexReplace:()=>_.e0R,Step:()=>_.h8e,StridedSlice:()=>_.jQk,StringNGrams:()=>_._JP,StringSplit:()=>_.s1s,StringToHashBucketFast:()=>_.XkS,Sub:()=>_.Tr8,Sum:()=>_.GBy,SymbolicTensor:()=>pi,Tan:()=>_.sEM,Tanh:()=>_.MIZ,Tensor:()=>_.esB,TensorBuffer:()=>_.YDk,TensorScatterUpdate:()=>_.SIB,Tile:()=>_.n9L,TopK:()=>_.cWu,Transform:()=>_.wx7,Transpose:()=>_.G3Y,Unique:()=>_.kpP,Unpack:()=>_.ToN,UnsortedSegmentSum:()=>_.Qvg,UpperBound:()=>_.XDQ,Variable:()=>_._wD,ZerosLike:()=>_.RuY,_FusedMatMul:()=>_.usg,abs:()=>_.WnP,acos:()=>_.Khb,acosh:()=>_.__u,add:()=>_.IHx,addN:()=>_.QBD,all:()=>_.$6P,any:()=>_.YjB,argMax:()=>_.NqF,argMin:()=>_.vHJ,asin:()=>_.ZRM,asinh:()=>_.VfV,atan:()=>_.z4N,atan2:()=>_.fvJ,atanh:()=>_.C80,avgPool:()=>_.wS1,avgPool3d:()=>_.uR5,backend:()=>_.y3$,backend_util:()=>_.Wap,basicLSTMCell:()=>_.zEQ,batchNorm:()=>_.tgs,batchNorm2d:()=>_.Dxk,batchNorm3d:()=>_.JY5,batchNorm4d:()=>_.p3b,batchToSpaceND:()=>_.E4h,bincount:()=>_.yE8,bitwiseAnd:()=>_.ycw,booleanMaskAsync:()=>_.anm,broadcastArgs:()=>_.XsQ,broadcastTo:()=>_.UFq,broadcast_util:()=>_.Jyw,browser:()=>_.Xhn,buffer:()=>_.f3b,callbacks:()=>Dp,cast:()=>_.pju,ceil:()=>_.mDi,clipByValue:()=>_.iUl,clone:()=>_.d9v,complex:()=>_.PYB,concat:()=>_.zoF,concat1d:()=>_.gME,concat2d:()=>_.Izb,concat3d:()=>_.MNy,concat4d:()=>_.ZaL,constraints:()=>s,conv1d:()=>_.PAt,conv2d:()=>_.Tek,conv2dTranspose:()=>_.bc,conv3d:()=>_.pdZ,conv3dTranspose:()=>_.$QV,copyRegisteredKernels:()=>_.T3b,cos:()=>_.mCk,cosh:()=>_.f9Y,cosineWindow:()=>_.mew,cumprod:()=>_.$Gn,cumsum:()=>_.zbp,customGrad:()=>_.cbc,data:()=>E,denseBincount:()=>_.ppE,deprecationWarn:()=>_.MXe,depthToSpace:()=>_.nTT,depthwiseConv2d:()=>_.B10,deregisterOp:()=>Bp,device_util:()=>_.C2$,diag:()=>_.Ka3,dilation2d:()=>_.WmZ,disableDeprecationWarnings:()=>_.cFr,dispose:()=>_.B90,disposeVariables:()=>_.N8o,div:()=>_.hiC,divNoNan:()=>_.NTj,dot:()=>_.AKD,dropout:()=>_.rvX,einsum:()=>_.WYO,elu:()=>_.pyx,enableDebugMode:()=>_.Ra$,enableProdMode:()=>_.G48,enclosingPowerOfTwo:()=>_.GRh,engine:()=>_.SRH,ensureShape:()=>_.EDe,env:()=>_.OBj,equal:()=>_.DgJ,erf:()=>_.qNN,euclideanNorm:()=>_.d2q,exp:()=>_.Qqt,expandDims:()=>_.dt4,expm1:()=>_.t$B,eye:()=>_.iyy,fft:()=>_.kp_,fill:()=>_.hlL,findBackend:()=>_.x3e,findBackendFactory:()=>_.zel,floor:()=>_.GWj,floorDiv:()=>_.qPi,forceHalfFloat:()=>gN,fused:()=>_.imm,gather:()=>_.Iqj,gatherND:()=>_.dbB,gather_util:()=>_.DaI,getBackend:()=>_.N_N,getGradient:()=>_.ukX,getKernel:()=>_.pIF,getKernelsForBackend:()=>_.trD,gpgpu_util:()=>R,grad:()=>_.UQy,grads:()=>_.tiA,greater:()=>_.pjt,greaterEqual:()=>_.brS,ifft:()=>_.Sxn,imag:()=>_.asL,image:()=>_.BHj,inTopKAsync:()=>_.V3u,initializers:()=>r,input:()=>ku,io:()=>_.io,irfft:()=>_.wx0,isFinite:()=>_.xVT,isInf:()=>_.UWc,isNaN:()=>_.i2d,keep:()=>_.CnY,kernel_impls:()=>_.GDt,layers:()=>a,leakyRelu:()=>_.hi7,less:()=>_.d9m,lessEqual:()=>_.zN1,linalg:()=>_.$r2,linspace:()=>_.SX3,loadGraphModel:()=>Jd,loadGraphModelSync:()=>Zd,loadLayersModel:()=>bu,localResponseNormalization:()=>_.G9k,log:()=>_.cM7,log1p:()=>_.Krr,logSigmoid:()=>_.e_t,logSoftmax:()=>_.CmS,logSumExp:()=>_.l_t,logicalAnd:()=>_.HvI,logicalNot:()=>_.hJK,logicalOr:()=>_.K5V,logicalXor:()=>_.egP,losses:()=>_.MB5,lowerBound:()=>_.eab,matMul:()=>_.OI3,math:()=>_.mAU,max:()=>_.Fp7,maxPool:()=>_._sB,maxPool3d:()=>_.YQQ,maxPoolWithArgmax:()=>_.Ip$,maximum:()=>_.gWQ,mean:()=>_.J69,memory:()=>_.sq6,meshgrid:()=>_.ry_,metrics:()=>i,min:()=>_.VV$,minimum:()=>_.LTh,mirrorPad:()=>_.VdP,mod:()=>_.wQq,model:()=>wu,models:()=>o,moments:()=>_.Gi7,movingAverage:()=>_.p_,mul:()=>_.dC7,multiRNNCell:()=>_.rq4,multinomial:()=>_.SJ_,neg:()=>_.W76,nextFrame:()=>_.glt,norm:()=>_.KOy,notEqual:()=>_.Quu,oneHot:()=>_.lfX,ones:()=>_.iUs,onesLike:()=>_.JpU,op:()=>_.op,outerProduct:()=>_.N2O,pad:()=>_.vku,pad1d:()=>_.pNR,pad2d:()=>_.koy,pad3d:()=>_.t1L,pad4d:()=>_.lGY,pool:()=>_.d_R,pow:()=>_.sQ3,prelu:()=>_.AL3,print:()=>_.S0v,prod:()=>_.WVs,profile:()=>_.N5s,raggedGather:()=>_.$gW,raggedRange:()=>_.VT$,raggedTensorToTensor:()=>_.N89,rand:()=>_.TN_,randomGamma:()=>_.wzB,randomNormal:()=>_.nGf,randomStandardNormal:()=>_.ruB,randomUniform:()=>_.LGj,randomUniformInt:()=>_.pe5,range:()=>_.w6H,ready:()=>_.Cd_,real:()=>_.kwC,reciprocal:()=>_.M25,registerBackend:()=>_.jqO,registerCallbackConstructor:()=>Iu,registerGradient:()=>_.LiG,registerKernel:()=>_.wCN,registerOp:()=>Op,regularizers:()=>u,relu:()=>_.UYe,relu6:()=>_.btT,removeBackend:()=>_.cjG,reshape:()=>_.XLQ,reverse:()=>_.GYS,reverse1d:()=>_.SDf,reverse2d:()=>_.diP,reverse3d:()=>_.sx7,reverse4d:()=>_.mG2,rfft:()=>_.QEs,round:()=>_.NMM,rsqrt:()=>_.bp0,scalar:()=>_.iD$,scatterND:()=>_.snQ,scatter_util:()=>_.yV1,searchSorted:()=>_.zcT,selu:()=>_.U8D,separableConv2d:()=>_.U_I,sequential:()=>vu,serialization:()=>_.m7h,setBackend:()=>_.CQI,setPlatform:()=>_.VYu,setWebGLContext:()=>Yv,setdiff1dAsync:()=>_.ODp,shared:()=>A,sigmoid:()=>_.XD2,sign:()=>_.Xxe,signal:()=>_.tdS,sin:()=>_.O$l,sinh:()=>_.R_K,slice:()=>_.tPi,slice1d:()=>_.jZU,slice2d:()=>_.SmN,slice3d:()=>_.CnO,slice4d:()=>_.p0P,slice_util:()=>_.kuN,softmax:()=>_.XAC,softplus:()=>_.Wvh,spaceToBatchND:()=>_.fBT,sparse:()=>_.rVs,sparseToDense:()=>_.ers,spectral:()=>_.uN7,split:()=>_.Vl2,sqrt:()=>_._b3,square:()=>_.h62,squaredDifference:()=>_.$i,squeeze:()=>_.L9e,stack:()=>_.knu,step:()=>_.Nbs,stridedSlice:()=>_.NXj,string:()=>_.Z_8,sub:()=>_.luU,sum:()=>_.Smz,sumOutType:()=>_.z4k,tan:()=>_.ORZ,tanh:()=>_.AEp,tensor:()=>_.XeE,tensor1d:()=>_.RRF,tensor2d:()=>_.odF,tensor3d:()=>_.wOQ,tensor4d:()=>_.yXz,tensor5d:()=>_.Bfx,tensor6d:()=>_.xZs,tensorScatterUpdate:()=>_.Pg0,tensor_util:()=>_.piX,test_util:()=>_.p3L,tidy:()=>_.lub,tile:()=>_.Gg6,time:()=>_.XVJ,topk:()=>_.hg7,train:()=>_.p_j,transpose:()=>_.p4s,truncatedNormal:()=>_.Xu6,unique:()=>_.Two,unregisterGradient:()=>_.bt3,unregisterKernel:()=>_.nEe,unsortedSegmentSum:()=>_.pUJ,unstack:()=>_.HHK,upcastType:()=>_.x8V,upperBound:()=>_.GaM,util:()=>_.D5U,valueAndGrad:()=>_.h76,valueAndGrads:()=>_.fNQ,variable:()=>_.VD$,variableGrads:()=>_.pnJ,version:()=>oR,version_converter:()=>ef,version_core:()=>_.jTM,version_cpu:()=>Py,version_layers:()=>Ko,version_webgl:()=>mN,webgl:()=>yN,webgl_util:()=>D,where:()=>_.arb,whereAsync:()=>_.itS,zeros:()=>_.lls,zerosLike:()=>_.P84});var s={};n.r(s),n.d(s,{maxNorm:()=>Bi,minMaxNorm:()=>Ui,nonNeg:()=>Li,unitNorm:()=>zi});var r={};n.r(r),n.d(r,{constant:()=>Vi,glorotNormal:()=>Qi,glorotUniform:()=>Ki,heNormal:()=>Yi,heUniform:()=>Ji,identity:()=>Xi,leCunNormal:()=>Zi,leCunUniform:()=>eo,ones:()=>Pi,orthogonal:()=>to,randomNormal:()=>Hi,randomUniform:()=>Gi,truncatedNormal:()=>ji,varianceScaling:()=>qi,zeros:()=>Wi});var a={};n.r(a),n.d(a,{Layer:()=>gi,RNN:()=>Il,RNNCell:()=>Sl,activation:()=>sh,add:()=>ph,alphaDropout:()=>np,average:()=>dh,averagePooling1d:()=>kh,averagePooling2d:()=>Nh,averagePooling3d:()=>$h,avgPool1d:()=>Ih,avgPool2d:()=>Th,avgPool3d:()=>Eh,avgPooling1d:()=>Sh,avgPooling2d:()=>Ch,avgPooling3d:()=>Ah,batchNormalization:()=>xh,bidirectional:()=>qh,categoryEncoding:()=>op,centerCrop:()=>ap,concatenate:()=>fh,conv1d:()=>qc,conv2d:()=>Kc,conv2dTranspose:()=>Qc,conv3d:()=>Yc,conv3dTranspose:()=>Jc,convLstm2d:()=>Gh,convLstm2dCell:()=>Hh,cropping2D:()=>eh,dense:()=>rh,depthwiseConv2d:()=>nh,dot:()=>bh,dropout:()=>ah,elu:()=>Pc,embedding:()=>hh,flatten:()=>oh,gaussianDropout:()=>tp,gaussianNoise:()=>ep,globalAveragePooling1d:()=>Dh,globalAveragePooling2d:()=>Rh,globalMaxPool1d:()=>Qh,globalMaxPool2d:()=>Yh,globalMaxPooling1d:()=>_h,globalMaxPooling2d:()=>Fh,gru:()=>zh,gruCell:()=>Lh,input:()=>ku,inputLayer:()=>Wc,layerNormalization:()=>wh,leakyReLU:()=>Gc,lstm:()=>Uh,lstmCell:()=>Wh,masking:()=>sp,maxPool1d:()=>Jh,maxPool2d:()=>Zh,maxPooling1d:()=>Oh,maxPooling2d:()=>Mh,maxPooling3d:()=>Bh,maximum:()=>mh,minimum:()=>gh,multiply:()=>yh,permute:()=>ch,prelu:()=>Hc,randomWidth:()=>up,reLU:()=>Vc,repeatVector:()=>uh,rescaling:()=>rp,reshape:()=>lh,resizing:()=>ip,rnn:()=>jh,separableConv2d:()=>Zc,simpleRNN:()=>Ph,simpleRNNCell:()=>Vh,softmax:()=>jc,spatialDropout1d:()=>ih,stackedRNNCells:()=>Xh,thresholdedReLU:()=>Xc,timeDistributed:()=>Kh,upSampling2d:()=>th,zeroPadding2d:()=>vh});var i={};n.r(i),n.d(i,{MAPE:()=>xp,MSE:()=>kp,binaryAccuracy:()=>lp,binaryCrossentropy:()=>cp,categoricalAccuracy:()=>pp,categoricalCrossentropy:()=>dp,cosineProximity:()=>gp,mape:()=>wp,meanAbsoluteError:()=>yp,meanAbsolutePercentageError:()=>bp,meanSquaredError:()=>vp,mse:()=>Ip,precision:()=>fp,recall:()=>mp,sparseCategoricalAccuracy:()=>hp});var o={};n.r(o),n.d(o,{modelFromJSON:()=>yu});var u={};n.r(u),n.d(u,{l1:()=>Np,l1l2:()=>Sp,l2:()=>Tp});var l={};n.r(l),n.d(l,{json:()=>jp});var c={};n.r(c),n.d(c,{json:()=>Xp});var h={};n.r(h),n.d(h,{json:()=>qp});var p={};n.r(p),n.d(p,{json:()=>Kp});var d={};n.r(d),n.d(d,{json:()=>Qp});var f={};n.r(f),n.d(f,{json:()=>Yp});var m={};n.r(m),n.d(m,{json:()=>Jp});var g={};n.r(g),n.d(g,{json:()=>Zp});var y={};n.r(y),n.d(y,{json:()=>ed});var b={};n.r(b),n.d(b,{json:()=>td});var x={};n.r(x),n.d(x,{json:()=>nd});var w={};n.r(w),n.d(w,{json:()=>sd});var v={};n.r(v),n.d(v,{json:()=>rd});var k={};n.r(k),n.d(k,{json:()=>ad});var I={};n.r(I),n.d(I,{json:()=>id});var S={};n.r(S),n.d(S,{json:()=>od});var N={};n.r(N),n.d(N,{json:()=>ud});var T={};n.r(T),n.d(T,{json:()=>ld});var C={};n.r(C),n.d(C,{json:()=>cd});var $={};n.r($),n.d($,{OP_SCOPE_SUFFIX:()=>Cd.zvA,abs:()=>Cd.WnP,acos:()=>Cd.Khb,acosh:()=>Cd.__u,add:()=>Cd.IHx,addN:()=>Cd.QBD,all:()=>Cd.$6P,any:()=>Cd.YjB,argMax:()=>Cd.NqF,argMin:()=>Cd.vHJ,asin:()=>Cd.ZRM,asinh:()=>Cd.VfV,atan:()=>Cd.z4N,atan2:()=>Cd.fvJ,atanh:()=>Cd.C80,avgPool:()=>Cd.wS1,avgPool3d:()=>Cd.uR5,basicLSTMCell:()=>Cd.zEQ,batchNorm:()=>Cd.tgs,batchNorm2d:()=>Cd.Dxk,batchNorm3d:()=>Cd.JY5,batchNorm4d:()=>Cd.p3b,batchToSpaceND:()=>Cd.E4h,bincount:()=>Cd.yE8,bitwiseAnd:()=>Cd.ycw,booleanMaskAsync:()=>Cd.anm,broadcastArgs:()=>Cd.XsQ,broadcastTo:()=>Cd.UFq,buffer:()=>Cd.f3b,cast:()=>Cd.pju,ceil:()=>Cd.mDi,clipByValue:()=>Cd.iUl,clone:()=>Cd.d9v,complex:()=>Cd.PYB,concat:()=>Cd.zoF,concat1d:()=>Cd.gME,concat2d:()=>Cd.Izb,concat3d:()=>Cd.MNy,concat4d:()=>Cd.ZaL,conv1d:()=>Cd.PAt,conv2d:()=>Cd.Tek,conv2dTranspose:()=>Cd.bc,conv3d:()=>Cd.pdZ,conv3dTranspose:()=>Cd.$QV,cos:()=>Cd.mCk,cosh:()=>Cd.f9Y,cosineWindow:()=>Cd.mew,cumprod:()=>Cd.$Gn,cumsum:()=>Cd.zbp,denseBincount:()=>Cd.ppE,depthToSpace:()=>Cd.nTT,depthwiseConv2d:()=>Cd.B10,diag:()=>Cd.Ka3,dilation2d:()=>Cd.WmZ,div:()=>Cd.hiC,divNoNan:()=>Cd.NTj,dot:()=>Cd.AKD,dropout:()=>Cd.rvX,einsum:()=>Cd.WYO,elu:()=>Cd.pyx,enclosingPowerOfTwo:()=>Cd.GRh,ensureShape:()=>Cd.EDe,equal:()=>Cd.DgJ,erf:()=>Cd.qNN,euclideanNorm:()=>Cd.d2q,exp:()=>Cd.Qqt,expandDims:()=>Cd.dt4,expm1:()=>Cd.t$B,eye:()=>Cd.iyy,fft:()=>Cd.kp_,fill:()=>Cd.hlL,floor:()=>Cd.GWj,floorDiv:()=>Cd.qPi,fused:()=>Cd.imm,gather:()=>Cd.Iqj,gatherND:()=>Cd.dbB,greater:()=>Cd.pjt,greaterEqual:()=>Cd.brS,ifft:()=>Cd.Sxn,imag:()=>Cd.asL,image:()=>Cd.BHj,inTopKAsync:()=>Cd.V3u,irfft:()=>Cd.wx0,isFinite:()=>Cd.xVT,isInf:()=>Cd.UWc,isNaN:()=>Cd.i2d,leakyRelu:()=>Cd.hi7,less:()=>Cd.d9m,lessEqual:()=>Cd.zN1,linalg:()=>Cd.$r2,linspace:()=>Cd.SX3,localResponseNormalization:()=>Cd.G9k,log:()=>Cd.cM7,log1p:()=>Cd.Krr,logSigmoid:()=>Cd.e_t,logSoftmax:()=>Cd.CmS,logSumExp:()=>Cd.l_t,logicalAnd:()=>Cd.HvI,logicalNot:()=>Cd.hJK,logicalOr:()=>Cd.K5V,logicalXor:()=>Cd.egP,losses:()=>Cd.MB5,lowerBound:()=>Cd.eab,matMul:()=>Cd.OI3,max:()=>Cd.Fp7,maxPool:()=>Cd._sB,maxPool3d:()=>Cd.YQQ,maxPoolWithArgmax:()=>Cd.Ip$,maximum:()=>Cd.gWQ,mean:()=>Cd.J69,meshgrid:()=>Cd.ry_,min:()=>Cd.VV$,minimum:()=>Cd.LTh,mirrorPad:()=>Cd.VdP,mod:()=>Cd.wQq,moments:()=>Cd.Gi7,movingAverage:()=>Cd.p_,mul:()=>Cd.dC7,multiRNNCell:()=>Cd.rq4,multinomial:()=>Cd.SJ_,neg:()=>Cd.W76,norm:()=>Cd.KOy,notEqual:()=>Cd.Quu,oneHot:()=>Cd.lfX,ones:()=>Cd.iUs,onesLike:()=>Cd.JpU,op:()=>Cd.op,outerProduct:()=>Cd.N2O,pad:()=>Cd.vku,pad1d:()=>Cd.pNR,pad2d:()=>Cd.koy,pad3d:()=>Cd.t1L,pad4d:()=>Cd.lGY,pool:()=>Cd.d_R,pow:()=>Cd.sQ3,prelu:()=>Cd.AL3,print:()=>Cd.S0v,prod:()=>Cd.WVs,raggedGather:()=>Cd.$gW,raggedRange:()=>Cd.VT$,raggedTensorToTensor:()=>Cd.N89,rand:()=>Cd.TN_,randomGamma:()=>Cd.wzB,randomNormal:()=>Cd.nGf,randomStandardNormal:()=>Cd.ruB,randomUniform:()=>Cd.LGj,randomUniformInt:()=>Cd.pe5,range:()=>Cd.w6H,real:()=>Cd.kwC,reciprocal:()=>Cd.M25,relu:()=>Cd.UYe,relu6:()=>Cd.btT,reshape:()=>Cd.XLQ,reverse:()=>Cd.GYS,reverse1d:()=>Cd.SDf,reverse2d:()=>Cd.diP,reverse3d:()=>Cd.sx7,reverse4d:()=>Cd.mG2,rfft:()=>Cd.QEs,round:()=>Cd.NMM,rsqrt:()=>Cd.bp0,scalar:()=>Cd.iD$,scatterND:()=>Cd.snQ,searchSorted:()=>Cd.zcT,selu:()=>Cd.U8D,separableConv2d:()=>Cd.U_I,setdiff1dAsync:()=>Cd.ODp,sigmoid:()=>Cd.XD2,sign:()=>Cd.Xxe,signal:()=>Cd.tdS,sin:()=>Cd.O$l,sinh:()=>Cd.R_K,slice:()=>Cd.tPi,slice1d:()=>Cd.jZU,slice2d:()=>Cd.SmN,slice3d:()=>Cd.CnO,slice4d:()=>Cd.p0P,softmax:()=>Cd.XAC,softplus:()=>Cd.Wvh,spaceToBatchND:()=>Cd.fBT,sparse:()=>Cd.rVs,sparseToDense:()=>Cd.ers,spectral:()=>Cd.uN7,split:()=>Cd.Vl2,sqrt:()=>Cd._b3,square:()=>Cd.h62,squaredDifference:()=>Cd.$i,squeeze:()=>Cd.L9e,stack:()=>Cd.knu,step:()=>Cd.Nbs,stridedSlice:()=>Cd.NXj,string:()=>Cd.Z_8,sub:()=>Cd.luU,sum:()=>Cd.Smz,tan:()=>Cd.ORZ,tanh:()=>Cd.AEp,tensor:()=>Cd.XeE,tensor1d:()=>Cd.RRF,tensor2d:()=>Cd.odF,tensor3d:()=>Cd.wOQ,tensor4d:()=>Cd.yXz,tensor5d:()=>Cd.Bfx,tensor6d:()=>Cd.xZs,tensorScatterUpdate:()=>Cd.Pg0,tile:()=>Cd.Gg6,topk:()=>Cd.hg7,transpose:()=>Cd.p4s,truncatedNormal:()=>Cd.Xu6,unique:()=>Cd.Two,unsortedSegmentSum:()=>Cd.pUJ,unstack:()=>Cd.HHK,upperBound:()=>Cd.GaM,variable:()=>Cd.VD$,where:()=>Cd.arb,whereAsync:()=>Cd.itS,zeros:()=>Cd.lls,zerosLike:()=>Cd.P84});var E={};n.r(E),n.d(E,{CSVDataset:()=>jf,Dataset:()=>Ff,FileDataSource:()=>am,TextLineDataset:()=>Lf,URLDataSource:()=>im,array:()=>Mf,csv:()=>om,func:()=>um,generator:()=>lm,microphone:()=>hm,version_data:()=>pm,webcam:()=>cm,zip:()=>Bf});var A={};n.r(A),n.d(A,{addImpl:()=>Dm,bincountImpl:()=>Om,bincountReduceImpl:()=>Mm,bitwiseAndImpl:()=>Bm,castImpl:()=>Tm,ceilImpl:()=>Vm,concatImpl:()=>jm,equalImpl:()=>Xm,expImpl:()=>Qm,expm1Impl:()=>Zm,floorDivImpl:()=>ag,floorImpl:()=>ng,gatherNdImpl:()=>ug,gatherV2Impl:()=>lg,greaterEqualImpl:()=>dg,greaterImpl:()=>cg,lessEqualImpl:()=>xg,lessImpl:()=>gg,linSpaceImpl:()=>kg,logImpl:()=>Ig,maxImpl:()=>Tg,maximumImpl:()=>Cg,minimumImpl:()=>Ag,multiplyImpl:()=>_g,negImpl:()=>Bg,notEqualImpl:()=>Lg,prodImpl:()=>Hg,raggedGatherImpl:()=>Qg,raggedRangeImpl:()=>Jg,raggedTensorToTensorImpl:()=>sy,rangeImpl:()=>ry,rsqrtImpl:()=>ay,scatterImpl:()=>uy,sigmoidImpl:()=>ly,simpleAbsImpl:()=>gm,sliceImpl:()=>py,sparseFillEmptyRowsImpl:()=>my,sparseReshapeImpl:()=>gy,sparseSegmentReductionImpl:()=>yy,sqrtImpl:()=>by,squaredDifferenceImpl:()=>vy,staticRegexReplaceImpl:()=>Sy,stridedSliceImpl:()=>Cy,stringNGramsImpl:()=>Ey,stringSplitImpl:()=>Dy,stringToHashBucketFastImpl:()=>Ry,subImpl:()=>_y,tileImpl:()=>By,topKImpl:()=>Uy,transposeImpl:()=>Pg,uniqueImpl:()=>Wy});var D={};n.r(D),n.d(D,{assertNotComplex:()=>tI,bindCanvasToFramebuffer:()=>Ek,bindColorTextureToFramebuffer:()=>Ak,bindTextureToProgramUniformSampler:()=>$k,bindTextureUnit:()=>Sk,bindVertexBufferToProgramAttribute:()=>Ik,callAndCheck:()=>ik,canBeRepresented:()=>ok,createFragmentShader:()=>hk,createFramebuffer:()=>kk,createProgram:()=>fk,createStaticIndexBuffer:()=>bk,createStaticVertexBuffer:()=>yk,createTexture:()=>wk,createVertexShader:()=>ck,getBatchDim:()=>Mk,getExtensionOrThrow:()=>lk,getFramebufferErrorMessage:()=>_k,getMaxTexturesInShader:()=>Xk,getNumChannels:()=>xk,getProgramUniformLocation:()=>Ck,getProgramUniformLocationOrThrow:()=>Tk,getRowsCols:()=>Bk,getShapeAs3D:()=>zk,getTextureShapeFromLogicalShape:()=>Lk,getWebGLDisjointQueryTimerVersion:()=>qk,getWebGLErrorMessage:()=>uk,getWebGLMaxTextureSize:()=>Gk,hasExtension:()=>Kk,isCapableOfRenderingToFloatTexture:()=>Yk,isDownloadFloatTextureEnabled:()=>Jk,isReshapeFree:()=>Wk,isWebGLFenceEnabled:()=>eI,isWebGLVersionEnabled:()=>Qk,linkProgram:()=>mk,logShaderSourceAndInfoLog:()=>dk,resetMaxTextureSize:()=>Hk,resetMaxTexturesInShader:()=>jk,unbindColorTextureFromFramebuffer:()=>Dk,unbindTextureUnit:()=>Nk,validateFramebuffer:()=>Rk,validateProgram:()=>gk,validateTextureSize:()=>vk});var R={};n.r(R),n.d(R,{bindVertexProgramAttributeStreams:()=>qI,createBufferFromOutputTexture:()=>YI,createFloat16MatrixTexture:()=>WI,createFloat16PackedMatrixTexture:()=>XI,createFloat32MatrixTexture:()=>LI,createIndexBuffer:()=>MI,createPackedMatrixTexture:()=>HI,createUnsignedBytesMatrixTexture:()=>VI,createVertexBuffer:()=>OI,createVertexShader:()=>FI,downloadByteEncodedFloatMatrixFromOutputTexture:()=>ZI,downloadFloat32MatrixFromBuffer:()=>JI,downloadMatrixFromPackedOutputTexture:()=>tS,downloadPackedMatrixFromBuffer:()=>eS,getInternalFormatForFloat16MatrixTexture:()=>UI,getInternalFormatForFloat16PackedMatrixTexture:()=>jI,getInternalFormatForFloat32MatrixTexture:()=>zI,getInternalFormatForPackedMatrixTexture:()=>GI,getInternalFormatForUnsignedBytesMatrixTexture:()=>PI,uploadDenseMatrixToTexture:()=>KI,uploadPixelDataToTexture:()=>QI});var _=n(39727),F=n(65853),O=n(27742),M=n(81009),B=n(74431);const z={kernelName:F.SYM,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,M.d)(e,(0,B.N)((0,O.p)(n,"float32"),-1))}}};var L=n(31323),U=n(15637),W=n(15656),P=n(7149),V=n(79512),G=n(69392);const H={kernelName:F.VGw,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,V.h)((0,O.p)(n,"float32")),s=(0,P._)((0,G.l)((0,W.i)(1),t));return(0,U.W)((0,L.h)(e,s))}}}},j={kernelName:F.SpW,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,P._)((0,G.l)((0,V.h)((0,O.p)(n,"float32")),1));return(0,L.h)(e,t)}}}};var X=n(65052),q=n(66398),K=n(16966);const Q={kernelName:F.mm_,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=X.assertAndGetBroadcastShape(n.shape,s.shape);return{a:()=>{let t=e;const s=X.getReductionAxes(n.shape,r);return s.length>0&&(t=(0,K.S)(t,s)),(0,q.X)(t,n.shape)},b:()=>{let t=e;const n=X.getReductionAxes(s.shape,r);return n.length>0&&(t=(0,K.S)(t,n)),(0,q.X)(t,s.shape)}}}},Y={kernelName:F.Xze,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,s)=>{n[s]=()=>e.clone()})),n}};var J=n(39047);const Z={kernelName:F.sJF,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,J.P)(n)}}},ee={kernelName:F.aJk,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,J.P)(n)}}},te={kernelName:F.M2y,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,L.h)(e,(0,P._)((0,G.l)((0,W.i)(1),(0,V.h)((0,O.p)(n,"float32")))))}}};var ne=n(37672);const se={kernelName:F.qw7,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,P._)((0,ne.I)((0,W.i)(1),(0,V.h)((0,O.p)(n,"float32"))));return(0,L.h)(e,t)}}}},re={kernelName:F.QCc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,X.assertAndGetBroadcastShape)(n.shape,s.shape);return{a:()=>{const t=(0,ne.I)((0,V.h)(n),(0,V.h)(s));let a=(0,M.d)(e,(0,L.h)(s,t));const i=(0,X.getReductionAxes)(n.shape,r);return i.length>0&&(a=(0,K.S)(a,i)),(0,q.X)(a,n.shape)},b:()=>{const t=(0,ne.I)((0,V.h)(n),(0,V.h)(s));let a=(0,U.W)((0,M.d)(e,(0,L.h)(n,t)));const i=(0,X.getReductionAxes)(s.shape,r);return i.length>0&&(a=(0,K.S)(a,i)),(0,q.X)(a,s.shape)}}}},ae={kernelName:F.jMg,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,L.h)(e,(0,ne.I)((0,V.h)((0,O.p)(n,"float32")),1))}}},ie={kernelName:F.Oyi,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,L.h)(e,(0,G.l)((0,W.i)(1),(0,V.h)((0,O.p)(n,"float32"))))}}};var oe=n(47672),ue=n(53133),le=n(50756),ce=n(86294),he=n(83118);const pe=(0,he.op)({avgPool3dGrad_:function(e,t,n,s,r,a){const i=(0,ue._1)(e,"dy","avgPool3dGrad"),o=(0,ue._1)(t,"input","avgPool3dGrad");let u=i,l=o,c=!1;4===o.rank&&(c=!0,u=(0,q.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=(0,q.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),le.hu(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),le.hu(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),(0,ce.m)("avgPool3dGrad",r,a);const h={dy:u,input:l},p={filterSize:n,strides:s,pad:r,dimRoundingMode:a},d=oe.BV.runKernel(F.IMb,h,p);return c?(0,q.X)(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),de={kernelName:F._k9,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>pe(e,s,r,a,i,o)}}};const fe=(0,he.op)({avgPoolGrad_:function(e,t,n,s,r){const a=(0,ue._1)(e,"dy","avgPoolGrad"),i=(0,ue._1)(t,"input","avgPoolGrad");le.hu(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,u=a,l=!1;3===i.rank&&(l=!0,o=(0,q.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=(0,q.X)(a,[1,a.shape[0],a.shape[1],a.shape[2]])),le.hu(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),le.hu(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:u,input:o},h={filterSize:n,strides:s,pad:r},p=oe.BV.runKernel(F.ROF,c,h);return l?(0,q.X)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),me={kernelName:F.JhU,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i}=n;return{x:()=>fe(e,s,r,a,i)}}};var ge=n(14274);const ye={kernelName:F.XLW,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[s,r]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>(0,ge.O)(e,r,!1,!1),b:()=>(0,ge.O)(e,s,!0,!1)}:a&&!i?{a:()=>(0,ge.O)(r,e,!1,!0),b:()=>(0,ge.O)(s,e,!1,!1)}:{a:()=>(0,ge.O)(r,e,!0,!0),b:()=>(0,ge.O)(e,s,!0,!0)}:{a:()=>(0,ge.O)(e,r,!1,!0),b:()=>(0,ge.O)(s,e,!0,!1)}}};var be=n(21752);const xe={kernelName:F.zws,gradFunc:(e,t,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>(0,be.f)(e,s,r)}}},we={kernelName:F.Ly9,gradFunc:(e,t,n)=>{const s=n,r=s.inputShape,a=s.shape,i=Array.from(a);for(let u=r.length-1;u>=0;u--)if(r[u]===a[u])i[u]=1;else if(1!==r[u])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);const o=[];for(let u=0;u<i.length;u++)i[u]>1&&o.push(u);return{x:()=>(0,K.S)(e,o,!0)}}},ve={kernelName:F.RFZ,gradFunc:e=>({x:()=>e.clone()})},ke={kernelName:F.gJX,gradFunc:e=>({x:()=>(0,J.P)(e)})};var Ie=n(66928),Se=n(86830),Ne=n(54858),Te=n(41201);const Ce={kernelName:F.xnO,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>(0,Te.a)((0,Ne.H)((0,Ie.b)(s,r),(0,Se.z)(s,a)),e,(0,J.P)(e))}}},$e={kernelName:F.yj2,inputsToSave:["x"],gradFunc:z.gradFunc};var Ee=n(20953);const Ae={kernelName:F.Eh3,saveAllInputs:!0,gradFunc:(e,t,n)=>{const s=t.map((e=>e.shape)),{axis:r}=n,a=(0,le.EC)(r,t[0].shape)[0],i=s.map((e=>e[a]));return(0,Ee.V)(e,i,a).map((e=>()=>e))}};var De=n(35064),Re=n(46753);const _e={kernelName:F.mhS,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{dilations:a,strides:i,pad:o,dataFormat:u}=n;return le.hu(ce.I0(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>(0,Re._)(s.shape,e,r,i,o,u),filter:()=>(0,De.p)(s,e,r.shape,i,o,u)}}};var Fe=n(46387);const Oe={kernelName:F.wm,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>(0,Fe.T)(e,r,a,i,o,1,u),filter:()=>(0,De.p)(e,s,r.shape,a,i,o,u)}}};const Me=(0,he.op)({conv3DBackpropFilter_:function(e,t,n,s,r){let a=e;4===e.rank&&(a=(0,q.X)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=(0,q.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),le.hu(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),le.hu(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),le.hu(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),le.hu(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),le.hu(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},u={strides:s,pad:r,filterShape:n};return oe.BV.runKernel(F.o2y,o,u)}});var Be=n(26402);const ze={kernelName:F.x12,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a}=n;le.hu((0,ce.I0)(s),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const[i,o]=t;return{x:()=>(0,Be._)(i.shape,e,o,r,a),filter:()=>Me(i,e,o.shape,r,a)}}};var Le=n(92751);const Ue={kernelName:F.mc4,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,M.d)((0,U.W)((0,Le.O)((0,O.p)(n,"float32"))),e)}}};var We=n(70454);const Pe={kernelName:F.TR1,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,M.d)((0,We.R)((0,O.p)(n,"float32")),e)}}};var Ve=n(15422),Ge=n(91121),He=n(61268);const je={kernelName:F.iHb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r,exclusive:a,reverse:i}=n;return{x:()=>{const t=(0,Ve.Q3)([r],s.rank);let n=(0,Ge.z)(e,r,a,!i);return null!=t&&(n=(0,He.p)(n,t)),n}}}};var Xe=n(57),qe=n(90461);const Ke={kernelName:F.cie,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a,dimRoundingMode:i}=n,o=null==s?[1,1]:s;le.hu(ce.I0(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return le.hu(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),le.hu(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),le.hu(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),le.hu(ce.jT(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),ce.m("depthwiseConv2d",a,i),{x:()=>(0,qe.v)(u.shape,e,l,r,a,o,i),filter:()=>(0,Xe.z)(u,e,l.shape,r,a,o,i)}}},Qe={kernelName:F.p4S,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,a={x:s,filter:r,dy:e},i={x:s,filter:r,dy:e};return{x:()=>oe.BV.runKernel(F.ekb,a,n),filter:()=>oe.BV.runKernel(F.Vn9,i,n)}}},Ye={kernelName:F.SX0,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,s={dy:e,y:n};return{x:()=>oe.BV.runKernel(F.HEU,s)}}};var Je=n(65270);const Ze={kernelName:F.Omj,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=(0,M.d)((0,Je.Q)((0,U.W)((0,V.h)(n))),2/Math.sqrt(Math.PI));return{x:()=>(0,M.d)(e,s)}}},et={kernelName:F.NEP,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,M.d)(e,n)}}},tt={kernelName:F.YFo,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>(0,q.X)(e,n.shape)}}},nt={kernelName:F.Y0y,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,M.d)(e,(0,Je.Q)(n))}}},st={kernelName:F.OR,gradFunc:e=>({x:()=>(0,J.P)(e)})},rt={kernelName:F.jeX,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,X.assertAndGetBroadcastShape)(n.shape,s.shape);return{a:()=>{const t=(0,L.h)(e,(0,O.p)(s,"float32")),a=(0,X.getReductionAxes)(n.shape,r);return a.length>0?(0,q.X)((0,K.S)(t,a),n.shape):t},b:()=>{let t=(0,M.d)(e,(0,O.p)(n,"float32"));const a=(0,X.getReductionAxes)(s.shape,r);a.length>0&&(t=(0,q.X)((0,K.S)(t,a),s.shape));const i=(0,V.h)(s);return(0,U.W)((0,L.h)(t,(0,O.p)(i,"float32")))}}}};var at=n(66823),it=n(36987);const ot={kernelName:F.sHE,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:s}=n,[r,a,i,o]=t,u=null==o?(0,W.i)(1):o,l=(0,X.getReductionAxes)(a.shape,r.shape),c=[];if(1===a.rank){for(let e=0;e<r.shape.length-1;++e)c.push(r.shape[e]);c.push(1)}const h=(0,G.l)(r,a),p=(0,M.d)(e,u),d=(0,at.b)((0,ne.I)(i,(0,W.i)(s))),f=(0,M.d)((0,M.d)((0,M.d)(d,d),d),(0,W.i)(-.5));return{x:()=>1===a.rank?(0,q.X)((0,M.d)((0,M.d)(e,(0,it.G)((0,q.X)(d,[1,1,1,a.shape[0]]),c)),u),r.shape):(0,q.X)((0,M.d)((0,M.d)(e,d),u),r.shape),mean:()=>{let e=(0,M.d)((0,M.d)(d,(0,W.i)(-1)),p);return 1===a.rank&&(e=(0,K.S)(e,l)),(0,q.X)(e,a.shape)},variance:()=>{let e=(0,M.d)((0,M.d)(f,h),p);return 1===a.rank&&(e=(0,K.S)(e,l)),(0,q.X)(e,a.shape)},scale:()=>{const t=(0,M.d)(h,d);let n=(0,M.d)(e,t);return 1===a.rank&&(n=(0,K.S)(n,l)),(0,q.X)(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=(0,K.S)(t,l)),(0,q.X)(t,a.shape)}}}};var ut=n(60895);const lt={kernelName:F.qi_,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[s,r]=t,{axis:a}=n,i=(0,le.EC)(a,s.shape)[0];return{x:()=>{const t=s.shape,n=r.size,o=t.slice(0,i),u=o.length,l=t.slice(a,t.length).slice(1),c=l.length,h=ct(0,u),p=ct(u+1,u+1+c),d=ht([o,[n],l]),f=(0,q.X)(e,d),m=(0,q.X)(r,[n]),g=ht([[u],h,p]),y=(0,He.p)(f,g);let b=(0,ut.p)(y,m,s.shape[i]);const x=(0,Ve.LJ)(g);return b=(0,He.p)(b,x),b},indices:()=>r}}};function ct(e,t){const n=[];for(let s=e;s<t;++s)n.push(s);return n}function ht(e){const t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}const pt={kernelName:F.Acj,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>(0,J.P)(n),b:()=>(0,J.P)(s)}}},dt={kernelName:F.iJz,gradFunc:e=>({x:()=>(0,O.p)(e,"float32")})},ft={kernelName:F.avt,gradFunc:e=>({x:()=>(0,J.P)(e)})},mt={kernelName:F.iWB,gradFunc:e=>({x:()=>(0,J.P)(e)})},gt={kernelName:F.r7n,gradFunc:e=>({x:()=>(0,J.P)(e)})};var yt=n(66651);const bt={kernelName:F.J$2,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{alpha:r}=n,a=(0,yt.p)(s,0);return{x:()=>(0,Te.a)(a,e,(0,M.d)(e,r))}}},xt={kernelName:F.kU,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,L.h)(e,(0,ne.I)(n,1))}}},wt={kernelName:F.ZbH,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,L.h)(e,(0,O.p)(n,"float32"))}}},vt={kernelName:F.qCd,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;return{logits:()=>{const t=(0,Je.Q)(s);return(0,G.l)(e,(0,M.d)((0,K.S)(e,r,!0),t))}}}};const kt=(0,he.op)({localResponseNormalizationBackprop_:function(e,t,n,s=5,r=1,a=1,i=.5){const o={x:e,y:t,dy:n},u={depthRadius:s,bias:r,alpha:a,beta:i};return oe.BV.runKernel(F.Hhh,o,u)}}),It={kernelName:F.eZ0,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{depthRadius:a,bias:i,alpha:o,beta:u}=n;return{x:()=>kt(s,r,e,a,i,o,u)}}};var St=n(18022);function Nt(e,t,n,s){return t.rank<n.rank&&(t=(0,q.X)(t,Ve.rv(t.shape,s))),e.rank<n.rank&&(e=(0,q.X)(e,Ve.rv(e.shape,s))),{x:()=>(0,M.d)(e,(0,O.p)((0,St.D)(n,t),e.dtype))}}const Tt={kernelName:F.YoZ,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{reductionIndices:r}=s,a=t[0],i=Nt(e,t[1],a,le.EC(r,a.shape));return{x:()=>i.x()}}};var Ct=n(38602);const $t={kernelName:F.BMI,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>(0,M.d)(e,(0,O.p)((0,Ie.b)(n,s),"float32")),b:()=>(0,M.d)(e,(0,O.p)((0,Ct.d)(n,s),"float32"))}}};const Et=(0,he.op)({maxPool3dGrad_:function(e,t,n,s,r,a,i){const o=(0,ue._1)(e,"dy","maxPool3dGrad"),u=(0,ue._1)(t,"input","maxPool3dGrad"),l=(0,ue._1)(n,"output","maxPool3dGrad");let c=o,h=u,p=l,d=!1;4===u.rank&&(d=!0,c=(0,q.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=(0,q.X)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=(0,q.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),le.hu(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),le.hu(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),le.hu(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),(0,ce.m)("maxPool3dGrad",a,i);const f={dy:c,input:h,output:p},m={filterSize:s,strides:r,pad:a,dimRoundingMode:i},g=oe.BV.runKernel(F.OU7,f,m);return d?(0,q.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),At={kernelName:F.OAf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>Et(e,s,r,a,i,o,u)}}};const Dt=(0,he.op)({maxPoolGrad_:function(e,t,n,s,r,a,i){const o=(0,ue._1)(e,"dy","maxPoolGrad"),u=(0,ue._1)(t,"input","maxPoolGrad"),l=(0,ue._1)(n,"output","maxPoolGrad");le.hu(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),le.hu(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),le.hu(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),ce.m("maxPoolGrad",a,i);const c={dy:o,input:u,output:l},h={filterSize:s,strides:r,pad:a,dimRoundingMode:i};return oe.BV.runKernel(F.OV7,c,h)}}),Rt={kernelName:F.mTV,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>Dt(e,s,r,a,i,o)}}};var _t=n(82965);const Ft={kernelName:F.q2K,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n,a=le.EC(r,s.shape),i=(0,Ve.kz)(s.shape,a)[1],o=le.NA(i);return{x:()=>{const t=s.shape.slice();a.forEach((e=>{t[e]=1}));const n=(0,q.X)(e,t);return(0,L.h)((0,M.d)(n,(0,_t.i)(s.shape,"float32")),o)}}}},Ot={kernelName:F.c17,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{axis:r}=s,[a,i]=t,o=Nt(e,i,a,le.EC(r,a.shape));return{x:()=>o.x()}}},Mt={kernelName:F.q8u,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>(0,M.d)(e,(0,O.p)((0,Se.z)(n,s),"float32")),b:()=>(0,M.d)(e,(0,O.p)((0,yt.p)(n,s),"float32"))}}};var Bt=n(21501);const zt={kernelName:F.jQs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>(0,Bt.t)(e,a,s.shape)}}};var Lt=n(57055);const Ut={kernelName:F.Vbg,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,X.assertAndGetBroadcastShape)(n.shape,s.shape);return{a:()=>{const t=(0,X.getReductionAxes)(n.shape,r);return t.length>0?(0,q.X)((0,K.S)(e,t),n.shape):e},b:()=>{const t=(0,M.d)(e,(0,U.W)((0,Lt.G)((0,L.h)(n,s)))),a=(0,X.getReductionAxes)(s.shape,r);return a.length>0?(0,q.X)((0,K.S)(t,a),s.shape):t}}}},Wt={kernelName:F.wYn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,X.assertAndGetBroadcastShape)(n.shape,s.shape);return{a:()=>{const t=(0,M.d)(e,(0,O.p)(s,"float32")),a=(0,X.getReductionAxes)(n.shape,r);return a.length>0?(0,q.X)((0,K.S)(t,a),n.shape):t},b:()=>{const t=(0,M.d)(e,(0,O.p)(n,"float32")),a=(0,X.getReductionAxes)(s.shape,r);return a.length>0?(0,q.X)((0,K.S)(t,a),s.shape):t}}}},Pt={kernelName:F.kuV,gradFunc:e=>({x:()=>(0,U.W)(e)})};var Vt=n(72622);const Gt={kernelName:F.we_,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>(0,Vt.l)(n.shape,"float32")}}},Ht={kernelName:F.qWM,gradFunc:e=>({x:()=>(0,J.P)(e)})};var jt=n(44870);const Xt={kernelName:F.QiL,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:s}=n;return(0,jt.H)(e,s).map((e=>()=>e))}},qt={kernelName:F.lyA,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>(0,Bt.t)(e,a,s.shape)}}};var Kt=n(71150),Qt=n(59715);const Yt={kernelName:F.pe_,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,s,r]=t,a=n,i=s,o=X.assertAndGetBroadcastShape(a.shape,i.shape);return{a:()=>{const t=(0,O.p)(i,"float32");let n=(0,M.d)(e,(0,M.d)(t,(0,Qt.s)(a,(0,G.l)(t,(0,W.i)(1)))));const s=X.getReductionAxes(a.shape,o);return s.length>0&&(n=(0,K.S)(n,s)),(0,q.X)(n,a.shape)},b:()=>{const t=(0,yt.p)(a,0),n=(0,Te.a)(t,(0,Kt.c)(a),(0,J.P)(a));let s=(0,M.d)(e,(0,M.d)(r,n));const u=X.getReductionAxes(i.shape,o);return u.length>0&&(s=(0,K.S)(s,u)),(0,q.X)(s,i.shape)}}}},Jt={kernelName:F.o0g,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,yt.p)(n,0);return{x:()=>(0,Te.a)(r,e,(0,M.d)(e,s)),alpha:()=>{let t=(0,Te.a)(r,(0,J.P)(e),(0,M.d)(e,n));const a=(0,X.getReductionAxes)(s.shape,e.shape);return a.length>0&&(t=(0,K.S)(t,a)),(0,q.X)(t,s.shape)}}}};var Zt=n(98520);function en(e,t,n){const s=e.shape.length,r=s-n.length,a=Ve.Q3(n,s);let i=e;null!=a&&(i=(0,He.p)(e,a));const o=i.shape.slice(),u=o.splice(s-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(u);let l=function(e,t,n){const s=e.shape.slice();s[n]=1;const r=(0,q.X)(t,s),a=(0,Zt.$)(e,n,!0,!1),i=(0,Zt.$)(e,n,!0,!0),o=(0,M.d)(a,i);return(0,M.d)(r,o)}(i.reshape(o),t,r);if(l=l.reshape(i.shape),null!=a){const e=Ve.LJ(a);l=(0,He.p)(l,e)}return l}const tn={kernelName:F.DlI,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;let a=[];return a=null==r?s.shape.map(((e,t)=>t)):"number"==typeof r?[r]:r,{x:()=>en(s,e,a)}}},nn={kernelName:F.oHH,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=X.assertAndGetBroadcastShape(n.shape,s.shape);return{a:()=>{const t=(0,L.h)(e,(0,O.p)(s,"float32")),a=X.getReductionAxes(n.shape,r);return a.length>0?(0,q.X)((0,K.S)(t,a),n.shape):t},b:()=>{let t=(0,M.d)(e,(0,O.p)(n,"float32"));const a=X.getReductionAxes(s.shape,r);a.length>0&&(t=(0,q.X)((0,K.S)(t,a),s.shape));const i=(0,V.h)(s);return(0,U.W)((0,L.h)(t,(0,O.p)(i,"float32")))}}}},sn={kernelName:F.$HU,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,L.h)(e,(0,U.W)((0,V.h)(n)))}}},rn={kernelName:F.SbG,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=(0,M.d)((0,Se.z)(n,6),(0,B.N)(n));return{x:()=>(0,M.d)(e,(0,O.p)(s,"float32"))}}},an={kernelName:F.qkr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,M.d)(e,(0,O.p)((0,B.N)(n),"float32"))}}},on={kernelName:F.HZH,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,q.X)(e,n.shape)}}},un={kernelName:F._Yw,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>oe.BV.runKernel(F.zbQ,r,n)}}},ln={kernelName:F.dpD,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>oe.BV.runKernel(F.Hmb,r,n)}}};var cn=n(93750);const hn={kernelName:F.mKl,gradFunc:(e,t,n)=>{const{dims:s}=n,r=(0,le.EC)(s,e.shape);return{x:()=>(0,cn.G)(e,r)}}},pn={kernelName:F.e07,gradFunc:e=>({x:()=>(0,J.P)(e)})},dn={kernelName:F.bV0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,U.W)((0,L.h)(e,(0,M.d)((0,Qt.s)(n,1.5),2)))}}};var fn=n(31626);const mn={kernelName:F.PhF,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>(0,O.p)((0,J.P)(n),"float32"),t:()=>(0,M.d)(e,(0,O.p)(n,e.dtype)),e:()=>(0,M.d)(e,(0,O.p)((0,fn.h)(n),e.dtype))}}};var gn=n(41627);const yn={kernelName:F.oFR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,yt.p)(n,(0,W.i)(0)),s=(0,W.i)(gn.y),r=(0,W.i)(gn.$),a=(0,M.d)(e,r),i=(0,M.d)((0,M.d)(e,s),(0,Je.Q)((0,O.p)(n,"float32")));return(0,Te.a)(t,a,i)}}}},bn={kernelName:F.a5O,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,M.d)(e,(0,M.d)(n,(0,G.l)((0,W.i)(1),n)))}}},xn={kernelName:F.i5y,gradFunc:e=>({x:()=>(0,J.P)(e)})};var wn=n(96145);const vn={kernelName:F.RQH,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,M.d)((0,wn.m)((0,O.p)(n,"float32")),e)}}};var kn=n(48349);const In={kernelName:F.wYB,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,M.d)((0,kn.f)((0,O.p)(n,"float32")),e)}}};var Sn=n(78170),Nn=n(81620);const Tn={kernelName:F.p2w,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{begin:r,size:a}=n,i=s.shape,[o,u]=(0,Nn.parseSliceParams)(s,r,a),l=[];for(let c=0;c<e.rank;c++)l.push([o[c],i[c]-o[c]-u[c]]);return{x:()=>(0,Sn.v)(e,l)}}},Cn={kernelName:F.Gcp,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{dim:r}=n,a=(0,M.d)(e,s);return{logits:()=>(0,G.l)(a,(0,M.d)((0,K.S)(a,[r],true),s))}}};var $n=n(88813);const En={kernelName:F.MRv,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,M.d)(e,(0,$n.X)(n))}}};var An=n(24131);const Dn={kernelName:F.TQc,gradFunc:(e,t,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>(0,An.E)(e,s,r)}}};var Rn=n(2344);const _n={kernelName:F.L8s,gradFunc:(e,t,n)=>{const{axis:s}=n;return{x:()=>(0,Rn.z)(e,s)}}},Fn={kernelName:F.FKq,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,L.h)(e,(0,M.d)((0,P._)((0,O.p)(n,"float32")),2))}}},On={kernelName:F.bK0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,M.d)(e,(0,M.d)((0,O.p)(n,"float32"),2))}}},Mn={kernelName:F._tC,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,W.i)(2);return{a:()=>(0,M.d)(e,(0,M.d)(r,(0,G.l)(n,s))),b:()=>(0,M.d)(e,(0,M.d)(r,(0,G.l)(s,n)))}}},Bn={kernelName:F.h8e,gradFunc:e=>({x:()=>(0,J.P)(e)})},zn={kernelName:F.Tr8,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=X.assertAndGetBroadcastShape(n.shape,s.shape);return{a:()=>{let t=e;const s=X.getReductionAxes(n.shape,r);return s.length>0&&(t=(0,K.S)(t,s)),(0,q.X)(t,n.shape)},b:()=>{let t=e;const n=X.getReductionAxes(s.shape,r);return n.length>0&&(t=(0,K.S)(t,n)),(0,q.X)((0,U.W)(t),s.shape)}}}},Ln={kernelName:F.GBy,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,r=s.shape.slice(),{axis:a}=n;(0,le.EC)(a,s.shape).forEach((e=>{r[e]=1}));const i=(0,q.X)(e,r),o=(0,M.d)(i,(0,_t.i)(s.shape,"float32"));return{x:()=>o}}},Un={kernelName:F.sEM,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,L.h)(e,(0,V.h)((0,wn.m)(n)))}}},Wn={kernelName:F.MIZ,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,M.d)((0,G.l)((0,W.i)(1),(0,V.h)(n)),e)}}},Pn={kernelName:F.n9L,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{reps:r}=n;return{x:()=>{let t=(0,J.P)(s);if(1===s.rank)for(let n=0;n<r[0];++n)t=(0,ne.I)(t,(0,Bt.t)(e,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)t=(0,ne.I)(t,(0,Bt.t)(e,[n*s.shape[0],a*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)t=(0,ne.I)(t,(0,Bt.t)(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)for(let o=0;o<r[3];++o)t=(0,ne.I)(t,(0,Bt.t)(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2],o*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return t}}}},Vn={kernelName:F.G3Y,gradFunc:(e,t,n)=>{const s=n,{perm:r}=s,a=Ve.LJ(r);return{x:()=>(0,He.p)(e,a)}}};var Gn=n(84505);const Hn={kernelName:F.ToN,gradFunc:(e,t,n)=>{const s=n,{axis:r}=s;return{value:()=>(0,Gn.k)(e,r)}}};var jn=n(2682),Xn=n(64353),qn=n(56150);const Kn={kernelName:F.Qvg,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=(0,qn.g)(t,(0,J.P)(t)),s=(0,Xn.I)(e,n);let r=(0,Ie.b)(t,(0,W.i)(0,"int32"));const a=s.rank-r.rank;for(let o=0;o<a;++o)r=(0,jn.d)(r,o+1);r=(0,Ne.H)(r,(0,_t.i)(s.shape,"bool"));const i=(0,J.P)(s);return(0,Te.a)(r,s,i)}(e,n)}}};const Qn={kernelName:F.RuY,gradFunc:e=>({x:()=>(0,J.P)(e)})};var Yn=n(74300);const Jn=[z,H,j,Q,Y,Z,ee,te,se,re,ae,ie,de,me,ye,xe,we,ve,ke,Ce,$e,Ae,Oe,_e,ze,Ue,Pe,je,Ke,Qe,nn,Ye,Ze,et,tt,nt,rt,st,ot,lt,pt,dt,ft,mt,gt,bt,xt,wt,vt,It,Tt,Tt,$t,At,Rt,Ft,Ot,Mt,zt,Ut,Wt,Pt,Gt,Ht,Xt,qt,qt,Yt,Jt,tn,sn,rn,an,on,un,ln,hn,pn,dn,mn,yn,bn,xn,vn,In,Tn,Cn,En,Dn,Dn,_n,_n,Fn,Mn,On,Bn,zn,Ln,Un,Wn,Pn,Vn,Hn,Kn,Qn];for(const uR of Jn)(0,Yn.Li)(uR);var Zn=n(38116),es=n(39608);(0,es.t3)().prototype.abs=function(){return this.throwIfDisposed(),(0,Zn.W)(this)};var ts=n(31546);(0,es.t3)().prototype.acos=function(){return this.throwIfDisposed(),(0,ts.K)(this)};var ns=n(63456);(0,es.t3)().prototype.acosh=function(){return this.throwIfDisposed(),(0,ns._)(this)},(0,es.t3)().prototype.add=function(e){return this.throwIfDisposed(),(0,ne.I)(this,e)};var ss=n(73497);(0,es.t3)().prototype.all=function(e,t){return this.throwIfDisposed(),(0,ss.$)(this,e,t)};var rs=n(45053);(0,es.t3)().prototype.any=function(e,t){return this.throwIfDisposed(),(0,rs.Y)(this,e,t)};var as=n(84069);(0,es.t3)().prototype.argMax=function(e){return this.throwIfDisposed(),(0,as.N)(this,e)};var is=n(77480);(0,es.t3)().prototype.argMin=function(e){return this.throwIfDisposed(),(0,is.v)(this,e)},(0,es.t3)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,le.hu)(1===this.size,(()=>"The array must have only 1 element.")),(0,q.X)(this,[])},(0,es.t3)().prototype.asType=function(e){return this.throwIfDisposed(),(0,O.p)(this,e)},(0,es.t3)().prototype.as1D=function(){return this.throwIfDisposed(),(0,q.X)(this,[this.size])},(0,es.t3)().prototype.as2D=function(e,t){return this.throwIfDisposed(),(0,q.X)(this,[e,t])},(0,es.t3)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),(0,q.X)(this,[e,t,n])},(0,es.t3)().prototype.as4D=function(e,t,n,s){return this.throwIfDisposed(),(0,q.X)(this,[e,t,n,s])},(0,es.t3)().prototype.as5D=function(e,t,n,s,r){return this.throwIfDisposed(),(0,q.X)(this,[e,t,n,s,r])};var os=n(53054);(0,es.t3)().prototype.asin=function(){return this.throwIfDisposed(),(0,os.Z)(this)};var us=n(99273);(0,es.t3)().prototype.asinh=function(){return this.throwIfDisposed(),(0,us.V)(this)};var ls=n(39889);(0,es.t3)().prototype.atan=function(){return this.throwIfDisposed(),(0,ls.z)(this)};var cs=n(432);(0,es.t3)().prototype.atan2=function(e){return this.throwIfDisposed(),(0,cs.f)(this,e)};var hs=n(83052);(0,es.t3)().prototype.atanh=function(){return this.throwIfDisposed(),(0,hs.C)(this)};var ps=n(78940);(0,es.t3)().prototype.avgPool=function(e,t,n,s){return this.throwIfDisposed(),(0,ps.w)(this,e,t,n,s)},(0,es.t3)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),(0,An.E)(this,e,t)};var ds=n(58861);(0,es.t3)().prototype.batchNorm=function(e,t,n,s,r){return this.throwIfDisposed(),(0,ds.t)(this,e,t,n,s,r)};var fs=n(14580);(0,es.t3)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),(0,fs.U)(this,e)},(0,es.t3)().prototype.cast=function(e){return this.throwIfDisposed(),(0,O.p)(this,e)};var ms=n(85402);(0,es.t3)().prototype.ceil=function(){return this.throwIfDisposed(),(0,ms.m)(this)};var gs=n(74983);(0,es.t3)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),(0,gs.i)(this,e,t)},(0,es.t3)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof es.es&&(e=[e]),(0,Rn.z)([this,...e],t)};var ys=n(8695);(0,es.t3)().prototype.conv1d=function(e,t,n,s,r,a){return this.throwIfDisposed(),(0,ys.P)(this,e,t,n,s,r,a)};var bs=n(74337);(0,es.t3)().prototype.conv2dTranspose=function(e,t,n,s,r){return this.throwIfDisposed(),(0,bs.b)(this,e,t,n,s,r)},(0,es.t3)().prototype.conv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),(0,Fe.T)(this,e,t,n,s,r,a)},(0,es.t3)().prototype.cos=function(){return this.throwIfDisposed(),(0,wn.m)(this)},(0,es.t3)().prototype.cosh=function(){return this.throwIfDisposed(),(0,kn.f)(this)},(0,es.t3)().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),(0,Zt.$)(this,e,t,n)},(0,es.t3)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),(0,Ge.z)(this,e,t,n)};var xs=n(28181);(0,es.t3)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),(0,xs.n)(this,e,t)};var ws=n(44851);(0,es.t3)().prototype.depthwiseConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),(0,ws.B)(this,e,t,n,s,r,a)};var vs=n(54162);(0,es.t3)().prototype.dilation2d=function(e,t,n,s,r){return this.throwIfDisposed(),(0,vs.W)(this,e,t,n,s,r)};var ks=n(70357);(0,es.t3)().prototype.divNoNan=function(e){return this.throwIfDisposed(),(0,ks.N)(this,e)},(0,es.t3)().prototype.div=function(e){return this.throwIfDisposed(),(0,L.h)(this,e)};var Is=n(46032);(0,es.t3)().prototype.dot=function(e){return this.throwIfDisposed(),(0,Is.A)(this,e)};var Ss=n(53289);(0,es.t3)().prototype.elu=function(){return this.throwIfDisposed(),(0,Ss.p)(this)},(0,es.t3)().prototype.equal=function(e){return this.throwIfDisposed(),(0,St.D)(this,e)};var Ns=n(20599);(0,es.t3)().prototype.erf=function(){return this.throwIfDisposed(),(0,Ns.q)(this)};var Ts=n(62886);(0,es.t3)().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),(0,Ts.d)(this,e,t)},(0,es.t3)().prototype.exp=function(){return this.throwIfDisposed(),(0,Je.Q)(this)},(0,es.t3)().prototype.expandDims=function(e){return this.throwIfDisposed(),(0,jn.d)(this,e)};var Cs=n(86799);(0,es.t3)().prototype.expm1=function(){return this.throwIfDisposed(),(0,Cs.t)(this)};var $s=n(40789);(0,es.t3)().prototype.fft=function(){return this.throwIfDisposed(),(0,$s.k)(this)},(0,es.t3)().prototype.flatten=function(){return this.throwIfDisposed(),(0,q.X)(this,[this.size])},(0,es.t3)().prototype.floor=function(){return this.throwIfDisposed(),(0,Lt.G)(this)};var Es=n(13768);(0,es.t3)().prototype.floorDiv=function(e){return this.throwIfDisposed(),(0,Es.q)(this,e)},(0,es.t3)().prototype.gather=function(e,t,n){return this.throwIfDisposed(),(0,Xn.I)(this,e,t,n)},(0,es.t3)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),(0,Ie.b)(this,e)},(0,es.t3)().prototype.greater=function(e){return this.throwIfDisposed(),(0,yt.p)(this,e)};var As=n(25615);(0,es.t3)().prototype.ifft=function(){return this.throwIfDisposed(),(0,As.S)(this)};var Ds=n(52328);(0,es.t3)().prototype.irfft=function(){return this.throwIfDisposed(),(0,Ds.w)(this)};var Rs=n(6852);(0,es.t3)().prototype.isFinite=function(){return this.throwIfDisposed(),(0,Rs.x)(this)};var _s=n(3948);(0,es.t3)().prototype.isInf=function(){return this.throwIfDisposed(),(0,_s.U)(this)};var Fs=n(11467);(0,es.t3)().prototype.isNaN=function(){return this.throwIfDisposed(),(0,Fs.i)(this)};var Os=n(59385);(0,es.t3)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),(0,Os.h)(this,e)},(0,es.t3)().prototype.lessEqual=function(e){return this.throwIfDisposed(),(0,Se.z)(this,e)},(0,es.t3)().prototype.less=function(e){return this.throwIfDisposed(),(0,Ct.d)(this,e)};var Ms=n(45621);(0,es.t3)().prototype.localResponseNormalization=function(e,t,n,s){return this.throwIfDisposed(),(0,Ms.G)(this,e,t,n,s)};var Bs=n(652);(0,es.t3)().prototype.logSigmoid=function(){return this.throwIfDisposed(),(0,Bs.e)(this)};var zs=n(32062);(0,es.t3)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),(0,zs.C)(this,e)};var Ls=n(36883);(0,es.t3)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),(0,Ls.l)(this,e,t)},(0,es.t3)().prototype.log=function(){return this.throwIfDisposed(),(0,Kt.c)(this)};var Us=n(68066);(0,es.t3)().prototype.log1p=function(){return this.throwIfDisposed(),(0,Us.K)(this)},(0,es.t3)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),(0,Ne.H)(this,e)},(0,es.t3)().prototype.logicalNot=function(){return this.throwIfDisposed(),(0,fn.h)(this)};var Ws=n(32923);(0,es.t3)().prototype.logicalOr=function(e){return this.throwIfDisposed(),(0,Ws.K)(this,e)};var Ps=n(68636);(0,es.t3)().prototype.logicalXor=function(e){return this.throwIfDisposed(),(0,Ps.e)(this,e)},(0,es.t3)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),(0,ge.O)(this,e,t,n)};var Vs=n(70173);(0,es.t3)().prototype.maxPool=function(e,t,n,s){return this.throwIfDisposed(),(0,Vs._)(this,e,t,n,s)};var Gs=n(2535);(0,es.t3)().prototype.max=function(e,t){return this.throwIfDisposed(),(0,Gs.F)(this,e,t)},(0,es.t3)().prototype.maximum=function(e){return this.throwIfDisposed(),(0,qn.g)(this,e)};var Hs=n(86501);(0,es.t3)().prototype.mean=function(e,t){return this.throwIfDisposed(),(0,Hs.J)(this,e,t)};var js=n(56321);(0,es.t3)().prototype.min=function(e,t){return this.throwIfDisposed(),(0,js.V)(this,e,t)};var Xs=n(86955);(0,es.t3)().prototype.minimum=function(e){return this.throwIfDisposed(),(0,Xs.L)(this,e)};var qs=n(36482);(0,es.t3)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),(0,qs.V)(this,e,t)};var Ks=n(70377);(0,es.t3)().prototype.mod=function(e){return this.throwIfDisposed(),(0,Ks.w)(this,e)},(0,es.t3)().prototype.mul=function(e){return this.throwIfDisposed(),(0,M.d)(this,e)},(0,es.t3)().prototype.neg=function(){return this.throwIfDisposed(),(0,U.W)(this)};var Qs=n(23153);(0,es.t3)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),(0,Qs.K)(this,e,t,n)};var Ys=n(65963);(0,es.t3)().prototype.notEqual=function(e){return this.throwIfDisposed(),(0,Ys.Q)(this,e)};var Js=n(62535);(0,es.t3)().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),(0,Js.l)(this,e,t,n)};var Zs=n(90458);(0,es.t3)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,Zs.J)(this)},(0,es.t3)().prototype.pad=function(e,t){return this.throwIfDisposed(),(0,Sn.v)(this,e,t)};var er=n(86826);(0,es.t3)().prototype.pool=function(e,t,n,s,r,a){return this.throwIfDisposed(),(0,er.d)(this,e,t,n,s,r,a)},(0,es.t3)().prototype.pow=function(e){return this.throwIfDisposed(),(0,Qt.s)(this,e)};var tr=n(70756);(0,es.t3)().prototype.prelu=function(e){return this.throwIfDisposed(),(0,tr.A)(this,e)};var nr=n(66422);(0,es.t3)().prototype.prod=function(e,t){return this.throwIfDisposed(),(0,nr.W)(this,e,t)};var sr=n(75972);(0,es.t3)().prototype.reciprocal=function(){return this.throwIfDisposed(),(0,sr.M)(this)};var rr=n(10440);(0,es.t3)().prototype.relu=function(){return this.throwIfDisposed(),(0,rr.U)(this)};var ar=n(8459);(0,es.t3)().prototype.relu6=function(){return this.throwIfDisposed(),(0,ar.b)(this)},(0,es.t3)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),(0,q.X)(this,e.shape)},(0,es.t3)().prototype.reshape=function(e){return this.throwIfDisposed(),(0,q.X)(this,e)};var ir=n(52794);(0,es.t3)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),(0,ir.I)(this,e,t,n)};var or=n(10959);(0,es.t3)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),(0,or.j)(this,e,t,n)},(0,es.t3)().prototype.reverse=function(e){return this.throwIfDisposed(),(0,cn.G)(this,e)};var ur=n(34895);(0,es.t3)().prototype.rfft=function(){return this.throwIfDisposed(),(0,ur.Q)(this)};var lr=n(9452);(0,es.t3)().prototype.round=function(){return this.throwIfDisposed(),(0,lr.N)(this)},(0,es.t3)().prototype.rsqrt=function(){return this.throwIfDisposed(),(0,at.b)(this)};var cr=n(71641);(0,es.t3)().prototype.selu=function(){return this.throwIfDisposed(),(0,cr.U)(this)};var hr=n(50447);(0,es.t3)().prototype.separableConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),(0,hr.U)(this,e,t,n,s,r,a)},(0,es.t3)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,$n.X)(this)};var pr=n(39882);(0,es.t3)().prototype.sign=function(){return this.throwIfDisposed(),(0,pr.X)(this)},(0,es.t3)().prototype.sin=function(){return this.throwIfDisposed(),(0,Le.O)(this)},(0,es.t3)().prototype.sinh=function(){return this.throwIfDisposed(),(0,We.R)(this)},(0,es.t3)().prototype.slice=function(e,t){return this.throwIfDisposed(),(0,Bt.t)(this,e,t)};var dr=n(87411);(0,es.t3)().prototype.softmax=function(e){return this.throwIfDisposed(),(0,dr.X)(this,e)};var fr=n(91628);(0,es.t3)().prototype.softplus=function(){return this.throwIfDisposed(),(0,fr.W)(this)},(0,es.t3)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),(0,be.f)(this,e,t)},(0,es.t3)().prototype.split=function(e,t){return this.throwIfDisposed(),(0,Ee.V)(this,e,t)},(0,es.t3)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,P._)(this)},(0,es.t3)().prototype.square=function(){return this.throwIfDisposed(),(0,V.h)(this)};var mr=n(8258);(0,es.t3)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),(0,mr.$)(this,e)};var gr=n(26507);(0,es.t3)().prototype.squeeze=function(e){return this.throwIfDisposed(),(0,gr.L)(this,e)},(0,es.t3)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof es.es?[this,e]:[this,...e];return(0,Gn.k)(n,t)},(0,es.t3)().prototype.step=function(e){return this.throwIfDisposed(),(0,B.N)(this,e)};var yr=n(36383);(0,es.t3)().prototype.stridedSlice=function(e,t,n,s,r,a,i,o){return this.throwIfDisposed(),(0,yr.N)(this,e,t,n,s,r,a,i,o)},(0,es.t3)().prototype.sub=function(e){return this.throwIfDisposed(),(0,G.l)(this,e)},(0,es.t3)().prototype.sum=function(e,t){return this.throwIfDisposed(),(0,K.S)(this,e,t)};var br=n(45794);(0,es.t3)().prototype.tan=function(){return this.throwIfDisposed(),(0,br.O)(this)};var xr=n(49291);(0,es.t3)().prototype.tanh=function(){return this.throwIfDisposed(),(0,xr.A)(this)},(0,es.t3)().prototype.tile=function(e){return this.throwIfDisposed(),(0,it.G)(this,e)},(0,es.t3)().prototype.toBool=function(){return this.throwIfDisposed(),(0,O.p)(this,"bool")},(0,es.t3)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,O.p)(this,"float32")},(0,es.t3)().prototype.toInt=function(){return this.throwIfDisposed(),(0,O.p)(this,"int32")};var wr=n(21867);(0,es.t3)().prototype.topk=function(e,t){return this.throwIfDisposed(),(0,wr.h)(this,e,t)},(0,es.t3)().prototype.transpose=function(e){return this.throwIfDisposed(),(0,He.p)(this,e)};var vr=n(20589);(0,es.t3)().prototype.unique=function(e){return this.throwIfDisposed(),(0,vr.T)(this,e)},(0,es.t3)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),(0,ut.p)(this,e,t)},(0,es.t3)().prototype.unstack=function(e){return this.throwIfDisposed(),(0,jt.H)(this,e)},(0,es.t3)().prototype.where=function(e,t){return this.throwIfDisposed(),(0,Te.a)(e,this,t)},(0,es.t3)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,J.P)(this)};class kr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,kr.prototype)}}class Ir extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ir.prototype)}}class Sr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Sr.prototype)}}class Nr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Nr.prototype)}}class Tr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Tr.prototype)}}Error;class Cr{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function $r(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Er(e,t){if(!e)throw new Tr(t)}function Ar(e,t){let n=0;for(const s of e)s===t&&n++;return n}function Dr(e){return 1===e.length?e[0]:e}function Rr(e){return Array.isArray(e)?e:[e]}function _r(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Fr(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let Or={};function Mr(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Br(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Br(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Br(t):e[n]=t.value)}}}function zr(e,t={},n={},s="object",r=!1){if("string"==typeof e){const r=e;let a;if(r in n)a=n[r];else if(r in Or)a=Or[r];else if(a=t[r],null==a)throw new Sr(`Unknown ${s}: ${e}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new Sr(`${s}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,u;if(i in n?[o,u]=n[i]:i in Or?[o,u]=Or.className:i in t&&([o,u]=t[i]),null==o)throw new Sr(`Unknown ${s}: ${i}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const n of Object.keys(Or))e[n]=Or[n];for(const r of Object.keys(n))e[r]=n[r];a.config.customObjects=e;const t=Object.assign({},Or);for(const r of Object.keys(n))Or[r]=n[r];Br(a.config);const s=u(o,a.config,n,r);return Or=Object.assign({},t),s}{const e=Object.assign({},Or);for(const s of Object.keys(n))Or[s]=n[s];const t=new o(a.config);return Or=Object.assign({},e),t}}}function Lr(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Ur(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Wr(e){if(null==e)throw new Sr(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Pr(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Sr(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Vr(e,t,n=0,s=1/0){return Er(n>=0),Er(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every((e=>typeof e===t))}function Gr(e,t){Array.isArray(e)?(_.D5U.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Gr(e,`element ${n+1} of ${t}`)))):_.D5U.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Hr(e)}.`))}function Hr(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Hr(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function jr(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let Xr=0;function qr(){return Xr++}const Kr={};function Qr(e=""){return e in Kr||(Kr[e]=0),Kr[e]+=1,e+Kr[e].toString()}const Yr=["channelsFirst","channelsLast"],Jr=["nearest","bilinear"],Zr=["valid","same","causal"],ea=["max","avg"],ta=["sum","mul","concat","ave"],na=new Map;function sa(e){Pr(Yr,"DataFormat",e)}function ra(e){Pr(Zr,"PaddingMode",e)}function aa(e){Pr(ea,"PoolMode",e)}const ia=[];function oa(e,t){ia.push(e);try{const e=t();return ia.pop(),e}catch(n){throw ia.pop(),n}}function ua(e){if(!ha(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===ia.length?"":ia.join("/")+"/")+e}function la(e){if(!ha(e))throw new Error("Not a valid tensor name: '"+e+"'");na.has(e)||na.set(e,0);const t=na.get(e);if(na.set(e,na.get(e)+1),t>0){const n=`${e}_${t}`;return na.set(n,1),n}return e}const ca=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function ha(e){return!!e.match(ca)}function pa(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function da(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s<t&&(t=s)}return t}function fa(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s>t&&(t=s)}return t}function ma(e,t){if(t<e)throw new Sr(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let s=e;s<t;++s)n.push(s);return n}let ga;function ya(){return null==ga&&(ga=(0,_.y3$)().epsilon()),ga}function ba(e,t){return _.pju(e,t)}function xa(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),_.XLQ(e,n)}function wa(e,t,n){return(0,_.lub)((()=>{switch(e.rank){case 1:return _.jZU(e,t,n);case 2:return _.SmN(e,[t,0],[n,e.shape[1]]);case 3:return _.CnO(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return _.p0P(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return _.tPi(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return _.tPi(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Sr(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function va(e,t,n){return(0,_.lub)((()=>{switch(e.rank){case 1:return _.jZU(e,t,n);case 2:return _.SmN(e,[0,t],[e.shape[0],n]);case 3:return _.CnO(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return _.p0P(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Sr(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ka(e,t,n,s){return(0,_.lub)((()=>{switch(e.rank){case 1:return _.jZU(e,t,n);case 2:switch(s){case 1:return wa(e,t,n);case 2:return va(e,t,n);default:throw new Sr(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return wa(e,t,n);case 2:return _.CnO(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return va(e,t,n);default:throw new Sr(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return wa(e,t,n);case 2:return _.p0P(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return _.p0P(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return va(e,t,n);default:throw new Sr(`The axis is not within the rank of the tensor ${s}`)}default:throw new Sr(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Ia(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),_.zoF(e,t)}function Sa(e,t){switch(e.rank){case 1:return _.gME([e,t]);case 2:return _.Izb([e,t],0);case 3:return _.MNy([e,t],0);case 4:return _.ZaL([e,t],0);default:throw new Sr(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Na(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Sr(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return _.Gg6(e,t)}function Ta(e,t=0,n=1,s,r){return _.nGf(e,t,n,s,r)}function Ca(e,t,n,s){if(e.rank<2||t.rank<2)throw new Nr(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Nr(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){const r=!1,a=!1;return _.imm.matMul({a:e,b:t,transposeA:r,transposeB:a,bias:s?Aa(e.rank,s,"channelsLast"):null,activation:n})}{const r=e.shape.slice(),a=r.pop();e=_.XLQ(e,[-1,a]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=_.XLQ(_.p4s(t,c),[u,-1]);const h=[...r,...l],p=!1,d=!1;return _.XLQ(_.imm.matMul({a:e,b:t,transposeA:p,transposeB:d,bias:s?Aa(e.rank,s,"channelsLast"):null,activation:n}),h)}}function $a(e,t,n){return(0,_.lub)((()=>(t=Array.isArray(t)?(0,_.RRF)(t,"int32"):_.pju(t,"int32"),_.Iqj(e,t,n))))}function Ea(e){return _.dC7(e,e)}function Aa(e,t,n){const s=t.shape;if(1!==t.rank&&t.rank!==e)throw new Sr(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===s.length?_.XLQ(t,[1,s[0],1,1,1]):_.XLQ(t,[1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?_.XLQ(t,[1,1,1,1,s[0]]):_.XLQ(t,[1].concat(s))}else if(4===e){if("channelsFirst"===n)return 1===s.length?_.XLQ(t,[1,s[0],1,1]):_.XLQ(t,[1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?_.XLQ(t,[1,1,1,s[0]]):_.XLQ(t,[1].concat(s))}else if(3===e){if("channelsFirst"===n)return 1===s.length?_.XLQ(t,[1,s[0],1]):_.XLQ(t,[1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?_.XLQ(t,[1,1,s[0]]):_.XLQ(t,[1].concat(s))}else if(e<3)return t;throw new Sr(`Unsupported input rank by biasAdd: ${t.rank}`)}function Da(e,t,n){return(0,_.lub)((()=>(null==n&&(n="channelsLast"),sa(n),_.IHx(e,Aa(e.rank,t,n)))))}function Ra(e,t,n,s){return(0,_.lub)((()=>_.rvX(e,t,n,s)))}function _a(e,t,n=!1){return n?e():t()}const Fa=["fanIn","fanOut","fanAvg"],Oa=["normal","uniform","truncatedNormal"];class Ma extends _.m7h.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Ba extends Ma{apply(e,t){return(0,_.lls)(e,t)}}Ba.className="Zeros",_.m7h.registerClass(Ba);class za extends Ma{apply(e,t){return(0,_.iUs)(e,t)}}za.className="Ones",_.m7h.registerClass(za);class La extends Ma{constructor(e){if(super(),"object"!=typeof e)throw new Sr(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Sr(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return(0,_.lub)((()=>(0,_.dC7)((0,_.iD$)(this.value),(0,_.iUs)(e,t))))}getConfig(){return{value:this.value}}}La.className="Constant",_.m7h.registerClass(La);class Ua extends Ma{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return(0,_.LGj)(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Ua.className="RandomUniform",_.m7h.registerClass(Ua);class Wa extends Ma{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Nr(`randomNormal does not support dType ${t}.`);return Ta(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Wa.className="RandomNormal",_.m7h.registerClass(Wa);class Pa extends Ma{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Nr(`truncatedNormal does not support dType ${t}.`);return(0,_.Xu6)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Pa.className="TruncatedNormal",_.m7h.registerClass(Pa);class Va extends Ma{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return(0,_.lub)((()=>{if(2!==e.length||e[0]!==e[1])throw new Sr("Identity matrix initializer can only be used for 2D square matrices.");return(0,_.dC7)(this.gain,(0,_.iyy)(e[0]))}))}getConfig(){return{gain:this.gain}}}Va.className="Identity",_.m7h.registerClass(Va);class Ga extends Ma{constructor(e){if(super(),e.scale<0)throw new Sr(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Pr(Fa,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Pr(Oa,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,s;if(sa(t),2===e.length)n=e[0],s=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=pa(e,2);n=e[1]*t,s=e[0]*t}else if("channelsLast"===t){const t=pa(e,0,e.length-2);n=e[e.length-2]*t,s=e[e.length-1]*t}}else{const t=pa(e);n=Math.sqrt(t),s=Math.sqrt(t)}return[n,s]}(e),s=n[0],r=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,s):"fanOut"===this.mode?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Nr(`${this.getClassName()} does not support dType ${t}.`);return(0,_.Xu6)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return(0,_.LGj)(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Ga.className="VarianceScaling",_.m7h.registerClass(Ga);class Ha extends Ga{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ga.className}}Ha.className="GlorotUniform",_.m7h.registerClass(Ha);class ja extends Ga{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ga.className}}ja.className="GlorotNormal",_.m7h.registerClass(ja);class Xa extends Ga{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ga.className}}Xa.className="HeNormal",_.m7h.registerClass(Xa);class qa extends Ga{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ga.className}}qa.className="HeUniform",_.m7h.registerClass(qa);class Ka extends Ga{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ga.className}}Ka.className="LeCunNormal",_.m7h.registerClass(Ka);class Qa extends Ga{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ga.className}}Qa.className="LeCunUniform",_.m7h.registerClass(Qa);class Ya extends Ma{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return(0,_.lub)((()=>{if(e.length<2)throw new Nr("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=_.D5U.sizeFromShape(e.slice(0,-1)),s=e[e.length-1],r=n*s;r>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${r}) elements: Slowness may result.`);const a=Ta([Math.max(s,n),Math.min(s,n)],0,1,t,this.seed),i=_.$r2.qr(a,!1);let o=i[0];const u=i[1].flatten().stridedSlice([0],[Math.min(s,n)*Math.min(s,n)],[Math.min(s,n)+1]);return o=(0,_.dC7)(o,u.sign()),n<s&&(o=o.transpose()),(0,_.dC7)((0,_.iD$)(this.gain),o.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Ya.className="Orthogonal",_.m7h.registerClass(Ya);const Ja={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Za(e,t={}){return zr(e,_.m7h.SerializationMap.getMap().classNameMap,t,"initializer")}function ei(e){return Mr(e)}function ti(e){if("string"==typeof e){const t=e in Ja?Ja[e]:e;if("GlorotNormal"===t)return new ja;if("GlorotUniform"===t)return new Ha;if("HeNormal"===t)return new Xa;if("HeUniform"===t)return new qa;if("LeCunNormal"===t)return new Ka;if("LeCunUniform"===t)return new Qa;{const e={};return e.className=t,e.config={},Za(e)}}return e instanceof Ma?e:Za(e)}function ni(e){return Array.isArray(e)&&Array.isArray(e[0])}function si(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function ri(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Sr(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function ai(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new Sr(`Expected exactly 1 Shape; got ${e.length}`)}return e}function ii(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const oi="Variable";class ui{constructor(e,t="float32",n="Variable",s=!0,r=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=qr(),n=null==n?oi:n,this.originalName=ua(n),this.name=la(this.originalName),this.trainable_=s,this.constraint=r,this.val=_.VD$(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function li(e){return e.map((e=>e.read()))}function ci(e){e.forEach((e=>{e[0].write(e[1])}))}class hi{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class pi{constructor(e,t,n,s,r,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=i,this.id=qr(),null!=a&&(this.originalName=ua(a),this.name=la(this.originalName)),this.rank=t.length}}let di=0;class fi{constructor(e,t){this.callArgs=t,this.id=di++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let mi=0;class gi extends _.m7h.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=mi++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=_r(e)+"_"+Qr(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Ir(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Sr(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Dr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Dr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new kr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new kr(`Layer ${this.name} is not connected, no input to return.`);return Dr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new kr(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new kr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Dr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Rr(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=Rr(this.inputSpec);if(e.length!==t.length)throw new Sr(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const s=e[n],r=t[n];if(null==r)continue;const a=s.rank;if(null!=r.ndim&&a!==r.ndim)throw new Sr(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(null!=r.maxNDim&&a>r.maxNDim)throw new Sr(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(null!=r.minNDim&&a<r.minNDim)throw new Sr(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(null!=r.dtype&&s.dtype!==r.dtype)throw new Sr(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){const e=s.shape;for(const t in r.axes){const s=Number(t),a=r.axes[t],i=s>=0?e[s]:e[e.length+s];if(null!=a&&-1===[a,null].indexOf(i))throw new Sr(`Input ${n} is incompatible with layer ${this.name}: expected axis ${s} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=r.shape)for(let e=0;e<r.shape.length;++e){const t=r.shape[e],a=s.shape[e];if(null!=t&&null!=a&&t!==a)throw new Sr(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Rr(e);let s=!0;for(const a of n)if(!(a instanceof pi)){s=!1;break}let r=!0;for(const a of n)if(a instanceof pi){r=!1;break}if(s===r)throw new Sr("Arguments to apply() must be all SymbolicTensors or all Tensors");return oa(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Rr(e))t.push(n.shape);this.build(Dr(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let s=this.call(e,t);const r=Rr(s),a=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(s=Dr(a),null!=this.activityRegularizer)throw new Nr("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=function(e){e=Rr(e);const t=[];for(const n of e)t.push(n.shape);return Dr(t)}(e),s=this.computeOutputShape(n);let r;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new pi(a,n,this,Rr(e),t,this.name,s))):new pi(a,s,this,Rr(e),t,this.name),this.addInboundNode(e,r,null,null,n,s,t),this._refCount++,null!=this.activityRegularizer)throw new Nr("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=e[s]&&e[s]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new kr(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new kr(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Ir(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return ii(this.weights)}build(e){this.built=!0}getWeights(e=!1){return li(e?this.trainableWeights:this.weights)}setWeights(e){(0,_.lub)((()=>{const t=this.weights;if(t.length!==e.length)throw new Sr(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],s=li(t);for(let r=0;r<s.length;++r){const a=s[r],i=t[r],o=e[r];if(!_.D5U.arraysEqual(a.shape,o.shape))throw new Sr(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}ci(n)}))}addWeight(e,t,n,s,r,a,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new Sr(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=null!=o?o():ti("zeros"));const u=s.apply(t,n),l=new ui(u,n,e,a,i);return u.dispose(),null!=r&&this.addLoss((()=>r.apply(l.read()))),null==a&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Rr(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,s,r,a,i=null){const o=Rr(e);t=Rr(t),n=Rr(n),s=Rr(s),r=si(r),a=si(a);const u=[],l=[],c=[];for(const h of o)u.push(h.sourceLayer),l.push(h.nodeIndex),c.push(h.tensorIndex);new fi({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},i);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function yi(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const s=yi(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of s)-1===t.indexOf(e)&&t.push(e)}return t}}}class bi extends gi{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Qr("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Sr("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Sr("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Sr("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const s=new pi(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new fi({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Sr(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function xi(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Sr("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;null==n&&(n="float32");return new bi({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}bi.className="InputLayer",_.m7h.registerClass(bi);class wi{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof wi)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Sr(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return(0,_.pju)(t,e.dtype)}catch(n){throw new Sr(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof pi){if(null==this.id2Value[e.id])throw new Sr(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Sr(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof pi){if(null==this.id2Value[e.id])throw new Sr(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Sr(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&(0,_.B90)(this.id2Mask)}}const vi=new Cr,ki=new Cr;function Ii(e,t,n,s){const r=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),u=[],l=t.names();for(const f of o)-1!==l.indexOf(f)?u.push(t.getValue(f)):u.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,p=vi.get(c);if(null==p){const e=function(e,t){_.D5U.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===e.length){const r=Ni(e[0],t);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const a of e){const{sorted:e,recipientMap:i}=Ni(a,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const t in i)null==s[t]&&(s[t]=new Set),i[t].forEach((e=>s[t].add(e)))}}return{sorted:n,recipientCounts:Si(s)}}(i,t);p=e.sorted,h=e.recipientCounts,vi.put(c,p),ki.put(c,h)}h={},r||Object.assign(h,ki.get(c));const d=new wi(t);for(let f=0;f<p.length;++f){if(null!=s){const e=(0,_.sq6)().numTensors;e>s.maxNumTensors&&(s.maxNumTensors=e),e<s.minNumTensors&&(s.minNumTensors=e)}const e=p[f],a=e.sourceLayer;if(a instanceof bi)continue;const i=[],l=[],c=[];let m=!1;for(const n of e.inputs){const e=d.getValue(n),s=d.getMask(n);i.push(e),l.push(s),null!=s&&(m=!0),r||(h[n.name]--,0!==h[n.name]||t.hasKey(n)||-1!==o.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||c.push(e))}m&&((n=n||{}).mask=l[0]);const g=Rr(a.apply(i,n));let y=null;a.supportsMasking&&(y=a.computeMask(i,l));const b=Ti(e),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){d.hasKey(x[t])||d.add(x[t],g[t],Array.isArray(y)?y[0]:y);const e=o.indexOf(x[t].name);-1!==e&&(u[e]=g[t])}r||(0,_.B90)(c)}return d.disposeMasks(),a?u:u[0]}function Si(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Ni(e,t){const n=new Set,s=[],r={};for(const o of t.names())n.add(o);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),s.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:s,recipientMap:r}}function Ti(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const s of e.sourceLayer.inboundNodes[t].outputTensors)if(s.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function Ci(e,t){return(0,_.lub)((()=>_._b3(_.Smz(_.dC7(e,e),t,!0))))}(0,_.OBj)().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=vi&&vi.setMaxEntries(e),null!=ki&&ki.setMaxEntries(e)}));class $i extends _.m7h.Serializable{getConfig(){return{}}}class Ei extends $i{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,_.lub)((()=>{const t=Ci(e,this.axis),n=_.iUl(t,0,this.maxValue);return _.dC7(e,_.hiC(n,_.IHx(ya(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Ei.className="MaxNorm",_.m7h.registerClass(Ei);class Ai extends $i{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,_.lub)((()=>_.hiC(e,_.IHx(ya(),Ci(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Ai.className="UnitNorm",_.m7h.registerClass(Ai);class Di extends $i{apply(e){return _.UYe(e)}}Di.className="NonNeg",_.m7h.registerClass(Di);class Ri extends $i{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,_.lub)((()=>{const t=Ci(e,this.axis),n=_.IHx(_.dC7(this.rate,_.iUl(t,this.minValue,this.maxValue)),_.dC7(1-this.rate,t));return _.dC7(e,_.hiC(n,_.IHx(ya(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Ri.className="MinMaxNorm",_.m7h.registerClass(Ri);const _i={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Fi(e){return Mr(e)}function Oi(e,t={}){return zr(e,_.m7h.SerializationMap.getMap().classNameMap,t,"constraint")}function Mi(e){if(null==e)return null;if("string"==typeof e){return Oi({className:e in _i?_i[e]:e,config:{}})}return e instanceof $i?e:Oi(e)}function Bi(e){return new Ei(e)}function zi(e){return new Ai(e)}function Li(){return new Di}function Ui(e){return new Ri(e)}function Wi(){return new Ba}function Pi(){return new za}function Vi(e){return new La(e)}function Gi(e){return new Ua(e)}function Hi(e){return new Wa(e)}function ji(e){return new Pa(e)}function Xi(e){return new Va(e)}function qi(e){return new Ga(e)}function Ki(e){return new Ha(e)}function Qi(e){return new ja(e)}function Yi(e){return new Xa(e)}function Ji(e){return new qa(e)}function Zi(e){return new Ka(e)}function eo(e){return new Qa(e)}function to(e){return new Ya(e)}async function no(e){if(null==e)return;const t=[],n=[],s=[];for(const r in e){const a=e[r];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(r),s.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];(0,_.B90)(s)}}function so(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var ro;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(ro||(ro={}));class ao{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class io{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class oo extends ao{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const s in t){const e=t[s];if("number"==typeof e)this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+e*n;else{let t;s in this.totals?t=this.totals[s]:this.totals[s]=0;const r=(0,_.lub)((()=>(0,_.IHx)(this.totals[s],(0,_.dC7)(e,n))));this.totals[s]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"==typeof this.totals[n]?t[n]=this.totals[n]/this.seen:(0,_.lub)((()=>{const e=(0,_.dC7)((0,_.hiC)(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),(0,_.CnY)(t[n])})))}}class uo extends ao{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];e.push(i.data()),t.push(r),n.push(a)}}const s=await Promise.all(e);for(let r=0;r<s.length;++r){this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=s[r][0]}}}class lo extends ao{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||_.glt,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");_.D5U.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let s,r=null!=n?n():_.D5U.now();return(...a)=>{const i=null!=n?n():_.D5U.now();return i-r<t||(r=i,s=e(...a)),s}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const s=[];null!=this.yield&&(await no(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await no(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await no(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await no(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await no(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):_.D5U.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await no(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await no(e),await this.trainEnd(e))}}function co(e,t){if(null==e&&(e={}),e instanceof ao)return[e];if(Array.isArray(e)&&e[0]instanceof ao)return e;return Rr(e).map((e=>new lo(e,t)))}class ho{constructor(){}static registerCallbackConstructor(e,t){_.D5U.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),ho.checkForDuplicate(t),null==ho.constructors[e]&&(ho.constructors[e]=[]),ho.constructors[e].push(t)}static checkForDuplicate(e){for(const t in ho.constructors){ho.constructors[+t].forEach((t=>{if(t===e)throw new Sr("Duplicate callback constructor.")}))}}static clear(){ho.constructors={}}static createCallbacks(e){const t=[];for(const n in ho.constructors){const s=+n;e>=s&&t.push(...ho.constructors[s])}return t.map((e=>new e))}}function po(e,t,n,s,r,a,i,o,u){const l=new uo,c=[new oo,...ho.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new io(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}function fo(e,t={},n=!1){return zr(e,_.m7h.SerializationMap.getMap().classNameMap,t,"layer",n)}function mo(e,t){return(0,_.lub)((()=>{"float32"!==e.dtype&&(e=_.pju(e,"float32"));const n=_.Smz(Ea(e),t,!0),s=_.hlL(n.shape,ya()),r=_._b3(_.gWQ(n,s));return _.hiC(e,r)}))}function go(e,t){return(0,_.lub)((()=>_.J69(Ea(_.luU(t,e)),-1)))}function yo(e,t){return(0,_.lub)((()=>_.J69(_.WnP(_.luU(t,e)),-1)))}function bo(e,t){return(0,_.lub)((()=>{const n=_.luU(e,t),s=_.iUl(_.WnP(e),ya(),Number.MAX_VALUE),r=_.WnP(_.hiC(n,s));return _.dC7(100,_.J69(r,-1))}))}function xo(e,t){return(0,_.lub)((()=>{const n=_.iUl(t,ya(),Number.MAX_VALUE),s=_.cM7(_.IHx(1,n)),r=_.iUl(e,ya(),Number.MAX_VALUE),a=_.cM7(_.IHx(1,r));return _.J69(Ea(_.luU(s,a)),-1)}))}function wo(e,t,n=!1){return(0,_.lub)((()=>{if(n)t=_.XAC(t);else{const e=_.Smz(t,t.shape.length-1,!0);t=_.hiC(t,e)}return t=_.iUl(t,ya(),1-ya()),_.W76(_.Smz(_.dC7(_.pju(e,"float32"),_.cM7(t)),t.shape.length-1))}))}function vo(e,t,n=!1){return(0,_.lub)((()=>{const s=_.pju(_.GWj(function(e){const t=[pa(e.shape)];return _.XLQ(e,t)}(e)),"int32"),r=(t=_.iUl(t,ya(),1-ya())).shape;return wo(_.XLQ(_.lfX(s,r[r.length-1]),r),t,n)}))}function ko(e,t){return(0,_.lub)((()=>{let n;return n=_.iUl(t,ya(),1-ya()),n=_.cM7(_.hiC(n,_.luU(1,n))),_.J69(function(e,t){if(!_.D5U.arraysEqual(e.shape,t.shape))throw new Sr(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return(0,_.lub)((()=>{const n=_.UYe(t),s=_.W76(_.WnP(t));return _.IHx(_.luU(n,_.dC7(t,e)),_.Krr(_.Qqt(s)))}))}(e,n),-1)}))}function Io(e,t){return(0,_.lub)((()=>{const n=_.iUl(e,ya(),1),s=_.iUl(t,ya(),1);return _.Smz(_.dC7(e,_.cM7(_.hiC(n,s))),-1)}))}function So(e,t){return(0,_.lub)((()=>{const n=mo(e,-1),s=mo(t,-1),r=_.dC7(n,s);return _.W76(_.Smz(r,-1))}))}ho.constructors={};const No={meanSquaredError:go,meanAbsoluteError:yo,meanAbsolutePercentageError:bo,meanSquaredLogarithmicError:xo,squaredHinge:function(e,t){return(0,_.lub)((()=>{const n=_.gWQ(0,_.luU(1,_.dC7(e,t)));return _.J69(Ea(n),-1)}))},hinge:function(e,t){return(0,_.lub)((()=>{const n=_.gWQ(0,_.luU(1,_.dC7(e,t)));return _.J69(n,-1)}))},categoricalHinge:function(e,t){return(0,_.lub)((()=>{const n=_.Smz(_.dC7(e,t),-1),s=_.Fp7(_.dC7(_.luU(1,e),t),-1);return _.gWQ(0,_.IHx(1,_.luU(s,n)))}))},logcosh:function(e,t){return(0,_.lub)((()=>{const n=Math.log(2),s=_.luU(t,e),r=_.luU(_.IHx(s,_.Wvh(_.dC7(-2,s))),n);return _.J69(r,-1)}))},categoricalCrossentropy:wo,sparseCategoricalCrossentropy:vo,binaryCrossentropy:ko,kullbackLeiblerDivergence:Io,poisson:function(e,t){return(0,_.lub)((()=>{const n=_.cM7(_.IHx(ya(),t));return _.J69(_.luU(t,_.dC7(e,n)),-1)}))},cosineProximity:So};function To(e){if("string"==typeof e){if(e in No)return No[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Sr(t)}return e}function Co(e,t){return(0,_.lub)((()=>{const n=_.dC7(.5,_.JpU(t)),s=ba(_.pjt(t,n),e.dtype);return _.J69(_.DgJ(e,s),-1)}))}function $o(e,t){return(0,_.lub)((()=>ba(_.DgJ(_.NqF(e,-1),_.NqF(t,-1)),"float32")))}function Eo(e,t){return(0,_.lub)((()=>_.pju(_.Smz(_.HvI(_.DgJ(e,1),_.DgJ(t,1))),"float32")))}function Ao(e,t){return(0,_.lub)((()=>{const n=Eo(e,t),s=function(e,t){return(0,_.lub)((()=>_.pju(_.Smz(_.HvI(_.DgJ(e,0),_.DgJ(t,1))),"float32")))}(e,t),r=_.IHx(n,s);return _.pju(_.arb(_.pjt(r,0),_.hiC(n,r),0),"float32")}))}function Do(e,t){return(0,_.lub)((()=>{const n=Eo(e,t),s=function(e,t){return(0,_.lub)((()=>_.pju(_.Smz(_.HvI(_.DgJ(e,1),_.DgJ(t,0))),"float32")))}(e,t),r=_.IHx(n,s);return _.pju(_.arb(_.pjt(r,0),_.hiC(n,r),0),"float32")}))}function Ro(e,t){return ko(e,t)}function _o(e,t){return e.rank===t.rank&&(e=_.L9e(e,[e.rank-1])),(t=_.NqF(t,-1)).dtype!==e.dtype&&(t=_.pju(t,e.dtype)),_.pju(_.DgJ(e,t),"float32")}const Fo=wo,Oo=vo,Mo={binaryAccuracy:Co,categoricalAccuracy:$o,precision:Ao,categoricalCrossentropy:Fo,sparseCategoricalCrossentropy:Oo,mse:go,MSE:go,mae:yo,MAE:yo,mape:bo,MAPE:bo,cosine:So};function Bo(e){if("string"==typeof e&&e in Mo)return Mo[e];if("string"!=typeof e&&null!=e)return e;throw new Sr(`Unknown metric ${e}`)}function zo(e){if(Er(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(No))if(No[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Mo))if(Mo[n]===e){t=n;break}return void 0!==t?t:e.name}}const Lo=1048576;function Uo(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Wo(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>Lo&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Wo(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Wo(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Wo(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Po(e,t,n,s=console.log){const r=function(e){let t=!0;const n=[],s=[];for(const r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(const r of n){if(r.length>1||1===r.length&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(const r of e.layers){let e=!1;for(const n of r.inboundNodes)if(-1!==s.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}s("_".repeat(t)),Vo(a,n,s),s("=".repeat(t));const o=e.layers;for(let c=0;c<o.length;++c)r?Go(o[c],n,s):Ho(o[c],n,i,s),s((c===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;t=null!=e.collectedTrainableWeights?ii(e.collectedTrainableWeights):ii(e.trainableWeights);return t}(e),l=ii(e.nonTrainableWeights);s(`Total params: ${u+l}`),s(`Trainable params: ${u}`),s(`Non-trainable params: ${l}`),s("_".repeat(t))}function Vo(e,t,n=console.log){let s="";for(let r=0;r<e.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=e[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);n(s)}function Go(e,t,n){let s,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(a){r="multiple"}try{s=JSON.stringify(e.outputShape)}catch(a){s="multiple"}Vo([`${e.name} (${e.getClassName()})`,r,s,e.countParams().toString()],t,n)}function Ho(e,t,n,s){let r,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(c){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(c){r="multiple"}const i=[];for(const h of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(h)))for(let e=0;e<h.inboundLayers.length;++e){const t=h.inboundLayers[e].name,n=h.nodeIndices[e],s=h.tensorIndices[e];i.push(`${t}[${n}][${s}]`)}const o=e.name,u=e.getClassName(),l=0===i.length?"":i[0];Vo([`${o} (${u})`,a,r,e.countParams().toString(),l],t,s);for(let h=1;h<i.length;++h)Vo(["","","","",i[h]],t,s)}function jo(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Xo(e,t){if(null===e)return null;if("string"==typeof e)return Fr(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];jo(t,r,s)?n.push(s):n.push(Xo(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];if("name"===n&&"string"==typeof s)t[n]=s;else{const e=Fr(n);t[e]=Xo(s,e)}}return t}}function qo(e,t){if(null==e)return null;if("string"==typeof e)return _r(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];jo(t,r,s)?n.push(s):n.push(qo(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n],r=_r(n);t[r]="name"!==n&&"className"!==n||"string"!=typeof s?qo(s,n):s}return t}}const Ko="4.6.0";class Qo extends gi{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Qr(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Ur(this.inputs).length!==this.inputs.length)throw new Sr(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Ur(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const y of this.inputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;Er(0===t,"input layer has >1 nodes"),Er(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const t=this.inputLayers[y];if(!(t instanceof bi))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},s={},r={},a={},i=[],o=(e,t,n,s,r,u)=>{null!=s&&null!=r&&null!=u||(s=e.sourceLayer,r=e.nodeIndex,u=e.tensorIndex);const l=s.inboundNodes[r];if(-1!==n.indexOf(l))throw new Ir(`The tensor ${e.name} at layer "${s.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(Qo.nodeKey(s,r)),s.id in a||(a[s.id]=Object.keys(a).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let a=0;a<c;a++){const e=l.inputTensors[a],s=l.inboundLayers[a],r=l.nodeIndices[a],i=l.tensorIndices[a];o(e,t,n,s,r,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const y of this.outputs)o(y,u,l);const c=i.slice().reverse();for(const y of c){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id];const a=null==s[y.outboundLayer.id]?0:s[y.outboundLayer.id];e=Math.max(e,a),s[y.outboundLayer.id]=e,r[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let s=0;s<y.inboundLayers.length;s++){const r=y.inboundLayers[s],a=y.nodeIndices[s],i=r.inboundNodes[a],o=null==t[i.id]?0:t[i.id];t[i.id]=Math.max(e+1,o),n[i.id]=i}}const h={};for(const y in t){const e=t[y];e in h||(h[e]=[]),h[e].push(n[y])}const p={};for(const y in s){const e=s[y];e in p||(p[e]=[]),p[e].push(r[y])}let d=Object.keys(p).map((e=>parseInt(e,10))).sort(Lr);this.layers=[];for(const y of d){const e=p[y];e.sort(((e,t)=>{const n=a[e.id],s=a[t.id];return n<s?-1:n>s?1:0}));for(const t of e)t instanceof Qo&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=p,d=Object.keys(h).map((e=>parseInt(e,10))).sort(Lr);const f=this.inputs.slice(),m=[];for(const y of d)for(const e of h[y]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Ir(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const y of g){const e=g.filter((e=>e===y)).length;if(1!==e)throw new Ir(`The name "${y}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new fi({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Sr("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let s=0;for(const a of this.layers)for(const e of a.weights){if(null!=n[e.originalName])throw new Sr(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,s++}const r=[];for(const a in e){let s=a;if(null==n[a]){const e=a.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])r.push([n[s],e[a]]);else if(t)throw new Sr(`Provided weight data has no target variable: ${a}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Sr(`${e.length} of ${s} weights are not set: ${e}`)}ci(r)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Ko}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=qo(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return(0,_.lub)((()=>{e=Rr(e);const n=new wi;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Ii(this.outputs,n,t)}))}computeMask(e,t){return(0,_.lub)((()=>{let n;return e=Rr(e),n=null==t?$r(null,e.length):Rr(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=si(e);if(t.length!==this.inputLayers.length)throw new Sr(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let i=0;i<t.length;i++){const e=this.inputLayers[i],s=t[i];n[e.name+"_0_0"]=s}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Lr);if(s.length>1)for(const i of s){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const s=[];for(let i=0;i<t.inboundLayers.length;i++){const e=t.inboundLayers[i],r=t.nodeIndices[i],a=t.tensorIndices[i],o=n[`${e.name}_${r}_${a}`];s.push(o)}const r=si(e.computeOutputShape(Dr(s))),a=e.inboundNodes.indexOf(t);for(let t=0;t<r.length;t++){n[`${e.name}_${a}_${t}`]=r[t]}}}const r=[],a=[];for(let i=0;i<this.outputLayers.length;i++){const e=this.outputLayers[i],t=this.outputLayersNodeIndices[i],n=this.outputLayersTensorIndices[i],s=`${e.name}_${t}_${n}`;a.push(s)}for(let i=0;i<a.length;i++){const e=a[i];Er(e in n),r.push(n[e])}return Dr(r)}runInternalGraph(e,t){null==t&&(t=$r(null,e.length));const n={};for(let o=0;o<this.inputs.length;++o){const s=this.inputs[o],r=e[o],a=t[o];n[s.id]=[r,a]}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Lr);for(const o of s){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer,s=t.inputTensors,r=t.outputTensors,a=new Array;for(const t of s)t.id in n&&a.push(n[t.id]);if(a.length===s.length){let s,i,o,u,l={};if(null!=t.callArgs&&(l=t.callArgs),1===a.length){const[t,n]=a[0];null==l.mask&&(l.mask=n),o=Rr(e.call(t,l)),u=Rr(e.computeMask(t,n)),s=[t],i=[n]}else s=a.map((e=>e[0])),i=a.map((e=>e[1])),null==l.mask&&(l.mask=i),o=Rr(e.call(s,l)),u=Rr(e.computeMask(s,i));if(e.activityRegularizer)throw new Nr("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],s=o[e],a=u[e];n[t.id]=[s,a]}}}}const r=[],a=[],i=[];for(const o of this.outputs){Er(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[e,t]=n[o.id];i.push(e.shape),r.push(e),a.push(t)}return[r,a,i]}buildNodeConversionMap(e){const t={};let n;for(const s of this.layers){n=s instanceof Qo?1:0;for(let e=0;e<s.inboundNodes.length;e++){const r=Qo.nodeKey(s,e);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new Sr(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new Sr("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===e)return n;throw new Sr(`No such layer: ${e}`)}calculateLosses(){return(0,_.lub)((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const s=Qo.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const i of this.layers){const e=i.getClassName(),s=i.getConfig(),r=[];for(let n=0;n<i.inboundNodes.length;n++){const e=i.inboundNodes[n],s=Qo.nodeKey(i,n);let o={};if(this.containerNodes.has(s)){if(e.callArgs)try{JSON.stringify(e.callArgs),o=e.callArgs}catch(a){console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${e.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),o={}}if(e.inboundLayers.length>0){const n=[];for(let s=0;s<e.inboundLayers.length;s++){const r=e.inboundLayers[s],a=e.nodeIndices[s],i=e.tensorIndices[s];let u=t[Qo.nodeKey(r,a)];null==u&&(u=0),n.push([r.name,u,i,o])}r.push(n)}}}const o={};o.name=i.name,o.className=e,o.config=s,o.inboundNodes=r,n.push(o)}e.layers=n;const s=[];for(let i=0;i<this.inputLayers.length;i++){const e=this.inputLayers[i],n=this.inputLayersNodeIndices[i],r=Qo.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let a=t[r];null==a&&(a=0);const o=this.inputLayersTensorIndices[i];s.push([e.name,a,o])}e.inputLayers=s;const r=[];for(let i=0;i<this.outputLayers.length;i++){const e=this.outputLayers[i],n=this.outputLayersNodeIndices[i],s=Qo.nodeKey(e,n);if(!this.containerNodes.has(s))continue;let a=t[s];null==a&&(a=0);const o=this.outputLayersTensorIndices[i];r.push([e.name,a,o])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){const r={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let s;for(const a of t){const o=a[0],u=a[1],l=a[2];if(s=null==a[3]?{}:a[3],!(o in r))return void i(e,t);const c=r[o];if(c.inboundNodes.length<=u)return void i(e,t);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&e.apply(Dr(n),s)}function u(e){const n=e.name,a=fo(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(s),r[n]=a;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Sr(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const l=t.name,c=t.layers;for(const m of c)u(m);for(;!Wr(a);)for(const e of c){const t=r[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],p=[],d=t.inputLayers;for(const m of d){const e=m[0],t=m[1],n=m[2];Er(e in r);const s=r[e].inboundNodes[t].outputTensors;h.push(s[n])}const f=t.outputLayers;for(const m of f){const e=m[0],t=m[1],n=m[2];Er(e in r);const s=r[e].inboundNodes[t].outputTensors;p.push(s[n])}return new e({inputs:h,outputs:p,name:l})}get stateful(){if(this._stateful)throw new Sr("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){(0,_.lub)((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Yo(e,t,n){const s=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===s)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function Jo(e,t){return Yo(e,t,"classWeight")}async function Zo(e,t,n,s){if(null!=t||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=(0,_.lub)((()=>{if(1===e.shape.length)return(0,_.d9v)(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return(0,_.NqF)(e,t)}if(1===e.shape[1])return(0,_.XLQ)(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await t.data());(0,_.B90)(t);const r=[];return s.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);r.push(n[e])})),(0,_.RRF)(r,"float32")}return null}function eu(e,t){return(0,_.dC7)(e,t)}function tu(e,t){let n,s;const r=t;n=r.xs,s=r.ys,_.D5U.assert(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=nu("input",e.inputNames,n),i=nu("output",e.outputNames,s),o=a[0].shape[0];_.D5U.assert(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),_.D5U.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let u=0;u<a.length;u++)_.D5U.assert(a[u].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[u]} has ${a[u].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let u=0;u<i.length;u++)_.D5U.assert(i[u].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[u]} has ${i[u].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function nu(e,t,n){if(n instanceof _.esB)return[n];if(Array.isArray(n))return _.D5U.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const s=[];for(const r of t){if(null==n[r])throw new Sr(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}async function su(e,t,n){const s=null!=n.batchesPerEpoch;if(_.D5U.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),_.D5U.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),_.D5U.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),_.D5U.assert(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),_.D5U.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let a,i;if(r)if(ru(n.validationData))_.D5U.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new Nr("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=r?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=co(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:d}=po(c,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,r,l);p.setModel(e),e.history=d,await p.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await p.onEpochBegin(f);let c=0,h=0;for(s||(m=await t.iterator());!s||c<n.batchesPerEpoch;){const t=await m.next();if(s&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:s,ys:r}=tu(e,t.value),a={};a.batch=h,a.size=s[0].shape[0],await p.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=Jo(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Zo(r[e],null,t[e]))}const l=s.concat(r).concat(i),d=o(l);_.B90(l);for(let e=0;e<u.length;++e){const t=u[e],n=d[e];a[t]=n,_.CnY(n)}await p.onBatchEnd(h,a),so(a),h++,c++}if(s?c>=n.batchesPerEpoch:t.done){if(r){let t;t=ru(n.validationData)?Rr(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Rr(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,l),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function ru(e){return"function"==typeof e.iterator}function au(e){_.D5U.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function iu(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>wa(e,t,n-t))):wa(e,t,n-t)}function ou(e,t){return _.lub((()=>null==e?null:Array.isArray(e)?e.map((e=>ou(e,t))):$a(e,"int32"===t.dtype?t:_.pju(t,"int32"))))}function uu(e,t){const n=[];let s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}function lu(e){const t=[];e instanceof _.esB&&(e=[e]);for(let n=0;n<e.length;++n){const s=e[n];if(1===s.rank)t.push(xa(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function cu(e,t){if(null==e)return;const n=[];if(t instanceof _.esB)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const r in t){const e=t[r];n.push(e.id)}const s=[];if(e instanceof _.esB)-1===n.indexOf(e.id)&&s.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&s.push(e)}));else if(null!=e)for(const r in e){const t=e[r];-1===n.indexOf(t.id)&&s.push(t)}s.forEach((e=>{e.isDisposed||e.dispose()}))}function hu(e){return Array.isArray(e)}function pu(e){return!function(e){return e instanceof _.esB}(e)&&!hu(e)}function du(e,t,n,s=!0,r=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(hu(e)&&e.length>0)t=!0;else if(pu(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Sr(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(pu(e)){a=[];for(const n of t){if(null==e[n])throw new Sr(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(hu(e)){if(e.length!==t.length)throw new Sr(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(t.length>1)throw new Sr(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=lu(a),null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=a[i];if(e.shape.length!==n[i].length)throw new Sr(`Error when checking ${r}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${e.shape}`);for(let t=0;t<n[i].length;++t){if(0===t&&!s)continue;const a=e.shape[t],o=n[i][t];if(null!=o&&o>=0&&a!==o)throw new Sr(`${r} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${r} received an input with ${e.shape[0]} examples, each with shape [${e.shape.slice(1,e.shape.length)}] (tensor shape [${e.shape}])`)}}return a}function fu(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new Sr(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new Sr(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=a[i];if(e.shape.length!==n[i].length)throw new Sr(`Error when checking ${r}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(e.shape)}`);for(let a=0;a<n[i].length;++a){if(0===a&&!s)continue;const o=e.shape[a],u=n[i][a];if(null!=u&&u!==o)throw new Sr(`Error when checking ${r}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}class mu extends Qo{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Sr("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Po(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>_.p_j.adagrad(.01),Adadelta:()=>_.p_j.adadelta(1,.95,ya()),Adam:()=>_.p_j.adam(.001,.9,.999,ya()),Adamax:()=>_.p_j.adamax(.002,.9,.999,ya(),0),RMSProp:()=>_.p_j.rmsprop(.001,.9,0,ya()),SGD:()=>_.p_j.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Sr(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof _.gaJ))throw new Sr("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Sr(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>To(e)))}else{const n=To(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Sr(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(To(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const e=this.internalOutputShapes[a],t=this.outputNames[a];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[a])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],oa("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const s=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const s of t){let t=n.hasOwnProperty(s)?n[s]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};oa("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,s,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===ko?-1!==["accuracy","acc"].indexOf(i)?s=Co:-1!==["crossentropy","ce"].indexOf(i)&&(s=Ro):this.lossFunctions[e]===vo?-1!==["accuracy","acc"].indexOf(i)?s=_o:-1!==["crossentropy","ce"].indexOf(i)&&(s=Oo):-1!==["accuracy","acc"].indexOf(i)?s=$o:-1!==["crossentropy","ce"].indexOf(i)&&(s=Fo),-1!==["accuracy","acc"].indexOf(i)?r="acc":-1!==["crossentropy","ce"].indexOf(i)&&(r="ce"),a=s,n=""+r}else{const e=Bo(i);a=e,n=""+zo(i)}let t;oa(n,(()=>{t=a})),r(e,n,t)}})(s[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const s=null==n.batchSize?32:n.batchSize;au(s);const r=this.standardizeUserDataXY(e,t,!0,s);try{const a=r[0].concat(r[1]);this.makeTestFunction();const i=this.testFunction;return Dr(this.testLoop(i,a,s,n.verbose,n.steps))}finally{cu(r[0],e),cu(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const s=null!=(n=n||{}).batches,r=e.testFunction;let a=[];if(n.verbose>0)throw new Nr("Verbose mode is not implemented yet.");_.D5U.assert(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!s||u<n.batches;){const t=await i.next();if(a=_.lub((()=>{if(t.value){const{xs:n,ys:s}=tu(e,t.value),i=n.concat(s),l=_.lub((()=>r(i)));if(_.B90(i),0===u)for(let e=0;e<l.length;++e)a.push((0,_.iD$)(0));const c=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=a[e];a[e]=_.lub((()=>_.IHx(a[e],_.dC7(c,t)))),u>0&&_.B90(n)}_.B90(l),o+=c,++u}return a})),t.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<a.length;++l){const e=a[l];a[l]=_.hiC(a[l],o),_.B90(e)}return Dr(a)}(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(null!=n){if(r=null,null!=t)throw new Sr(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Sr(`Either the input data should have a defined shape, or ${s} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Sr("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new wi;if(e instanceof _.esB&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Sr(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const o of this.inputs){const t=e[o.name];if(null==t)throw new Sr(`No value is provided for the model's input ${o.name}`);a.add(o,t)}const i=Ii(r,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=$r(null,e.length);let n=e.length;for(const s of this.layers){const r=Array.isArray(s.output)?s.output:[s.output],a=r.map((e=>e.name));for(let s=0;s<e.length;++s){const i=a.indexOf(e[s]);if(-1!==i&&(t[s]=r[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,s)=>{null==t&&n.push(e[s])})),new Sr(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return _.lub((()=>{const s=this.checkNumSamples(e);if(n)throw new Nr("Verbose predictLoop() is not implemented yet.");const r=uu(s,t),a=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t){_.lub((()=>{const n=r[t][0],s=r[t][1],a=iu(e,n,s),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new wi(i);return Ii(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)))}return Dr(a.map((e=>_.zoF(e,0))))}))}predict(e,t={}){const n=lu(e);fu(n,this.inputNames,this.feedInputShapes,!1);try{const s=null==t.batchSize?32:t.batchSize;return au(s),this.predictLoop(n,s)}finally{cu(n,e)}}predictOnBatch(e){fu(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(null==this.optimizer_)throw new Ir("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let a=0;a<this.feedOutputShapes.length;++a){const e=this.feedOutputShapes[a];this.feedLossFns[a]===vo?r.push(e.slice(0,e.length-1).concat([1])):r.push(e)}if(function(e,t,n){const s=Ur(e.map((e=>e.shape[0])));s.sort();const r=Ur(t.map((e=>e.shape[0])));if(r.sort(),s.length>1)throw new Sr(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new Sr(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(s.length>0&&r.length>0&&!_.D5U.arraysEqual(s,r))throw new Sr(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=du(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=du(t,this.feedOutputNames,r,!1,"target")),function(e,t,n){const s=[go,ko,wo];for(let r=0;r<e.length;++r){const a=e[r],i=t[r],o=n[r];if(null!=i){if(i===wo&&1===a.shape[a.shape.length-1])throw new Sr(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const s=e[n],r=t[n];if(null!=r&&s!==r)throw new Sr(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&e[0].shape[0]%s!=0)throw new Sr(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,r,a);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=s){const e=Jo(s,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await Zo(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,s=0,r){return _.lub((()=>{const a=this.checkNumSamples(t,n,r,"steps"),i=[];if(s>0)throw new Nr("Verbose mode is not implemented yet.");if(null!=r)throw new Nr("steps mode in testLoop() is not implemented yet");{const s=uu(a,n),r=(0,_.RRF)(ma(0,a));for(let n=0;n<s.length;++n){const a=s[n][0],o=s[n][1],u=wa(r,a,o-a),l=ou(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)i.push((0,_.iD$)(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=_.IHx(i[e],_.dC7(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=_.hiC(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const s=e[n];let r=s;if(Ar(e,s)>1){r+=`_${Ar(e.slice(0,n),s)}`}t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new wi(e),o=Ii(this.outputs,i,{training:!0});let u;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(s[n],o[n]);null!=r[n]&&(e=eu(e,r[n]));const a=_.J69(e);t.push(a),u=0===n?e:_.IHx(u,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],r=this.metricsTensors[n][1];e=_.J69(t(s[r],o[r]))}_.CnY(e),a.push(e)}return u=_.J69(u),this.calculateLosses().forEach((e=>{u=_.IHx(u,e)})),u}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>_.lub((()=>{const t=[];let n;const s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:s[e]});const i=new wi(a),o=Ii(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const s=this.lossFunctions[e],a=_.J69(s(r[e],o[e]));n=0===e?a:_.IHx(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],s=this.metricsTensors[e][1],a=_.J69(n(r[s],o[s]));t.push(a)}return t}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,r,a,i,o,u,l,c,h;this.isTraining=!0;try{const p=null==n.batchSize?32:n.batchSize;au(p);const d=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,d,p);s=f[0],r=f[1],h=f[2];let m,g=!1;if(null!=n.validationData&&n.validationData.length>0){if(g=!0,2!==n.validationData.length)throw 3===n.validationData.length?new Nr("validationData including sample weights is not supported yet."):new Sr(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],u=n.validationData[1];const e=!0,t=await this.standardizeUserData(o,u,null,null,e,p);l=t[0],c=t[1],m=l.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){g=!0;const e=Math.floor(s[0].shape[0]*(1-n.validationSplit)),t=s[0].shape[0];l=iu(s,e,t),a=s,s=iu(s,0,e),c=iu(r,e,t),i=r,r=iu(r,0,e),m=l.concat(c)}else null!=n.validationSteps&&(g=!0);const y=s.concat(r).concat(h);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let w,v;g?(this.makeTestFunction(),w=this.testFunction,v=x.slice().concat(x.map((e=>"val_"+e)))):(w=null,m=[],v=x.slice());const k=co(n.callbacks,n.yieldEvery);return await this.fitLoop(b,y,x,p,n.epochs,n.verbose,k,w,m,n.shuffle,v,n.initialEpoch,null,null)}finally{this.isTraining=!1,cu(s,e),cu(r,t),cu(a,e),cu(i,t),cu(l,o),cu(c,u),null!=h&&_.B90(h)}}async fitLoop(e,t,n,s,r,a,i,o,u,l,c,h,p,d){null==s&&(s=32),null==r&&(r=1),null==l&&(l=!0),null==h&&(h=0);let f=!1;if(null!=o&&null!=u&&(f=!0),null!=d&&(f=!0,null==p))throw new Sr("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,s,p,"steps_per_epoch");let g;null!=m&&(g=ma(0,m)),null==a&&(a=1);const{callbackList:y,history:b}=po(i,a,r,h,m,p,s,f,c);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let x=h;x<r;++x){await y.onEpochBegin(x);const r={};if(null!=p)throw new Nr("stepsPerEpoch mode is not implemented yet.");{if("batch"===l)throw new Nr("batch shuffling is not implemneted yet");l&&_.D5U.shuffle(g);const a=(0,_.RRF)(g),i=uu(m,s);for(let l=0;l<i.length;++l){const c={};if(await y.onBatchBegin(l,c),_.lub((()=>{const h=i[l][0],p=i[l][1],d=wa(a,h,p-h);c.batch=l,c.size=p-h;const m=ou(t,d),g=e(m);for(let e=0;e<n.length;++e){const t=n[e],s=g[e];c[t]=s,_.CnY(s)}if(l===i.length-1&&f){const e=this.testLoop(o,u,s);for(let t=0;t<n.length;++t){const s=n[t],a=e[t];_.CnY(a),r["val_"+s]=a}}})),await y.onBatchEnd(l,c),so(c),this.stopTraining_)break}a.dispose()}if(await y.onEpochEnd(x,r),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return su(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),s=n[0],r=n[1],a=this.makeTrainFunction()(s.concat(r)),i=[];for(const o of a){const e=await o.data();i.push(e[0])}return _.B90(a),cu(n[0],e),cu(n[1],t),Dr(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let a=0;a<s.length;++a)n&&!s[a].trainable||t.push({name:s[a].originalName,tensor:r[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=_.sq6().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-_.sq6().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=_r(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>_r(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const s of t){if("string"!=typeof n[s])throw new Error("Serialization of non-string loss is not supported.");e[s]=_r(n[s])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[_r(zo(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>_r(zo(e))));{const e={};for(const t in this.metrics)e[t]=_r(zo(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=fo(Xo(e.optimizer_config));let n,s;if("string"==typeof e.loss)n=Fr(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Fr(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Fr(e.loss[t])}if(Array.isArray(e.metrics))s=e.metrics.map((e=>Fr(e)));else if(null!=e.metrics){s={};for(const t in e.metrics)s[t]=Fr(e.metrics[t])}this.compile({loss:n,metrics:s,optimizer:t})}async save(e,t){if("string"==typeof e){const t=_.io.getSaveHandlers(e);if(0===t.length)throw new Sr(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Sr(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Sr("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await _.io.encodeWeights(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Ko}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:r}=await _.io.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=_.io.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Uo(this.userDefinedMetadata,this.name,e),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=n.data,s.weightSpecs=n.specs,e.save(s)}setUserDefinedMetadata(e){Uo(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}mu.className="Model",_.m7h.registerClass(mu);class gu extends mu{}async function yu(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);const s=fo(Xo(n),t);if(null!=e.weightsManifest){const t=await _.io.loadWeights(e.weightsManifest,e.pathPrefix,s.weights.map((e=>e.originalName))),n={};for(const e of s.weights)n[e.originalName]=t[e.originalName];s.loadWeights(n),(0,_.B90)(t)}return s}async function bu(e,t){if(null==t&&(t={}),"string"==typeof e){const n=_.io.getLoadHandlers(e,t);if(0===n.length)n.push(_.io.browserHTTPRequest(e,t));else if(n.length>1)throw new Sr(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){null==n&&(n={});if(null==e.load)throw new Sr("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await e.load();let r=s.modelTopology;null!=r.model_config&&(r=r.model_config);const a=null==n.strict||n.strict,i=null!=s.weightData&&null!=s.weightSpecs&&a,o=fo(Xo(r),t,i),u=s.trainingConfig;null!=u&&o.loadTrainingConfig(u);null!=s.userDefinedMetadata&&o.setUserDefinedMetadata(s.userDefinedMetadata);if(null!=s.weightData){if(null==s.weightSpecs)throw new Sr("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=_.io.decodeWeights(e,t),s={},r=[];return t.forEach((e=>{"optimizer"===e.group?r.push({name:e.name,tensor:n[e.name]}):s[e.name]=n[e.name]})),{modelWeights:s,optimizerWeights:r}}(s.weightData,s.weightSpecs);o.loadWeights(e,a),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),(0,_.B90)(e),(0,_.B90)(t.map((e=>e.tensor)))}return o}(e,void 0,t)}gu.className="Functional",_.m7h.registerClass(gu);class xu extends mu{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Qr("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Sr(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof xu||e instanceof mu;let n;if(t){if(n=e,1!==n.outputs.length)throw new Sr("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Sr("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Sr("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=xi({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Sr(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Sr("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=yi(this.outputs[0])}this.inboundNodes=[],new fi({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:$r(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(ai(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new mu({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Ir("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Ir("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Ir("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Ir("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Sr("Legacy serialization format not supported yet.");r=t}else _.D5U.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),r=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof xu))throw new Nr(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const o of r){const e=fo(o,void 0,s);s&&e.setFastWeightInitDuringBuild(!0),i.add(e)}return i}set stopTraining(e){if(null==this.model)throw new Sr("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Sr("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function wu(e){return new mu(e)}function vu(e){return new xu(e)}function ku(e){return xi(e)}function Iu(e,t){ho.registerCallbackConstructor(e,t)}xu.className="Sequential",_.m7h.registerClass(xu);class Su extends _.m7h.Serializable{getConfig(){return{}}}class Nu extends Su{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Nr(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return _.pyx(e)}(e,t)}}Nu.className="elu",_.m7h.registerClass(Nu);class Tu extends Su{apply(e){return _.U8D(e)}}Tu.className="selu",_.m7h.registerClass(Tu);class Cu extends Su{apply(e){return _.UYe(e)}}Cu.className="relu",_.m7h.registerClass(Cu);class $u extends Su{apply(e){return(0,_.lub)((()=>_.LTh(6,_.UYe(e))))}}$u.className="relu6",_.m7h.registerClass($u);class Eu extends Su{apply(e){return e}}Eu.className="linear",_.m7h.registerClass(Eu);class Au extends Su{apply(e){return _.XD2(e)}}Au.className="sigmoid",_.m7h.registerClass(Au);class Du extends Su{apply(e){return function(e){return(0,_.lub)((()=>{const t=_.IHx(.5,_.dC7(.2,e));return _.iUl(t,0,1)}))}(e)}}Du.className="hardSigmoid",_.m7h.registerClass(Du);class Ru extends Su{apply(e){return _.Wvh(e)}}Ru.className="softplus",_.m7h.registerClass(Ru);class _u extends Su{apply(e){return function(e){return(0,_.lub)((()=>_.hiC(e,_.IHx(_.WnP(e),1))))}(e)}}_u.className="softsign",_.m7h.registerClass(_u);class Fu extends Su{apply(e){return _.AEp(e)}}Fu.className="tanh",_.m7h.registerClass(Fu);class Ou extends Su{apply(e,t=-1){return _.XAC(e,t)}}Ou.className="softmax",_.m7h.registerClass(Ou);class Mu extends Su{apply(e,t=-1){return _.CmS(e,t)}}Mu.className="logSoftmax",_.m7h.registerClass(Mu);class Bu extends Su{apply(e,t=1){return(0,_.lub)((()=>_.dC7(_.XD2(_.dC7(e,t)),e)))}}Bu.className="swish",_.m7h.registerClass(Bu);class zu extends Su{apply(e){return(0,_.lub)((()=>_.dC7(e,_.AEp(_.Wvh(e)))))}}function Lu(e){return e.getClassName()}function Uu(e,t={}){return zr(e,_.m7h.SerializationMap.getMap().classNameMap,t,"activation")}function Wu(e){if(null==e){const e={className:"linear",config:{}};return Uu(e)}if("string"==typeof e){const t={};return t.className=e,t.config={},Uu(t)}return e instanceof Su?e:Uu(e)}function Pu(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}zu.className="mish",_.m7h.registerClass(zu);class Vu extends _.m7h.Serializable{}class Gu extends Vu{constructor(e){super(),Pu(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return(0,_.lub)((()=>{let t=(0,_.lls)([1]);return this.hasL1&&(t=(0,_.IHx)(t,(0,_.Smz)(_.dC7(this.l1,(0,_.WnP)(e))))),this.hasL2&&(t=(0,_.IHx)(t,(0,_.Smz)(_.dC7(this.l2,Ea(e))))),_.XLQ(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Gu.className="L1L2",_.m7h.registerClass(Gu);const Hu={l1l2:"L1L2"};function ju(e){return Mr(e)}function Xu(e,t={}){return zr(e,_.m7h.SerializationMap.getMap().classNameMap,t,"regularizer")}function qu(e){if(null==e)return null;if("string"==typeof e){return Xu({className:e in Hu?Hu[e]:e,config:{}})}return e instanceof Vu?e:Xu(e)}class Ku extends gi{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=ri(e);let n=(0,_.UYe)(e);return null!=this.maxValue&&(n=(0,_.iUl)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Ku.className="ReLU",_.m7h.registerClass(Ku);class Qu extends gi{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=ri(e);return(0,_.hi7)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Qu.className="LeakyReLU",_.m7h.registerClass(Qu);class Yu extends gi{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=ti(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=qu(e.alphaRegularizer),this.alphaConstraint=Mi(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Sr(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=ai(e)).slice(1);if(null!=this.sharedAxes)for(const s of this.sharedAxes)t[s-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let s=1;s<e.length;++s)n[s]=e[s];this.inputSpec=[new hi({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=ri(e),(0,_.AL3)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:ei(this.alphaInitializer),alphaRegularizer:ju(this.alphaRegularizer),alphaConstraint:Fi(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Yu.className="PReLU",_.m7h.registerClass(Yu);class Ju extends gi{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Nr(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=ri(e);return(0,_.pyx)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Ju.className="ELU",_.m7h.registerClass(Ju);class Zu extends gi{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=ri(e);return(0,_.dC7)(n,(0,_.pju)((0,_.pjt)(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Zu.className="ThresholdedReLU",_.m7h.registerClass(Zu);class el extends gi{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Ou).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=ri(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function tl(e,t,n){if("number"==typeof e)return $r(e,t);if(e.length!==t)throw new Sr(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const a=e[r];if((s=a)!==parseInt(s.toString(),10))throw new Sr(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var s}function nl(e,t,n,s,r=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(r-1))+1,Math.floor((a+s-1)/s)}function sl(e,t,n,s){if(null==e)return null;if("valid"===s)e=e*t+fa([n-t,0]);else{if("same"!==s)throw new Sr(`Unsupport padding mode: ${s}.`);e*=t}return e}function rl(e,t){return(0,_.lub)((()=>(sa(t),"channelsFirst"===t?_.p4s(e,[0,2,3,1]):e)))}function al(e,t){return(0,_.lub)((()=>(sa(t),"channelsFirst"===t?_.p4s(e,[0,2,3,4,1]):e)))}function il(e,t,n,s=1,r="valid",a,i=1){return(0,_.lub)((()=>{if(null==a&&(a="channelsLast"),sa(a),3!==e.shape.length)throw new Sr(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Sr(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Sr(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=_.p4s(e,[0,2,1])),"causal"===r)throw new Nr("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=_.PAt(e,t,s,"same"===r?"same":"valid","NWC",i);return null!=n&&(o=Da(o,n)),o}))}function ol(e,t,n,s=[1,1],r="valid",a,i,o=null){return(0,_.lub)((()=>{if(null==a&&(a="channelsLast"),sa(a),3!==e.rank&&4!==e.rank)throw new Sr(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Sr(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=rl(e,a);if("causal"===r)throw new Nr("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=_.imm.conv2d({x:u,filter:t,strides:s,pad:"same"===r?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(u=_.p4s(u,[0,3,1,2])),u}))}function ul(e,t,n,s=[1,1,1],r="valid",a,i){return(0,_.lub)((()=>{if(null==a&&(a="channelsLast"),sa(a),4!==e.rank&&5!==e.rank)throw new Sr(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Sr(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=al(e,a);if("causal"===r)throw new Nr("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=_.pdZ(o,t,s,"same"===r?"same":"valid","NDHWC",i),null!=n&&(o=Da(o,n)),"channelsFirst"===a&&(o=_.p4s(o,[0,4,1,2,3])),o}))}el.className="Softmax",_.m7h.registerClass(el);class ll extends gi{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",ll.verifyArgs(t),this.rank=e,Gr(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Nr(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=tl(t.kernelSize,e,"kernelSize"),this.strides=tl(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,ra(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,sa(this.dataFormat),this.activation=Wu(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=ti(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Mi(t.biasConstraint),this.biasRegularizer=qu(t.biasRegularizer),this.activityRegularizer=qu(t.activityRegularizer),this.dilationRate=tl(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Sr(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Sr(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Sr(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Er("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Vr(e.kernelSize,"number",1,3))throw new Sr(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Lu(this.activation),useBias:this.useBias,biasInitializer:ei(this.biasInitializer),biasRegularizer:ju(this.biasRegularizer),activityRegularizer:ju(this.activityRegularizer),biasConstraint:Fi(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class cl extends ll{constructor(e,t){super(e,t),this.kernel=null,cl.verifyArgs(t),this.filters=t.filters,Gr(this.filters,"filters"),this.kernelInitializer=ti(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Mi(t.kernelConstraint),this.kernelRegularizer=qu(t.kernelRegularizer)}build(e){e=ai(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Sr(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return(0,_.lub)((()=>{let t;e=ri(e);const n=null==this.bias?null:this.bias.read(),s=jr(this.activation.getClassName());if(null!=s&&2===this.rank)t=ol(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(1===this.rank)t=il(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=ol(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Nr("convolutions greater than 3D are not implemented yet.");t=ul(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=ai(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){const e=nl(n[r],this.kernelSize[r],this.padding,this.strides[r],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[r]);t.push(e)}let s=[e[0]];return"channelsLast"===this.dataFormat?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){const e={filters:this.filters,kernelInitializer:ei(this.kernelInitializer),kernelRegularizer:ju(this.kernelRegularizer),kernelConstraint:Fi(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Sr(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class hl extends cl{constructor(e){super(2,e),hl.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Vr(e.kernelSize,"number",1,2))throw new Sr(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}hl.className="Conv2D",_.m7h.registerClass(hl);class pl extends cl{constructor(e){super(3,e),pl.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Sr(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}pl.className="Conv3D",_.m7h.registerClass(pl);class dl extends hl{constructor(e){if(super(e),this.inputSpec=[new hi({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Sr(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=ai(e)).length)throw new Sr("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Sr("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new hi({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return _.lub((()=>{let t=ri(e);if(4!==t.shape.length)throw new Sr(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,a;"channelsFirst"===this.dataFormat?(r=2,a=3):(r=1,a=2);const i=n[r],o=n[a],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],p=[s,sl(i,c,u,this.padding),sl(o,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=_.p4s(t,[0,2,3,1]));let d=_.bc(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=_.p4s(d,[0,3,1,2])),null!=this.bias&&(d=Da(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(e){const t=(e=ai(e)).slice();let n,s,r;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3):(n=3,s=1,r=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[s]=sl(t[s],o,a,this.padding),t[r]=sl(t[r],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}dl.className="Conv2DTranspose",_.m7h.registerClass(dl);class fl extends pl{constructor(e){if(super(e),this.inputSpec=[new hi({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Sr(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=ai(e)).length)throw new Sr("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Sr("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new hi({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return _.lub((()=>{let t=ri(e);if(5!==t.shape.length)throw new Sr(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,a,i;"channelsFirst"===this.dataFormat?(i=2,r=3,a=4):(i=1,r=2,a=3);const o=n[i],u=n[r],l=n[a],c=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],d=this.strides[0],f=this.strides[1],m=this.strides[2],g=[s,sl(o,d,c,this.padding),sl(u,f,h,this.padding),sl(l,m,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=_.p4s(t,[0,2,3,4,1]));let y=_.$QV(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=_.p4s(y,[0,4,1,2,3])),null!==this.bias&&(y=Da(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=ai(e)).slice();let n,s,r,a;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3,a=4):(n=4,s=1,r=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[s]=sl(t[s],l,i,this.padding),t[r]=sl(t[r],c,o,this.padding),t[a]=sl(t[a],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}fl.className="Conv3DTranspose",_.m7h.registerClass(fl);class ml extends cl{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Sr("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Sr("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Sr(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=ti(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=qu(t.depthwiseRegularizer),this.depthwiseConstraint=Mi(t.depthwiseConstraint),this.pointwiseInitializer=ti(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=qu(t.pointwiseRegularizer),this.pointwiseConstraint=Mi(t.pointwiseConstraint)}build(e){if((e=ai(e)).length<this.rank+2)throw new Sr(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Sr(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let i=0;i<this.rank;++i)r.push(1);r.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new hi({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return(0,_.lub)((()=>{let t;if(e=ri(e),1===this.rank)throw new Nr("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=_.p4s(e,[0,2,3,1])),t=_.U_I(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Da(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=_.p4s(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=ei(this.depthwiseInitializer),e.pointwiseInitializer=ei(this.pointwiseInitializer),e.depthwiseRegularizer=ju(this.depthwiseRegularizer),e.pointwiseRegularizer=ju(this.pointwiseRegularizer),e.depthwiseConstraint=Fi(this.depthwiseConstraint),e.pointwiseConstraint=Fi(this.pointwiseConstraint),e}}ml.className="SeparableConv";class gl extends ml{constructor(e){super(2,e)}}gl.className="SeparableConv2D",_.m7h.registerClass(gl);class yl extends cl{constructor(e){super(1,e),yl.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Vr(e.kernelSize,"number",1,1))throw new Sr(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}yl.className="Conv1D",_.m7h.registerClass(yl);class bl extends gi{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return(0,_.lub)((()=>{if(e=ri(e),"channelsLast"===this.dataFormat){const t=ka(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return ka(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=ka(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return ka(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}bl.className="Cropping2D",_.m7h.registerClass(bl);class xl extends gi{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,sa(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Pr(Jr,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return _.lub((()=>{let t=ri(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=_.p4s(t,[0,2,3,1]);const e=this.size[0]*n[2],s=this.size[1]*n[3],r="nearest"===this.interpolation?_.BHj.resizeNearestNeighbor(t,[e,s]):_.BHj.resizeBilinear(t,[e,s]);return _.p4s(r,[0,3,1,2])}{const e=this.size[0]*n[1],s=this.size[1]*n[2];return"nearest"===this.interpolation?_.BHj.resizeNearestNeighbor(t,[e,s]):_.BHj.resizeBilinear(t,[e,s])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}xl.className="UpSampling2D",_.m7h.registerClass(xl);class wl extends ll{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=ti(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Mi(e.depthwiseConstraint),this.depthwiseRegularizer=qu(e.depthwiseRegularizer)}build(e){if((e=ai(e)).length<4)throw new Sr(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Sr(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,_.lub)((()=>{let t=function(e,t,n=[1,1],s="valid",r,a){return(0,_.lub)((()=>{null==r&&(r="channelsLast"),sa(r);let i=rl(e,r);if(4!==e.rank)throw new Sr(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Sr(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=_.B10(i,t,n,"same"===s?"same":"valid","NHWC",a),"channelsFirst"===r&&(i=_.p4s(i,[0,3,1,2])),i}))}(e=ri(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Da(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=ai(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=nl(t,this.kernelSize[0],this.padding,this.strides[0]),a=nl(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=ei(this.depthwiseInitializer),e.depthwiseRegularizer=ju(this.depthwiseRegularizer),e.depthwiseConstraint=Fi(this.depthwiseRegularizer),e}}function vl(e,t,n,s){if(Array.isArray(e)){if(null!=t||null!=n)throw new Sr("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function kl(e,t,n,s=!1,r,a,i=!1,o=!1){return _.lub((()=>{const u=t.shape.length;if(u<3)throw new Sr(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(ma(2,u));if(t=_.p4s(t,l),null!=a)throw new Nr("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=_.pju(_.pju(r,"bool"),"float32")).rank===u-1&&(r=_.dt4(r,-1)),r=_.p4s(r,l)),s&&(t=_.GYS(t,0),null!=r&&(r=_.GYS(r,0)));const c=[];let h,p=n;const d=t.shape[0],f=_.HHK(t);let m,g;null!=r&&(m=_.HHK(r));for(let t=0;t<d;++t){const n=f[t],s=_.lub((()=>e(n,p)));if(null==r)h=s[0],p=s[1];else{const e=_.lub((()=>{const e=m[t],n=_.luU(_.JpU(e),e);return{output:_.IHx(_.dC7(s[0],e),_.dC7(p[0],n)),newStates:p.map(((t,r)=>_.IHx(_.dC7(s[1][r],e),_.dC7(t,n))))}}));h=e.output,p=e.newStates}o&&c.push(h)}if(o){const e=1;g=_.knu(c,e)}return[h,g,p]}))}wl.className="DepthwiseConv2D",_.m7h.registerClass(wl);class Il extends gi{constructor(e){let t;if(super(e),null==e.cell)throw new Sr("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Dl({cells:e.cell}):e.cell,null==t.stateSize)throw new Sr("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new hi({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return ma(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){ni(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let s;if(s=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const s of t)n.push([e[0],s]);return[s].concat(n)}return s}computeMask(e,t){return _.lub((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Nr("Constants support is not implemented in RNN yet.");ni(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new hi({shape:[t,null,...n]});const s=[e[0]].concat(e.slice(2));let r;if(this.cell.build(s),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!_.D5U.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new Sr(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new hi({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){(0,_.lub)((()=>{if(!this.stateful)throw new kr("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Sr("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>_.lls([n,e]))):this.states_=[_.lls([n,this.cell.stateSize])];else if(null==e)_.B90(this.states_),null!=this.keptStates&&(_.B90(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>_.lls([n,e]))):this.states_[0]=_.lls([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Sr(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):_.B90(this.states_);for(let t=0;t<this.states_.length;++t){const s=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,r];if(!_.D5U.arraysEqual(s.shape,a))throw new Sr(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${s.shape}`);this.states_[t]=s}}this.states_=this.states_.map((e=>_.CnY(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=vl(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new hi({shape:e.shape}));i=i.concat(this.stateSpec)}null!=s&&(t.constants=s,a=a.concat(s),this.numConstants=s.length);if(a[0]instanceof pi){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return(0,_.lub)((()=>{const n=null==t?null:t.mask,s=null==t?null:t.training;let r=null==t?null:t.initialState;e=ri(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new Sr(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:s},o=kl(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,s);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h}))}getInitialState(e){return(0,_.lub)((()=>{let t=_.lls(e.shape);return t=_.Smz(t,[1,2]),t=xa(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Na(t,[1,e]):t)):this.cell.stateSize>1?[Na(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Il.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const s=fo(t.cell,n);return new e(Object.assign(t,{cell:s}))}}Il.className="RNN",_.m7h.registerClass(Il);class Sl extends gi{}class Nl extends Sl{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Gr(this.units,"units"),this.activation=Wu(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ti(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ti(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ti(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=qu(e.kernelRegularizer),this.recurrentRegularizer=qu(e.recurrentRegularizer),this.biasRegularizer=qu(e.biasRegularizer),this.kernelConstraint=Mi(e.kernelConstraint),this.recurrentConstraint=Mi(e.recurrentConstraint),this.biasConstraint=Mi(e.biasConstraint),this.dropout=da([1,fa([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=da([1,fa([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ai(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,_.lub)((()=>{if(2!==e.length)throw new Sr(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const s=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rl({ones:()=>_.JpU(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rl({ones:()=>_.JpU(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;r=Ca(null!=a?_.dC7(e,a):e,this.kernel.read()),null!=this.bias&&(r=Da(r,this.bias.read())),null!=i&&(n=_.dC7(n,i));let o=_.IHx(r,Ca(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Lu(this.activation),useBias:this.useBias,kernelInitializer:ei(this.kernelInitializer),recurrentInitializer:ei(this.recurrentInitializer),biasInitializer:ei(this.biasInitializer),kernelRegularizer:ju(this.kernelRegularizer),recurrentRegularizer:ju(this.recurrentRegularizer),biasRegularizer:ju(this.biasRegularizer),activityRegularizer:ju(this.activityRegularizer),kernelConstraint:Fi(this.kernelConstraint),recurrentConstraint:Fi(this.recurrentConstraint),biasConstraint:Fi(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Nl.className="SimpleRNNCell",_.m7h.registerClass(Nl);class Tl extends Il{constructor(e){e.cell=new Nl(e),super(e)}call(e,t){return(0,_.lub)((()=>{null!=this.cell.dropoutMask&&(_.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(_.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return new e(t)}}Tl.className="SimpleRNN",_.m7h.registerClass(Tl);class Cl extends Sl{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Sr("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Gr(this.units,"units"),this.activation=Wu(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Wu(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ti(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ti(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ti(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=qu(e.kernelRegularizer),this.recurrentRegularizer=qu(e.recurrentRegularizer),this.biasRegularizer=qu(e.biasRegularizer),this.kernelConstraint=Mi(e.kernelConstraint),this.recurrentConstraint=Mi(e.recurrentConstraint),this.biasConstraint=Mi(e.biasConstraint),this.dropout=da([1,fa([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=da([1,fa([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=ai(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,_.lub)((()=>{if(2!==e.length)throw new Sr(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rl({ones:()=>_.JpU(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rl({ones:()=>_.JpU(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=_.dC7(e,r[0]));let l=Ca(e,this.kernel.read());this.useBias&&(l=Da(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=_.dC7(s,a[0]));const c=this.recurrentKernel.read(),[h,p]=_.Vl2(c,[2*this.units,this.units],c.rank-1),d=Ca(s,h),[f,m,g]=_.Vl2(l,3,l.rank-1),[y,b]=_.Vl2(d,2,d.rank-1);i=this.recurrentActivation.apply(_.IHx(f,y)),o=this.recurrentActivation.apply(_.IHx(m,b));const x=Ca(_.dC7(o,s),p);u=this.activation.apply(_.IHx(g,x));const w=_.IHx(_.dC7(i,s),_.dC7(_.IHx(1,_.W76(i)),u));return[w,w]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Lu(this.activation),recurrentActivation:Lu(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ei(this.kernelInitializer),recurrentInitializer:ei(this.recurrentInitializer),biasInitializer:ei(this.biasInitializer),kernelRegularizer:ju(this.kernelRegularizer),recurrentRegularizer:ju(this.recurrentRegularizer),biasRegularizer:ju(this.biasRegularizer),activityRegularizer:ju(this.activityRegularizer),kernelConstraint:Fi(this.kernelConstraint),recurrentConstraint:Fi(this.recurrentConstraint),biasConstraint:Fi(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}Cl.className="GRUCell",_.m7h.registerClass(Cl);class $l extends Il{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Cl(e),super(e)}call(e,t){return(0,_.lub)((()=>{null!=this.cell.dropoutMask&&(_.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(_.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}$l.className="GRU",_.m7h.registerClass($l);class El extends Sl{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Gr(this.units,"units"),this.activation=Wu(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Wu(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ti(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ti(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ti(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=qu(e.kernelRegularizer),this.recurrentRegularizer=qu(e.recurrentRegularizer),this.biasRegularizer=qu(e.biasRegularizer),this.kernelConstraint=Mi(e.kernelConstraint),this.recurrentConstraint=Mi(e.recurrentConstraint),this.biasConstraint=Mi(e.biasConstraint),this.dropout=da([1,fa([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=da([1,fa([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=ai(e))[e.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;s=new((t=class extends Ma{apply(t,s){const r=e.apply([n]),a=(new za).apply([n]),i=e.apply([2*n]);return Sa(Sa(r,a),i)}}).className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return(0,_.lub)((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new Sr(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rl({ones:()=>_.JpU(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rl({ones:()=>_.JpU(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=_.dC7(e,a[0]));let h=Ca(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=_.dC7(s,i[0])),h=_.IHx(h,Ca(s,this.recurrentKernel.read())),this.useBias&&(h=Da(h,this.bias.read()));const[p,d,f,m]=_.Vl2(h,4,h.rank-1);o=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(d),l=_.IHx(_.dC7(u,r),_.dC7(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=_.dC7(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Lu(this.activation),recurrentActivation:Lu(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ei(this.kernelInitializer),recurrentInitializer:ei(this.recurrentInitializer),biasInitializer:ei(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ju(this.kernelRegularizer),recurrentRegularizer:ju(this.recurrentRegularizer),biasRegularizer:ju(this.biasRegularizer),activityRegularizer:ju(this.activityRegularizer),kernelConstraint:Fi(this.kernelConstraint),recurrentConstraint:Fi(this.recurrentConstraint),biasConstraint:Fi(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}El.className="LSTMCell",_.m7h.registerClass(El);class Al extends Il{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new El(e),super(e)}call(e,t){return(0,_.lub)((()=>{null!=this.cell.dropoutMask&&(_.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(_.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Al.className="LSTM",_.m7h.registerClass(Al);class Dl extends Sl{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return(0,_.lub)((()=>{let n=e.slice(1);const s=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?s.push(n.splice(0,e.stateSize.length)):s.push(n.splice(0,1));s.reverse();const r=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=s[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),r.push(a.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;ni(e)&&(e=e[0]),this.cells.forEach(((n,s)=>{oa(`RNNCell_${s}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){const s=[];for(const r of t.cells)s.push(fo(r,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return li(e)}setWeights(e){const t=[];for(const n of this.cells){const s=n.weights.length,r=e.splice(s);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}ci(t)}}function Rl(e){const{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:a}=e,i=()=>null!=a?a(t(),n):Ra(t(),n),o=()=>_a(i,t,s);if(!r||r<=1)return _.CnY(o().clone());return Array(r).fill(void 0).map(o).map((e=>_.CnY(e.clone())))}Dl.className="StackedRNNCells",_.m7h.registerClass(Dl);var _l=function(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(e);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(e,s[r])&&(n[s[r]]=e[s[r]])}return n};class Fl extends Il{constructor(e){if(e.unroll)throw new Nr("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Nr("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new hi({ndim:5})]}call(e,t){return _.lub((()=>{if(null!=this.cell.dropoutMask&&(_.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(_.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Sr("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return _.lub((()=>{const{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)],a=_.lls(r);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){_.lub((()=>{if(!this.stateful)throw new kr("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(null==n[0])throw new Sr("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>_.lls(r))):this.states_=[_.lls(r)];else if(null==e)_.B90(this.states_),null!=this.keptStates&&(_.B90(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>_.lls(r))):this.states_[0]=_.lls(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Sr(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):_.B90(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],s=r;if(!_.D5U.arraysEqual(n.shape,s))throw new Sr(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>_.CnY(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=nl(u,s[0],r,a[0],i[0]),h=nl(l,s[1],r,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}Fl.className="ConvRNN2D";class Ol extends El{constructor(e){const{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Gr(this.filters,"filters"),this.kernelSize=tl(n,2,"kernelSize"),this.kernelSize.forEach((e=>Gr(e,"kernelSize"))),this.strides=tl(s||1,2,"strides"),this.strides.forEach((e=>Gr(e,"strides"))),this.padding=r||"valid",ra(this.padding),this.dataFormat=a||"channelsLast",sa(this.dataFormat),this.dilationRate=tl(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>Gr(e,"dilationRate")))}build(e){var t;e=ai(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Sr(`The channel dimension of the input should be defined. Found ${e[n]}`);const s=e[n],r=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;e=new((t=class extends Ma{apply(e,t){return Ia([n.apply([s]),_.iUs([s]),n.apply([2*s])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return _.lub((()=>{if(3!==e.length)throw new Sr(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,s=e[0],r=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rl({ones:()=>_.JpU(s),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?_.dC7(t[n],e):e;let u=o(s,i,0),l=o(s,i,1),c=o(s,i,2),h=o(s,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rl({ones:()=>_.JpU(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let d=o(r,p,0),f=o(r,p,1),m=o(r,p,2),g=o(r,p,3);const[y,b,x,w]=_.Vl2(this.kernel.read(),4,3),[v,k,I,S]=this.useBias?_.Vl2(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,v,this.padding),l=this.inputConv(l,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,w,S,this.padding);const[N,T,C,$]=_.Vl2(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,N),f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,$);const E=this.recurrentActivation.apply(_.IHx(u,d)),A=this.recurrentActivation.apply(_.IHx(l,f)),D=_.IHx(_.dC7(A,a),_.dC7(E,this.activation.apply(_.IHx(c,m)))),R=_.dC7(this.recurrentActivation.apply(_.IHx(h,g)),this.activation.apply(D));return[R,R,D]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=_l(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),s)}inputConv(e,t,n,s){const r=_.Tek(e,t,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Da(r,n,this.dataFormat):r}recurrentConv(e,t){return _.Tek(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Ol.className="ConvLSTM2DCell",_.m7h.registerClass(Ol);class Ml extends Fl{constructor(e){const t=new Ol(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}Ml.className="ConvLSTM2D",_.m7h.registerClass(Ml);class Bl extends gi{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let s=0;s<this.noiseShape.length;++s)n.push(null==this.noiseShape[s]?t[s]:this.noiseShape[s]);return n}call(e,t){return(0,_.lub)((()=>{this.invokeCallHook(e,t);const n=ri(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,s=this.getNoiseShape(n);return _a((()=>Ra(n,this.rate,s,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Bl.className="Dropout",_.m7h.registerClass(Bl);class zl extends Bl{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}zl.className="SpatialDropout1D",_.m7h.registerClass(zl);class Ll extends gi{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Gr(this.units,"units"),this.activation=Wu(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=ti(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=ti(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Mi(e.kernelConstraint),this.biasConstraint=Mi(e.biasConstraint),this.kernelRegularizer=qu(e.kernelRegularizer),this.biasRegularizer=qu(e.biasRegularizer),this.activityRegularizer=qu(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=ai(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=ai(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return(0,_.lub)((()=>{this.invokeCallHook(e,t);const n=ri(e),s=jr(this.activation.getClassName());let r;return null!=s?r=Ca(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=Ca(n,this.kernel.read()),null!=this.bias&&(r=Da(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:Lu(this.activation),useBias:this.useBias,kernelInitializer:ei(this.kernelInitializer),biasInitializer:ei(this.biasInitializer),kernelRegularizer:ju(this.kernelRegularizer),biasRegularizer:ju(this.biasRegularizer),activityRegularizer:ju(this.activityRegularizer),kernelConstraint:Fi(this.kernelConstraint),biasConstraint:Fi(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Ll.className="Dense",_.m7h.registerClass(Ll);class Ul extends gi{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=ai(e);for(const t of e.slice(1))if(null==t)throw new Sr(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],pa(e,1)]}call(e,t){return(0,_.lub)((()=>{this.invokeCallHook(e,t);let n=ri(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=(0,_.p4s)(n,e)}return function(e){if(e.rank<=1)throw new Sr(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],pa(e.shape,1)];return _.XLQ(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Ul.className="Flatten",_.m7h.registerClass(Ul);class Wl extends gi{constructor(e){super(e),this.supportsMasking=!0,this.activation=Wu(e.activation)}call(e,t){return(0,_.lub)((()=>{this.invokeCallHook(e,t);const n=ri(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Lu(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Wl.className="Activation",_.m7h.registerClass(Wl);class Pl extends gi{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return(0,_.lub)((()=>{return e=ri(e),t=e,n=this.n,(0,_.lub)((()=>{if(2!==t.shape.length)throw new Sr(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Na(xa(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Pl.className="RepeatVector",_.m7h.registerClass(Pl);class Vl extends gi{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",s=t.slice();let r=1,a=null;for(let o=0;o<s.length;++o){const e=s[o];if(this.isUnknown(e)){if(null!==a)throw new Sr("Can only specifiy one unknown dimension.");a=o}else r*=e}const i=pa(e);if(null!==a){if(0===r||i%r!=0)throw new Sr(n);s[a]=i/r}else if(i!==r)throw new Sr(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return(0,_.lub)((()=>{this.invokeCallHook(e,t);const n=ri(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return(0,_.XLQ)(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Vl.className="Reshape",_.m7h.registerClass(Vl);class Gl extends gi{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=ma(1,e.dims.length+1);if(!_.D5U.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new hi({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=ai(e)).slice();return this.dims.forEach(((n,s)=>{t[s+1]=e[n]})),t}call(e,t){return(0,_.p4s)(ri(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Gl.className="Permute",_.m7h.registerClass(Gl);class Hl extends gi{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=ri(e);return(0,_.YjB)((0,_.Quu)(n,this.maskValue),-1)}call(e,t){return(0,_.lub)((()=>{this.invokeCallHook(e,t);const n=ri(e),s=(0,_.YjB)((0,_.Quu)(n,this.maskValue),-1,!0);return(0,_.dC7)(n,(0,_.pju)(s,n.dtype))}))}}Hl.className="Masking",_.m7h.registerClass(Hl);class jl extends gi{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Rr(e.inputLength))}this.inputDim=e.inputDim,Gr(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Gr(this.outputDim,"outputDim"),this.embeddingsInitializer=ti(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=qu(e.embeddingsRegularizer),this.activityRegularizer=qu(e.activityRegularizer),this.embeddingsConstraint=Mi(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return(0,_.lub)((()=>this.maskZero?(e=ri(e),(0,_.Quu)(e,(0,_.P84)(e))):null))}computeOutputShape(e){if(e=ai(e),null==this.inputLength)return[...e,this.outputDim];const t=Rr(this.inputLength);if(t.length!==e.length-1)throw new Sr(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){const r=t[s],a=e[s+1];if(null!=r&&null!=a&&r!==a)throw new Sr(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==r&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return(0,_.lub)((()=>{this.invokeCallHook(e,t);let n=ri(e);"int32"!==n.dtype&&(n=ba(n,"int32"));const s=$a(this.embeddings.read(),(0,_.XLQ)(n,[n.size]));return(0,_.XLQ)(s,ai(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:ei(this.embeddingsInitializer),embeddingsRegularizer:ju(this.embeddingsRegularizer),activityRegularizer:ju(this.activityRegularizer),embeddingsConstraint:Fi(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}jl.className="Embedding",_.m7h.registerClass(jl);class Xl extends gi{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Nr}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){const r=e[e.length-t.length+s],a=t[s];if(null==r||null==a||r<0||a<0)n.push(null);else if(1===r)n.push(a);else if(1===a)n.push(r);else{if(r!==a)throw new Sr("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[ai(e)]),e.length<2)throw new Sr(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const r of e)null!=r&&null!==r[0]&&t.push(r[0]);if(t=Ur(t),t.length>1)throw new Sr(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const t=null==e[r]?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const s=e.map((e=>e.length));-1===e.indexOf(null)&&1===Ur(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return(0,_.lub)((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const s=fa(n);for(let n of e){const e=n.rank;for(let t=0;t<s-e;++t)n=xa(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const a of e){const e=a.rank;if(null==e){const e=a.shape,s=e[0],r=e.slice(1).concat([s]);let i=_.XLQ(a,[s].concat(pa(e.slice(1))));i=_.p4s(i,[1,0]),i=_.XLQ(i,r),t.push(i),n=!0}else if(e>1){const s=ma(1,e).concat([0]);t.push(_.p4s(a,s)),n=!0}else t.push(a)}let s=this.mergeFunction(t);const r=s.rank;if(n)if(null==r){const e=s.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));s=_.XLQ(_.p4s(_.XLQ(s,[-1,t]),[1,0]),n)}else if(r>1){const e=[r-1].concat(ma(0,r-1));s=_.p4s(s,e)}return s}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let s=1;s<e.length;++s){const n=null==e[s]?null:e[s].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const s of e)null!=s&&null!==s[0]&&n.push(s[0]);return n=Ur(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return _.lub((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Sr("`mask` should be an Array");if(!Array.isArray(e))throw new Sr("`inputs` should be an Array");if(t.length!==e.length)throw new Sr(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:_.dt4(e,0))))[0];for(let e=1;e<t.length-1;++e)n=_.HvI(n,t[e]);return n}))}}class ql extends Xl{constructor(e){super(e)}mergeFunction(e){return(0,_.lub)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=_.IHx(t,e[n]);return t}))}}ql.className="Add",_.m7h.registerClass(ql);class Kl extends Xl{constructor(e){super(e)}mergeFunction(e){return(0,_.lub)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=_.dC7(t,e[n]);return t}))}}Kl.className="Multiply",_.m7h.registerClass(Kl);class Ql extends Xl{constructor(e){super(e)}mergeFunction(e){return(0,_.lub)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=_.IHx(t,e[n]);return _.dC7(1/e.length,t)}))}}Ql.className="Average",_.m7h.registerClass(Ql);class Yl extends Xl{constructor(e){super(e)}mergeFunction(e){return(0,_.lub)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=_.gWQ(t,e[n]);return t}))}}Yl.className="Maximum",_.m7h.registerClass(Yl);class Jl extends Xl{constructor(e){super(e)}mergeFunction(e){return(0,_.lub)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=_.LTh(t,e[n]);return t}))}}Jl.className="Minimum",_.m7h.registerClass(Jl);class Zl extends Xl{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Sr("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const s of e)if(null!=s){t=!1;break}if(t)return;const n=[];for(let s=0;s<e.length;++s){const t=e[s].slice();t.splice(this.axis,1);let r=!1;for(const e of n)if(_.D5U.arraysEqual(e,t)){r=!0;break}r||n.push(t)}if(n.length>1)throw new Sr("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return(0,_.lub)((()=>Ia(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Sr("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const r of t.slice(1)){if(null==n[s]||null==r[s]){n[s]=null;break}n[s]+=r[s]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Sr("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Sr("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Sr(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return _.lub((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const s=[];for(let a=0;a<e.length;++a)null==t[a]?s.push(_.pju(_.JpU(e[a]),"bool")):t[a].rank<e[a].rank?s.push(_.dt4(t[a],-1)):s.push(t[a]);const r=_.zoF(s,this.axis);return _.$6P(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function ec(e,t){for(;e<0;)e+=t;return e}Zl.className="Concatenate",_.m7h.registerClass(Zl);class tc extends Xl{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){_.D5U.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Nr("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new Sr(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Sr(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],s=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>ec(t,e[n].shape.length))):[ec(this.axes,n.shape.length),ec(this.axes,s.shape.length)],this.normalize&&(n=mo(n,t[0]),s=mo(s,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Nr("batchDot is not implemented for tensors of 4D or higher rank yet");if(_.D5U.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),_.D5U.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Nr("batchDot is not implemented for complex64-type Tensors yet.");const s=e.shape.length,r=t.shape.length;null==n&&(n=[s-1,r-2]);const a=n;return _.lub((()=>{let n,i;if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=_.XLQ(t,t.shape.concat(e))}else if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=_.XLQ(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?_.Smz(_.dC7(e,t),a[0]):_.Smz(_.dC7(_.p4s(e,[1,0]),t),a[1]);else{const n=a[0]!==e.shape.length-1,s=a[1]===t.shape.length-1;i=_.OI3(e,t,n,s)}if(n>0){let e;e=s>r?s+r-3:s-1;const t=[];for(let s=e;s<e+n;++s)t.push(s);i=_.L9e(i,t)}return 1===i.shape.length&&(i=_.dt4(i,1)),i}))}(n,s,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[ec(this.axes,e.length),ec(this.axes,t.length)],n}computeOutputShape(e){_.D5U.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Nr("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}tc.className="Dot",_.m7h.registerClass(tc);class nc extends gi{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return(0,_.lub)((()=>{this.invokeCallHook(e,t);const n=ri(e);return _a((()=>(0,_.IHx)(Ta(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}nc.className="GaussianNoise",_.m7h.registerClass(nc);class sc extends gi{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,_.lub)((()=>{this.invokeCallHook(e,t);const n=ri(e);if(this.rate>0&&this.rate<1){return _a((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return(0,_.dC7)(n,Ta(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}sc.className="GaussianDropout",_.m7h.registerClass(sc);class rc extends gi{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||ri(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,_.lub)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),s=()=>{const t=ri(e),s=-1.7580993408473766;let r=(0,_.brS)((0,_.LGj)(n),this.rate);r=ba(r,"float32");const a=((1-this.rate)*(1+this.rate*s**2))**-.5,i=-a*s*this.rate,o=(0,_.IHx)((0,_.dC7)(t,r),(0,_.dC7)((0,_.IHx)(r,-1),s));return(0,_.IHx)((0,_.dC7)(o,a),i)};return _a(s,(()=>ri(e)),t.training||!1)}return e}))}}function ac(e,t,n,s,r,a=.001){let i;if(2===e.rank)i=_.Dxk(e,t,n,s,r,a);else if(3===e.rank)i=_.JY5(e,t,n,s,r,a);else{if(4!==e.rank)throw new Nr(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=_.p3b(e,t,n,s,r,a)}return i}function ic(e,t,n,s,r=.001){return _.D5U.arraysEqual(s.slice().sort(),ma(0,e.rank-1))?function(e,t,n,s,r=.001){return(0,_.lub)((()=>{const a=_.Gi7(e,s),i=a.mean,o=a.variance;return[ac(e,i,o,n,t,r),i,o]}))}(e,t,n,s,r):function(e,t,n,s,r=.001){return(0,_.lub)((()=>{const a=_.Gi7(e,s),i=a.mean,o=a.variance,u=[];for(const t of ma(0,e.rank))-1!==s.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=(0,_.XLQ)(i,u),c=(0,_.XLQ)(o,u),h=null==t?null:(0,_.XLQ)(t,u),p=null==n?null:(0,_.XLQ)(n,u);return[ac(e,l,c,p,h,r),i,o]}))}(e,t,n,s,r)}rc.className="AlphaDropout",_.m7h.registerClass(rc);class oc extends gi{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=ti(e.betaInitializer||"zeros"),this.gammaInitializer=ti(e.gammaInitializer||"ones"),this.movingMeanInitializer=ti(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=ti(e.movingVarianceInitializer||"ones"),this.betaConstraint=Mi(e.betaConstraint),this.gammaConstraint=Mi(e.gammaConstraint),this.betaRegularizer=qu(e.betaRegularizer),this.gammaRegularizer=qu(e.gammaRegularizer)}build(e){e=ai(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Sr(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new hi({ndim:e.length,axes:{[t]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return(0,_.lub)((()=>{const n=null!=t.training&&t.training,s=ri(e),r=s.shape,a=r.length,i=ma(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const u=$r(1,a);u[o]=r[o];const l=i.slice();l.sort();const c=!_.D5U.arraysEqual(l,ma(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=(0,_.XLQ)(this.movingMean.read(),u),t=(0,_.XLQ)(this.movingVariance.read(),u),n=this.center?(0,_.XLQ)(this.beta.read(),u):null,r=this.scale?(0,_.XLQ)(this.gamma.read(),u):null;return ac(s,e,t,n,r,this.epsilon)}return ac(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,d]=ic(s,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{_.lub((()=>{const s=1-n,r=e.read(),a=_.dC7(_.luU(r,t),s);e.write(_.luU(r,a))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,d,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ei(this.betaInitializer),gammaInitializer:ei(this.gammaInitializer),movingMeanInitializer:ei(this.movingMeanInitializer),movingVarianceInitializer:ei(this.movingVarianceInitializer),betaRegularizer:ju(this.betaRegularizer),gammaRegularizer:ju(this.gammaRegularizer),betaConstraint:Fi(this.betaConstraint),gammaConstraint:Fi(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}oc.className="BatchNormalization",_.m7h.registerClass(oc);class uc extends gi{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=ti(e.betaInitializer||"zeros"),this.gammaInitializer=ti(e.gammaInitializer||"ones"),this.betaRegularizer=qu(e.betaRegularizer),this.gammaRegularizer=qu(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=ai(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=t);for(const s of this.axis)if(s<0||s>=t)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==Ur(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,t){const n=ri(e),s=n.shape,r=s.length;return(0,_.lub)((()=>{let{mean:e,variance:t}=(0,_.Gi7)(n,this.axis,!0);const a=$r(1,r);for(const n of this.axis)a[n]=s[n];const i=e=>null!=e&&e.shape.length!==r?_.XLQ(e,a):e;let o=this.scale?i(this.gamma.read()):null,u=this.center?i(this.beta.read()):null;const l=[],c=[];for(let n=0;n<r;++n)-1!==this.axis.indexOf(n)?(l.push(s[n]),c.push(1)):(l.push(1),c.push(s[n]));return e=_.Gg6(e,l),t=_.Gg6(t,l),null!=o&&(o=_.Gg6(o,c)),null!=u&&(u=_.Gg6(u,c)),ac(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ei(this.betaInitializer),gammaInitializer:ei(this.gammaInitializer),betaRegularizer:ju(this.betaRegularizer),gammaRegularizer:ju(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}uc.className="LayerNormalization",_.m7h.registerClass(uc);class lc extends gi{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Sr(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Sr(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Sr(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new hi({ndim:4})]}computeOutputShape(e){let t,n;return e=ai(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return(0,_.lub)((()=>{return t=ri(e),n=this.padding,s=this.dataFormat,(0,_.lub)((()=>{if(4!==t.rank)throw new Sr(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Sr("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==s&&(s="channelsLast"),"channelsLast"!==s&&"channelsFirst"!==s)throw new Sr(`Unknown data format: ${s}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===s?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],_.vku(t,e)}));var t,n,s}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function cc(e,t,n,s,r,a){return(0,_.lub)((()=>{let i;sa(r),aa(a),ra(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),e=rl(e,r);const o="same"===s?"same":"valid";return i="max"===a?_._sB(e,t,n,o):_.wS1(e,t,n,o),"channelsFirst"===r&&(i=_.p4s(i,[0,3,1,2])),i}))}function hc(e,t,n,s,r,a){return(0,_.lub)((()=>{let i;sa(r),aa(a),ra(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),e=al(e,r);const o="same"===s?"same":"valid";return i="max"===a?_.YQQ(e,t,n,o):_.uR5(e,t,n,o),"channelsFirst"===r&&(i=_.p4s(i,[0,4,1,2,3])),i}))}lc.className="ZeroPadding2D",_.m7h.registerClass(lc);class pc extends gi{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Sr(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Gr(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Sr(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Gr(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,ra(this.padding),this.inputSpec=[new hi({ndim:3})]}computeOutputShape(e){const t=nl((e=ai(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return(0,_.lub)((()=>{this.invokeCallHook(e,t),e=xa(ri(e),2);const n=this.poolingFunction(ri(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return _.L9e(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class dc extends pc{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return sa(r),ra(s),cc(e,t,n,s,r,"max")}}dc.className="MaxPooling1D",_.m7h.registerClass(dc);class fc extends pc{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return sa(r),ra(s),cc(e,t,n,s,r,"avg")}}fc.className="AveragePooling1D",_.m7h.registerClass(fc);class mc extends gi{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Sr(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Gr(this.poolSize,"poolSize"),Gr(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,sa(this.dataFormat),ra(this.padding),this.inputSpec=[new hi({ndim:4})]}computeOutputShape(e){e=ai(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=nl(t,this.poolSize[0],this.padding,this.strides[0]),n=nl(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return(0,_.lub)((()=>(this.invokeCallHook(e,t),this.poolingFunction(ri(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class gc extends mc{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return sa(r),ra(s),cc(e,t,n,s,r,"max")}}gc.className="MaxPooling2D",_.m7h.registerClass(gc);class yc extends mc{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return sa(r),ra(s),cc(e,t,n,s,r,"avg")}}yc.className="AveragePooling2D",_.m7h.registerClass(yc);class bc extends gi{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Sr(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Gr(this.poolSize,"poolSize"),Gr(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,sa(this.dataFormat),ra(this.padding),this.inputSpec=[new hi({ndim:5})]}computeOutputShape(e){e=ai(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[4]:e[3];return t=nl(t,this.poolSize[0],this.padding,this.strides[0]),n=nl(n,this.poolSize[1],this.padding,this.strides[1]),s=nl(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return(0,_.lub)((()=>(this.invokeCallHook(e,t),this.poolingFunction(ri(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class xc extends bc{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return sa(r),ra(s),hc(e,t,n,s,r,"max")}}xc.className="MaxPooling3D",_.m7h.registerClass(xc);class wc extends bc{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return sa(r),ra(s),hc(e,t,n,s,r,"avg")}}wc.className="AveragePooling3D",_.m7h.registerClass(wc);class vc extends gi{constructor(e){super(e),this.inputSpec=[new hi({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Nr}}class kc extends vc{constructor(e){super(e||{})}call(e,t){return(0,_.lub)((()=>{const t=ri(e);return _.J69(t,1)}))}}kc.className="GlobalAveragePooling1D",_.m7h.registerClass(kc);class Ic extends vc{constructor(e){super(e||{})}call(e,t){return(0,_.lub)((()=>{const t=ri(e);return _.Fp7(t,1)}))}}Ic.className="GlobalMaxPooling1D",_.m7h.registerClass(Ic);class Sc extends gi{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,sa(this.dataFormat),this.inputSpec=[new hi({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Nr}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Nc extends Sc{call(e,t){return(0,_.lub)((()=>{const t=ri(e);return"channelsLast"===this.dataFormat?_.J69(t,[1,2]):_.J69(t,[2,3])}))}}Nc.className="GlobalAveragePooling2D",_.m7h.registerClass(Nc);class Tc extends Sc{call(e,t){return(0,_.lub)((()=>{const t=ri(e);return"channelsLast"===this.dataFormat?_.Fp7(t,[1,2]):_.Fp7(t,[2,3])}))}}Tc.className="GlobalMaxPooling2D",_.m7h.registerClass(Tc);class Cc extends gi{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const s=fo(t.layer,n);delete t.layer;const r={layer:s};return Object.assign(r,t),new e(r)}}class $c extends Cc{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=ai(e)).length<3)throw new Sr(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=ai(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return(0,_.lub)((()=>kl(((e,n)=>[ri(this.layer.call(e,t)),[]]),e=ri(e),[],!1,null,null,!1,!0)[1]))}}$c.className="TimeDistributed",_.m7h.registerClass($c);class Ec extends Cc{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=fo(n),t.goBackwards=!0!==t.goBackwards;const s={};var r;if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=fo(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,Pr(ta,"BidirectionalMergeMode",r),e.weights)throw new Nr("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,s,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(s=r.slice(1),t=r[0]):t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[t].concat(s).concat(s.slice()):Dr(n)}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=vl(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==s)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Sr("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const s=n.map((e=>new hi({shape:e.shape})));this.forwardLayer.stateSpec=s.slice(0,e/2),this.backwardLayer.stateSpec=s.slice(e/2),i.push(...s)}if(null!=s)throw new Nr("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof pi;for(const u of a)if(u instanceof pi!==o)throw new Sr("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return(0,_.lub)((()=>{const n=t.initialState;let s,r,a,i;if(null==n)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=_.GYS(r,1)),"concat"===this.mergeMode?i=Ia([s,r]):"sum"===this.mergeMode?i=_.IHx(s,r):"ave"===this.mergeMode?i=_.dC7(.5,_.IHx(s,r)):"mul"===this.mergeMode?i=_.dC7(s,r):null==this.mergeMode&&(i=[s,r]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){oa(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),oa(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=fo(t.layer);if(delete t.layer,null!=t.numConstants)throw new Nr("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=t;return s.layer=n,new e(s)}}Ec.className="Bidirectional",_.m7h.registerClass(Ec);class Ac extends gi{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,_.lub)((()=>("float32"!==(e=ri(e)).dtype&&(e=ba(e,"float32")),(0,_.IHx)((0,_.dC7)(e,this.scale),this.offset))))}}Ac.className="Rescaling",_.m7h.registerClass(Ac);const{resizeBilinear:Dc,cropAndResize:Rc}=_.BHj;class _c extends gi{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,s,r,a,i,o){return(0,_.lub)((()=>{let u,l=!1;const c=[t/a,n/i,(s+t)/a,(r+n)/i],h=[];3===e.rank?(l=!0,u=(0,_.knu)([e])):u=e;for(let e=0;e<u.shape[0];e++)h.push(c);const p=(0,_.XeE)(h,[h.length,4]),d=(0,_.w6H)(0,h.length,1,"int32"),f=Rc(u,p,d,[s,r],"nearest");return ba(l?ri((0,_.HHK)(f)):f,o)}))}upsize(e,t,n,s){return(0,_.lub)((()=>ba(Dc(e,[t,n]),s)))}call(e,t){return(0,_.lub)((()=>{const t=ri(e),n=t.dtype,s=t.shape,r=s[s.length-3],a=s[s.length-2];let i=0;r!==this.height&&(i=Math.floor((r-this.height)/2));let o=0;return a!==this.width&&(o=Math.floor((a-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,r,a,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=ai(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}_c.className="CenterCrop",_.m7h.registerClass(_c);class Fc extends gi{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=ai(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return(0,_.lub)((()=>{let n;if("int32"!==(e=ri(e)).dtype&&(e=ba(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new Sr(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=ri(t.countWeights)}const s=(0,_.Fp7)(e),r=(0,_.VV$)(e),a=(0,_.pjt)(this.numTokens,s).bufferSync().get(0),i=(0,_.brS)(r,0).bufferSync().get(0);if(!a||!i)throw new Sr(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,s){let r=ri(e);if("int32"!==r.dtype&&(r=ba(r,"int32")),"int"===t)return r;const a=r.shape;if(0===r.rank&&(r=(0,_.dt4)(r,-1)),"oneHot"===t&&1!==r.shape[r.shape.length-1]&&(r=(0,_.dt4)(r,-1)),r.rank>2)throw new Sr(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${a} which would result in output rank ${r.rank}.`);const i=["multiHot","oneHot"].includes(t),o=r;let u;if(u=void 0!==s&&"count"===t?(0,_.ppE)(o,s,n,i):(0,_.ppE)(o,[],n,i),"tfIdf"!==t)return u;if(s)return(0,_.dC7)(u,s);throw new Sr("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}Fc.className="CategoryEncoding",_.m7h.registerClass(Fc);const Oc=new Set(["bilinear","nearest"]);class Mc extends gi{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!Oc.has(e.interpolation))throw new Sr(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=ai(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,_.lub)((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return _.BHj.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return _.BHj.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...Oc]} are supported`)}))}}Mc.className="Resizing",_.m7h.registerClass(Mc);class Bc{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}Bc.className="RandomSeed";class zc extends gi{constructor(e){super(e),this.randomGenerator=new Bc(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}zc.className="BaseRandomLayer";const Lc=new Set(["bilinear","nearest"]);class Uc extends zc{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new Sr(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new Sr(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new Sr(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!Lc.has(n))throw new Sr(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=ai(e))[2];return[this.imgHeight,-1,t]}call(e,t){return(0,_.lub)((()=>{const t=ri(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=(0,_.LGj)([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let s=this.widthFactor.dataSync()[0]*n;s=Math.round(s);const r=[this.imgHeight,s];switch(this.interpolation){case"bilinear":return _.BHj.resizeBilinear(e,r);case"nearest":return _.BHj.resizeNearestNeighbor(e,r);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...Lc]} are supported`)}}))}}function Wc(e){return new bi(e)}function Pc(e){return new Ju(e)}function Vc(e){return new Ku(e)}function Gc(e){return new Qu(e)}function Hc(e){return new Yu(e)}function jc(e){return new el(e)}function Xc(e){return new Zu(e)}function qc(e){return new yl(e)}function Kc(e){return new hl(e)}function Qc(e){return new dl(e)}function Yc(e){return new pl(e)}function Jc(e){return new fl(e)}function Zc(e){return new gl(e)}function eh(e){return new bl(e)}function th(e){return new xl(e)}function nh(e){return new wl(e)}function sh(e){return new Wl(e)}function rh(e){return new Ll(e)}function ah(e){return new Bl(e)}function ih(e){return new zl(e)}function oh(e){return new Ul(e)}function uh(e){return new Pl(e)}function lh(e){return new Vl(e)}function ch(e){return new Gl(e)}function hh(e){return new jl(e)}function ph(e){return new ql(e)}function dh(e){return new Ql(e)}function fh(e){return new Zl(e)}function mh(e){return new Yl(e)}function gh(e){return new Jl(e)}function yh(e){return new Kl(e)}function bh(e){return new tc(e)}function xh(e){return new oc(e)}function wh(e){return new uc(e)}function vh(e){return new lc(e)}function kh(e){return new fc(e)}function Ih(e){return kh(e)}function Sh(e){return kh(e)}function Nh(e){return new yc(e)}function Th(e){return Nh(e)}function Ch(e){return Nh(e)}function $h(e){return new wc(e)}function Eh(e){return $h(e)}function Ah(e){return $h(e)}function Dh(e){return new kc(e)}function Rh(e){return new Nc(e)}function _h(e){return new Ic(e)}function Fh(e){return new Tc(e)}function Oh(e){return new dc(e)}function Mh(e){return new gc(e)}function Bh(e){return new xc(e)}function zh(e){return new $l(e)}function Lh(e){return new Cl(e)}function Uh(e){return new Al(e)}function Wh(e){return new El(e)}function Ph(e){return new Tl(e)}function Vh(e){return new Nl(e)}function Gh(e){return new Ml(e)}function Hh(e){return new Ol(e)}function jh(e){return new Il(e)}function Xh(e){return new Dl(e)}function qh(e){return new Ec(e)}function Kh(e){return new $c(e)}Uc.className="RandomWidth",_.m7h.registerClass(Uc);const Qh=_h,Yh=Fh,Jh=Oh,Zh=Mh;function ep(e){return new nc(e)}function tp(e){return new sc(e)}function np(e){return new rc(e)}function sp(e){return new Hl(e)}function rp(e){return new Ac(e)}function ap(e){return new _c(e)}function ip(e){return new Mc(e)}function op(e){return new Fc(e)}function up(e){return new Uc(e)}function lp(e,t){return Co(e,t)}function cp(e,t){return Ro(e,t)}function hp(e,t){return _o(e,t)}function pp(e,t){return $o(e,t)}function dp(e,t){return Fo(e,t)}function fp(e,t){return Ao(e,t)}function mp(e,t){return Do(e,t)}function gp(e,t){return So(e,t)}function yp(e,t){return yo(e,t)}function bp(e,t){return bo(e,t)}function xp(e,t){return bo(e,t)}function wp(e,t){return bo(e,t)}function vp(e,t){return go(e,t)}function kp(e,t){return go(e,t)}function Ip(e,t){return go(e,t)}function Sp(e){return new Gu(e)}function Np(e){return Pu(t=e),new Gu({l1:null!=t?t.l1:null,l2:0});var t}function Tp(e){return Pu(t=e),new Gu({l2:null!=t?t.l2:null,l1:0});var t}class Cp extends ao{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof mu))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function $p(e,t){return e<t}function Ep(e,t){return e>t}class Ap extends Cp{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new Nr("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=$p:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=Ep:this.monitorFunc=$p,this.monitorFunc===$p&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===$p?1/0:-1/0}async onEpochEnd(e,t){await no(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const Dp={earlyStopping:function(e){return new Ap(e)}};var Rp,_p;(0,_.OBj)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(Rp||(Rp={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(_p||(_p={}));const Fp={};function Op(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};Fp[e]=n}function Mp(e){return Fp[e]}function Bp(e){delete Fp[e]}function zp(e,t,n,s,r){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd,o=e<0?t.inputNames.length+e:e;if("tensor"===a.type)return Lp(t.inputNames[o],n,s,r);if("tensors"===a.type){const a=t.inputs.slice(e,i);return t.inputNames.slice(e,i).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=a[t])||void 0===n?void 0:n.op)})).map((e=>Lp(e,n,s,r)))}const u=Lp(t.inputNames[o],n,s,r),l=u.dataSync();return"number"===a.type?l[0]:_.D5U.toNestedArray(u.shape,l)}const i=t.attrParams[e];return i&&i.value}function Lp(e,t,n,s){const[r,a]=Vp(e,n);if(null!=s){const e=s.getHashTableHandleByName(r);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[Pp(r,e)]));return void 0!==i?t[Pp(r,i)][a]:void 0}function Up(e,t,n){return t[Pp(e,n.currentContextId)]}function Wp(e,t){const[n,s,r]=Vp(e,t);return[Pp(n,t&&t.currentContextId),s,r]}function Pp(e,t){return t?`${e}-${t}`:e}function Vp(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const s=e.split(":");let r;if(1===s.length)r=[e,0,void 0];else{const e=s[0],t=3===s.length?s[1]:void 0;r=[e,Number(s[s.length-1]),t]}return n&&t.parseNodeNameCache.set(e,r),r}function Gp(e,t,n){let s=zp("pad",e,t,n);if("explicit"===s){s=zp("explicitPaddings",e,t,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=s[2*e],r[e][1]=s[2*e+1];return r}return s}function Hp(e){return e.kept?e:(0,_.d9v)(e)}const jp=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Xp=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],qp=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],Kp=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Qp=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Yp=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Jp=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],Zp=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],ed=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],td=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],nd=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],sd=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],rd=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],ad=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],id=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],od=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],ud=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],ld=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],cd=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class hd{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[l,c,h,p,d,f,m,g,y,b,x,w,v,k,I,S,N,T,C].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,s=[],r=[],a=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?s.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let o=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[s,,r]=Wp(e),a=i[s];if(null!=a.outputs){const e=a.outputs.indexOf(r);if(-1!==e){const r=`${s}:${e}`;t.inputNames[n]=r}}t.inputs.push(a),a.children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=i[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=Wp(e),n=i[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=Wp(e),n=i[t];n&&(n.signatureKey=l[e],o.push(n))})):o=s;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:i,inputs:o,outputs:u,weights:r,placeholders:s,signature:t,functions:p};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=Mp(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const s=n.type;let r;switch(n.type){case"string":r=dd(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=dd(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=Id(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Id(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=md(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=md(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=kd(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=kd(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=fd(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=fd(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=Nd(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Nd(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=vd(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=vd(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=Sd(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Sd(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=bd(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=bd(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=xd(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=xd(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=yd(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=yd(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:r,type:s},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let s={};null!=t&&(s=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const r=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=Wp(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:gd(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),s[t]=n}));Object.keys(s).forEach((e=>{const t=s[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=Wp(e),i=s[r];if(null!=i.outputs){const e=i.outputs.indexOf(a);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=Wp(i[e.name]),r=s[t];null!=r&&(r.defaultOutput=n,a.push(r))}));const o=this.mapArgsToSignature(e);return{nodes:s,inputs:r,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function pd(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,_.OBj)().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function dd(e,t,n,s=!1){const r=e[t];return null!=r?pd(r.s,s):n}function fd(e,t,n){const s=e[t];return s?s.b:n}function md(e,t,n){const s=e[t]||{},r=null!=s.i?s.i:null!=s.f?s.f:n;return"number"==typeof r?r:parseInt(r,10)}function gd(e){switch("string"==typeof e&&(e=Rp[e]),e){case Rp.DT_FLOAT:case Rp.DT_HALF:return"float32";case Rp.DT_INT32:case Rp.DT_INT64:case Rp.DT_INT8:case Rp.DT_UINT8:return"int32";case Rp.DT_BOOL:return"bool";case Rp.DT_DOUBLE:return"float32";case Rp.DT_STRING:return"string";default:return null}}function yd(e,t,n){const s=e[t];return s&&s.func?s.func.name:n}function bd(e,t,n){const s=e[t];return s&&s.type?gd(s.type):n}function xd(e,t,n){const s=e[t];return s&&s.list&&s.list.type?s.list.type.map((e=>gd(e))):n}function wd(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function vd(e,t,n){const s=e[t];return s&&s.shape?wd(s.shape):n}function kd(e,t,n){const s=e[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function Id(e,t,n,s=!1){const r=e[t];return r&&r.list&&r.list.s?r.list.s.map((e=>pd(e,s))):n}function Sd(e,t,n){const s=e[t];return s&&s.list&&s.list.shape?s.list.shape.map((e=>wd(e))):n}function Nd(e,t,n){const s=e[t];return s&&s.list&&s.list.b?s.list.b:n}class Td{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return Lp(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return Lp(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return md(this.node.rawAttrs,e,t);if(null!=n.s)return dd(this.node.rawAttrs,e,t);if(null!=n.b)return fd(this.node.rawAttrs,e,t);if(null!=n.shape)return vd(this.node.rawAttrs,e,t);if(null!=n.type)return bd(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return kd(this.node.rawAttrs,e,t);if(null!=n.list.s)return Id(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Sd(this.node.rawAttrs,e,t);if(null!=n.list.b)return Nd(this.node.rawAttrs,e,t);if(null!=n.list.type)return xd(this.node.rawAttrs,e,t)}return t}}var Cd=n(97049);function $d(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){_.D5U.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let s=0;s<e.length;s++){const r=e[s],a=t[s];_.D5U.assert(r<0||a<0||r===a,(()=>n+` Shapes ${e} and ${t} must match`))}}}function Ed(e){return"number"!=typeof e&&!e.some((e=>e<0))}function Ad(e,t,n){let s=Dd(e,n);const r=!Ed(s);if(r&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&t.forEach((e=>{s=Dd(e.shape,s)})),!Ed(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function Dd(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let s=0;s<e.length;++s){const r=e[s],a=t[s];if(r>=0&&a>=0&&r!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[s]=r>=0?r:a}return n}class Rd{constructor(e,t,n,s,r,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=s,this.identicalElementShapes=r,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=(0,_.iD$)(0),(0,_.CnY)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),$d(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,(0,_.CnY)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,_.XeE)([],[0].concat(this.elementShape));const n=this.readMany(e);return $d(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,_.knu)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,_.XeE)([],[0].concat(this.elementShape));const t=[];for(let s=0;s<this.size();s++)t.push(s);const n=this.readMany(t);return $d(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,_.zoF)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,(0,_.HHK)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const s=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const r=0===n?0:t.size/n,a=[];(0,_.lub)((()=>{t=(0,_.XLQ)(t,[1,n,r]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:s[n-1],0],o=[1,e[n],r];a[n]=(0,_.XLQ)((0,_.tPi)(t,i,o),this.elementShape)}return a}));const i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,a)}}class _d{get id(){return this.idTensor.id}constructor(e,t,n,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);$d(t,e.shape,"TensorList shape mismatch: "),(0,_.CnY)(e)})),this.idTensor=(0,_.iD$)(0),this.maxNumElements=s,(0,_.CnY)(this.idTensor)}copy(){return new _d([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);$d(e,this.elementShape,"TensorList shape mismatch: ");const s=Ad(this.elementShape,this.tensors,e);return(0,_.lub)((()=>{const e=this.tensors.map((e=>(0,_.XLQ)(e,s)));return(0,_.knu)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=Ad(this.elementShape,this.tensors,e),s=this.tensors.pop();return s.kept=!1,$d(s.shape,e,"TensorList shape mismatch: "),(0,_.XLQ)(s,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if($d(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,_.CnY)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new _d([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);$d(this.tensors[e].shape,t,"TensorList shape mismatch: ");const s=Ad(this.elementShape,this.tensors,t);return(0,_.XLQ)(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);$d(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,_.CnY)(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);$d(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const s=Ad(this.elementShape,this.tensors,n);return 0===e.length?(0,_.XeE)([],[0].concat(s)):(0,_.lub)((()=>{const t=e.map((e=>(0,_.XLQ)(this.tensors[e],s)));return(0,_.knu)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);$d(this.elementShape,t,"TensorList shape mismatch: ");const n=Ad(this.elementShape,this.tensors,t);return 0===this.size()?(0,_.XeE)([],[0].concat(n)):(0,_.lub)((()=>{const e=this.tensors.map((e=>(0,_.XLQ)(e,n)));return(0,_.zoF)(e,0)}))}}const Fd=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const s=zp("thenBranch",e,t,n),r=zp("elseBranch",e,t,n),a=zp("cond",e,t,n),i=zp("args",e,t,n);return(await a.data())[0]?n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const s=zp("body",e,t,n),r=zp("cond",e,t,n),a=zp("args",e,t,n),i=await n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map((e=>e.id));let u=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let l=a;for(;u[0];){const e=l;l=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await a[0].data(),a.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[Hp(zp("pred",e,t,n))];case"Switch":{const s=zp("pred",e,t,n);let r=zp("data",e,t,n);return r.kept||(r=Hp(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=e.inputNames.find((e=>void 0!==Lp(e,t,n)));if(s){return[Hp(Lp(s,t,n))]}return}case"Enter":{const s=zp("frameName",e,t,n),r=zp("tensor",e,t,n);return n.enterFrame(s),[Hp(r)]}case"Exit":{const s=zp("tensor",e,t,n);return n.exitFrame(),[Hp(s)]}case"NextIteration":{const s=zp("tensor",e,t,n);return n.nextIteration(),[Hp(s)]}case"TensorArrayV3":{const s=zp("size",e,t,n),r=zp("dtype",e,t,n),a=zp("elementShape",e,t,n),i=zp("dynamicSize",e,t,n),o=zp("clearAfterRead",e,t,n),u=zp("identicalElementShapes",e,t,n),l=zp("name",e,t,n),c=new Rd(l,r,s,a,u,i,o);return n.addTensorArray(c),[c.idTensor,(0,_.iD$)(1)]}case"TensorArrayWriteV3":{const s=zp("tensorArrayId",e,t,n),r=zp("index",e,t,n),a=zp("tensor",e,t,n),i=n.getTensorArray(s.id);return i.write(r,a),[i.idTensor]}case"TensorArrayReadV3":{const s=zp("tensorArrayId",e,t,n),r=zp("index",e,t,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=zp("tensorArrayId",e,t,n),r=zp("indices",e,t,n),a=zp("dtype",e,t,n);return[n.getTensorArray(s.id).gather(r,a)]}case"TensorArrayScatterV3":{const s=zp("tensorArrayId",e,t,n),r=zp("indices",e,t,n),a=zp("tensor",e,t,n),i=n.getTensorArray(s.id);return i.scatter(r,a),[i.idTensor]}case"TensorArrayConcatV3":{const s=zp("tensorArrayId",e,t,n),r=n.getTensorArray(s.id),a=zp("dtype",e,t,n);return[r.concat(a)]}case"TensorArraySplitV3":{const s=zp("tensorArrayId",e,t,n),r=zp("tensor",e,t,n),a=zp("lengths",e,t,n),i=n.getTensorArray(s.id);return i.split(a,r),[i.idTensor]}case"TensorArraySizeV3":{const s=zp("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return[(0,_.iD$)(r.size(),"int32")]}case"TensorArrayCloseV3":{const s=zp("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=zp("tensorListId",e,t,n),r=zp("index",e,t,n),a=zp("tensor",e,t,n),i=n.getTensorList(s.id);return i.setItem(r,a),[i.idTensor]}case"TensorListGetItem":{const s=zp("tensorListId",e,t,n),r=zp("index",e,t,n),a=zp("elementShape",e,t,n),i=zp("elementDType",e,t,n);return[n.getTensorList(s.id).getItem(r,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=zp("indices",e,t,n),r=function(e,t,n,s){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const r=Math.max(...t);if(null!=s&&-1!==s&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const a=new _d([],n,e.dtype,s),i=(0,_.HHK)(e,0);return t.forEach(((e,t)=>{a.setItem(e,i[t])})),a}(zp("tensor",e,t,n),s,zp("elementShape",e,t,n),zp("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=zp("elementShape",e,t,n),r=zp("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=zp(a,e,t,n),o=function(e,t,n,s){return new _d([],e,t,s)}(s,r,0,"TensorListReserve"===e.op?-1:i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const s=zp("tensorListId",e,t,n),r=zp("indices",e,t,n),a=zp("elementShape",e,t,n),i=zp("elementDType",e,t,n);return[n.getTensorList(s.id).gather(r,i,a)]}case"TensorListStack":{const s=zp("tensorListId",e,t,n),r=zp("elementShape",e,t,n),a=zp("elementDType",e,t,n),i=zp("numElements",e,t,n);return[n.getTensorList(s.id).stack(r,a,i)]}case"TensorListFromTensor":{const s=function(e,t,n){const s=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);$d(e.shape.slice(1),t,"TensorList shape mismatch: ");const r=(0,_.HHK)(e);return new _d(r,t,s)}(zp("tensor",e,t,n),zp("elementShape",e,t,n),zp("elementDType",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=zp("tensorListId",e,t,n),r=n.getTensorList(s.id),a=zp("dtype",e,t,n),i=zp("elementShape",e,t,n);return[r.concat(a,i)]}case"TensorListPushBack":{const s=zp("tensorListId",e,t,n),r=zp("tensor",e,t,n),a=n.getTensorList(s.id);return a.pushBack(r),[a.idTensor]}case"TensorListPopBack":{const s=zp("tensorListId",e,t,n),r=zp("elementShape",e,t,n),a=zp("elementDType",e,t,n);return[n.getTensorList(s.id).popBack(r,a)]}case"TensorListSplit":{const s=zp("tensor",e,t,n),r=zp("elementShape",e,t,n),a=function(e,t,n){let s=0;const r=t.map((e=>(s+=e,s)));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${s}, and tensor's shape is: ${e.shape}`);const a=Dd(e.shape.slice(1),n),i=0===s?0:e.size/s,o=(0,_.lub)((()=>{const n=[];e=(0,_.XLQ)(e,[1,s,i]);for(let s=0;s<t.length;++s){const o=[0,0===s?0:r[s-1],0],u=[1,t[s],i];n[s]=(0,_.XLQ)((0,_.tPi)(e,o,u),a)}return e.dispose(),n})),u=new _d([],n,e.dtype,t.length);for(let l=0;l<o.length;l++)u.setItem(l,o[l]);return u}(s,zp("lengths",e,t,n),r);return n.addTensorList(a),[a.idTensor]}case"TensorListLength":{const s=zp("tensorListId",e,t,n),r=n.getTensorList(s.id);return[(0,_.iD$)(r.size(),"int32")]}case"TensorListResize":{const s=zp("tensorListId",e,t,n),r=zp("size",e,t,n),a=n.getTensorList(s.id).resize(r);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Od(e,t,n){const[s,r]=zp("fusedOps",e,t,n),a="biasadd"===s,i=!a,o="prelu"===r,u="fusedbatchnorm"===s,l=zp("numArgs",e,t,n);if(a){if(o&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&a&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=zp("strides",e,t,n),h=Gp(e,t,n),p=zp("dataFormat",e,t,n).toUpperCase(),d=zp("dilations",e,t,n);let[f,m]=zp("args",e,t,n);i&&(m=f,f=void 0);return{stride:c,pad:h,dataFormat:p,dilations:d,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:zp("leakyreluAlpha",e,t,n)}}function Md(e,t,n){return{boxes:zp("boxes",e,t,n),scores:zp("scores",e,t,n),maxOutputSize:zp("maxOutputSize",e,t,n),iouThreshold:zp("iouThreshold",e,t,n),scoreThreshold:zp("scoreThreshold",e,t,n),softNmsSigma:zp("softNmsSigma",e,t,n)}}class Bd{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,_.iD$)(0),this.tensorMap=new Map,(0,_.CnY)(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return W.i(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,_.lub)((()=>{const e=(0,_.HHK)(t),s=n.length,r=e.length;_.D5U.assert(s===r,(()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${r} elements.`));for(let t=0;t<s;t++){const s=n[t],r=e[t];(0,_.CnY)(r),this.tensorMap.set(s,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,_.lub)((()=>{const e=[];for(let s=0;s<n.length;s++){const r=n[s],a=this.findWithDefault(r,t);e.push(a)}return(0,_.knu)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function zd(e,t,n,s,r=_.lub){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return r((()=>((e,t,n,s=$)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(zp("a",e,t,n),zp("b",e,t,n))];case"AddN":return[s.addN(zp("tensors",e,t,n))];case"FloorMod":case"Mod":return[s.mod(zp("a",e,t,n),zp("b",e,t,n))];case"Mul":return[s.mul(zp("a",e,t,n),zp("b",e,t,n))];case"RealDiv":case"Div":return[s.div(zp("a",e,t,n),zp("b",e,t,n))];case"DivNoNan":return[s.divNoNan(zp("a",e,t,n),zp("b",e,t,n))];case"FloorDiv":return[s.floorDiv(zp("a",e,t,n),zp("b",e,t,n))];case"Sub":return[s.sub(zp("a",e,t,n),zp("b",e,t,n))];case"Minimum":return[s.minimum(zp("a",e,t,n),zp("b",e,t,n))];case"Maximum":return[s.maximum(zp("a",e,t,n),zp("b",e,t,n))];case"Pow":return[s.pow(zp("a",e,t,n),zp("b",e,t,n))];case"SquaredDifference":return[s.squaredDifference(zp("a",e,t,n),zp("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return r((()=>((e,t,n,s=$)=>{switch(e.op){case"Abs":case"ComplexAbs":return[s.abs(zp("x",e,t,n))];case"Acos":return[s.acos(zp("x",e,t,n))];case"Acosh":return[s.acosh(zp("x",e,t,n))];case"Asin":return[s.asin(zp("x",e,t,n))];case"Asinh":return[s.asinh(zp("x",e,t,n))];case"Atan":return[s.atan(zp("x",e,t,n))];case"Atan2":return[s.atan2(zp("x",e,t,n),zp("y",e,t,n))];case"Atanh":return[s.atanh(zp("x",e,t,n))];case"Ceil":return[s.ceil(zp("x",e,t,n))];case"Complex":return[s.complex(zp("real",e,t,n),zp("imag",e,t,n))];case"Cos":return[s.cos(zp("x",e,t,n))];case"Cosh":return[s.cosh(zp("x",e,t,n))];case"Elu":return[s.elu(zp("x",e,t,n))];case"Erf":return[s.erf(zp("x",e,t,n))];case"Exp":return[s.exp(zp("x",e,t,n))];case"Expm1":return[s.expm1(zp("x",e,t,n))];case"Floor":return[s.floor(zp("x",e,t,n))];case"Log":return[s.log(zp("x",e,t,n))];case"Log1p":return[s.log1p(zp("x",e,t,n))];case"Imag":return[s.imag(zp("x",e,t,n))];case"Neg":return[s.neg(zp("x",e,t,n))];case"Reciprocal":return[s.reciprocal(zp("x",e,t,n))];case"Real":return[s.real(zp("x",e,t,n))];case"Relu":return[s.relu(zp("x",e,t,n))];case"Round":return[s.round(zp("x",e,t,n))];case"Selu":return[s.selu(zp("x",e,t,n))];case"Sigmoid":return[s.sigmoid(zp("x",e,t,n))];case"Sin":return[s.sin(zp("x",e,t,n))];case"Sign":return[s.sign(zp("x",e,t,n))];case"Sinh":return[s.sinh(zp("x",e,t,n))];case"Softplus":return[s.softplus(zp("x",e,t,n))];case"Sqrt":return[s.sqrt(zp("x",e,t,n))];case"Square":return[s.square(zp("x",e,t,n))];case"Tanh":return[s.tanh(zp("x",e,t,n))];case"Tan":return[s.tan(zp("x",e,t,n))];case"ClipByValue":return[s.clipByValue(zp("x",e,t,n),zp("clipValueMin",e,t,n),zp("clipValueMax",e,t,n))];case"Relu6":return[s.relu6(zp("x",e,t,n))];case"Rsqrt":return[s.rsqrt(Lp(e.inputNames[0],t,n))];case"LeakyRelu":return[s.leakyRelu(zp("x",e,t,n),zp("alpha",e,t,n))];case"Prelu":return[s.prelu(zp("x",e,t,n),zp("alpha",e,t,n))];case"IsNan":return[s.isNaN(Lp(e.inputNames[0],t,n))];case"IsInf":return[s.isInf(Lp(e.inputNames[0],t,n))];case"IsFinite":return[s.isFinite(Lp(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return Fd(e,t,n);case"convolution":return r((()=>((e,t,n,s=$)=>{switch(e.op){case"Conv1D":{const r=zp("stride",e,t,n),a=zp("pad",e,t,n),i=zp("dataFormat",e,t,n).toUpperCase(),o=zp("dilation",e,t,n);return[s.conv1d(zp("x",e,t,n),zp("filter",e,t,n),r,a,i,o)]}case"Conv2D":{const r=zp("strides",e,t,n),a=Gp(e,t,n),i=zp("dataFormat",e,t,n).toUpperCase(),o=zp("dilations",e,t,n);return[s.conv2d(zp("x",e,t,n),zp("filter",e,t,n),[r[1],r[2]],a,i,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:i,dilations:o,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:h}=Od(e,t,n);return[s.fused.conv2d({x:zp("x",e,t,n),filter:zp("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:i,dilations:o,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:h}=Od(e,t,n);return[s.fused.depthwiseConv2d({x:zp("x",e,t,n),filter:zp("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=zp("outputShape",e,t,n),a=zp("strides",e,t,n),i=Gp(e,t,n);return[s.conv2dTranspose(zp("x",e,t,n),zp("filter",e,t,n),r,[a[1],a[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=zp("strides",e,t,n),a=Gp(e,t,n),i=zp("dilations",e,t,n),o=zp("dataFormat",e,t,n).toUpperCase();return[s.depthwiseConv2d(zp("input",e,t,n),zp("filter",e,t,n),[r[1],r[2]],a,o,[i[1],i[2]])]}case"Conv3D":{const r=zp("strides",e,t,n),a=zp("pad",e,t,n),i=zp("dataFormat",e,t,n).toUpperCase(),o=zp("dilations",e,t,n);return[s.conv3d(zp("x",e,t,n),zp("filter",e,t,n),[r[1],r[2],r[3]],a,i,[o[1],o[2],o[3]])]}case"AvgPool":{const r=zp("strides",e,t,n),a=zp("pad",e,t,n),i=zp("kernelSize",e,t,n);return[s.avgPool(zp("x",e,t,n),[i[1],i[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=zp("strides",e,t,n),a=zp("pad",e,t,n),i=zp("kernelSize",e,t,n);return[s.maxPool(zp("x",e,t,n),[i[1],i[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=zp("strides",e,t,n),a=zp("pad",e,t,n),i=zp("kernelSize",e,t,n),o=zp("includeBatchInIndex",e,t,n),{result:u,indexes:l}=s.maxPoolWithArgmax(zp("x",e,t,n),[i[1],i[2]],[r[1],r[2]],a,o);return[u,l]}case"AvgPool3D":{const r=zp("strides",e,t,n),a=zp("pad",e,t,n),i=zp("kernelSize",e,t,n);return[s.avgPool3d(zp("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=zp("strides",e,t,n),a=zp("pad",e,t,n),i=zp("kernelSize",e,t,n);return[s.maxPool3d(zp("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=zp("strides",e,t,n),a=zp("pad",e,t,n),i=zp("dilations",e,t,n),o=r[1],u=r[2],l=i[1],c=i[2];return[s.dilation2d(zp("x",e,t,n),zp("filter",e,t,n),[o,u],a,[l,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return r((()=>((e,t,n,s=$)=>{switch(e.op){case"Fill":{const r=zp("shape",e,t,n),a=zp("dtype",e,t,n),i=zp("value",e,t,n);return[s.fill(r,i,a)]}case"LinSpace":{const r=zp("start",e,t,n),a=zp("stop",e,t,n),i=zp("num",e,t,n);return[s.linspace(r,a,i)]}case"Multinomial":{const r=zp("logits",e,t,n),a=zp("numSamples",e,t,n),i=zp("seed",e,t,n);return[s.multinomial(r,a,i)]}case"OneHot":{const r=zp("indices",e,t,n),a=zp("depth",e,t,n),i=zp("onValue",e,t,n),o=zp("offValue",e,t,n),u=zp("dtype",e,t,n);return[s.oneHot(r,a,i,o,u)]}case"Ones":return[s.ones(zp("shape",e,t,n),zp("dtype",e,t,n))];case"OnesLike":return[s.onesLike(zp("x",e,t,n))];case"RandomStandardNormal":return[s.randomStandardNormal(zp("shape",e,t,n),zp("dtype",e,t,n),zp("seed",e,t,n))];case"RandomUniform":return[s.randomUniform(zp("shape",e,t,n),zp("minval",e,t,n),zp("maxval",e,t,n),zp("dtype",e,t,n))];case"RandomUniformInt":return[s.randomUniformInt(zp("shape",e,t,n),zp("minval",e,t,n),zp("maxval",e,t,n),zp("seed",e,t,n))];case"Range":{const r=zp("start",e,t,n),a=zp("stop",e,t,n),i=zp("step",e,t,n);return[s.range(r,a,i,zp("dtype",e,t,n))]}case"TruncatedNormal":{const r=zp("shape",e,t,n),a=zp("mean",e,t,n),i=zp("stdDev",e,t,n),o=zp("seed",e,t,n);return[s.truncatedNormal(r,a,i,zp("dtype",e,t,n),o)]}case"Zeros":return[s.zeros(zp("shape",e,t,n),zp("dtype",e,t,n))];case"ZerosLike":return[s.zerosLike(zp("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n,s,r=$)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:s,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=Md(e,t,n),c=await r.image.nonMaxSuppressionWithScoreAsync(s,a,i,o,u,l);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:s,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=Md(e,t,n),l=zp("padToMaxOutputSize",e,t,n),c=await r.image.nonMaxSuppressionPaddedAsync(s,a,i,o,u,l);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:s,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=Md(e,t,n);return[await r.image.nonMaxSuppressionAsync(s,a,i,o,u)]}case"Where":{const s=r.cast(zp("condition",e,t,n),"bool"),a=[await r.whereAsync(s)];return s.dispose(),a}case"ListDiff":return r.setdiff1dAsync(zp("x",e,t,n),zp("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return r((()=>((e,t,n,s=$)=>{switch(e.op){case"LowerBound":{const r=zp("sortedSequence",e,t,n),a=zp("values",e,t,n);return[s.lowerBound(r,a)]}case"TopKV2":{const r=zp("x",e,t,n),a=zp("k",e,t,n),i=zp("sorted",e,t,n),o=s.topk(r,a,i);return[o.values,o.indices]}case"UpperBound":{const r=zp("sortedSequence",e,t,n),a=zp("values",e,t,n);return[s.upperBound(r,a)]}case"Unique":{const r=zp("x",e,t,n),a=s.unique(r);return[a.values,a.indices]}case"UniqueV2":{const r=zp("x",e,t,n),a=zp("axis",e,t,n),i=s.unique(r,a);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return r((()=>((e,t,n,s=$)=>{switch(e.op){case"ResizeBilinear":{const r=zp("images",e,t,n),a=zp("size",e,t,n),i=zp("alignCorners",e,t,n),o=zp("halfPixelCenters",e,t,n);return[s.image.resizeBilinear(r,[a[0],a[1]],i,o)]}case"ResizeNearestNeighbor":{const r=zp("images",e,t,n),a=zp("size",e,t,n),i=zp("alignCorners",e,t,n),o=zp("halfPixelCenters",e,t,n);return[s.image.resizeNearestNeighbor(r,[a[0],a[1]],i,o)]}case"CropAndResize":{const r=zp("image",e,t,n),a=zp("boxes",e,t,n),i=zp("boxInd",e,t,n),o=zp("cropSize",e,t,n),u=zp("method",e,t,n),l=zp("extrapolationValue",e,t,n);return[s.image.cropAndResize(r,a,i,o,u,l)]}case"ImageProjectiveTransformV3":{const r=zp("images",e,t,n),a=zp("transforms",e,t,n),i=zp("outputShape",e,t,n),o=zp("fillValue",e,t,n),u=zp("interpolation",e,t,n),l=zp("fillMode",e,t,n);return[s.image.transform(r,a,u.toLowerCase(),l.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return r((()=>((e,t,n,s=$)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=zp("default",e,t,n);return[Lp(e.name,t,n)||r];case"Placeholder":return[Lp(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[Hp(zp("x",e,t,n))];case"IdentityN":return zp("x",e,t,n).map((e=>Hp(e)));case"Shape":return[s.tensor1d(zp("x",e,t,n).shape,"int32")];case"ShapeN":return zp("x",e,t,n).map((e=>s.tensor1d(e.shape)));case"Size":return[s.scalar(zp("x",e,t,n).size,"int32")];case"Rank":return[s.scalar(zp("x",e,t,n).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const a=zp("x",e,t,n),i=zp("data",e,t,n),o=zp("message",e,t,n),u=zp("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,u));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return r((()=>((e,t,n,s=$)=>{switch(e.op){case"Equal":return[s.equal(zp("a",e,t,n),zp("b",e,t,n))];case"NotEqual":return[s.notEqual(zp("a",e,t,n),zp("b",e,t,n))];case"Greater":return[s.greater(zp("a",e,t,n),zp("b",e,t,n))];case"GreaterEqual":return[s.greaterEqual(zp("a",e,t,n),zp("b",e,t,n))];case"Less":return[s.less(zp("a",e,t,n),zp("b",e,t,n))];case"LessEqual":return[s.lessEqual(zp("a",e,t,n),zp("b",e,t,n))];case"LogicalAnd":return[s.logicalAnd(zp("a",e,t,n),zp("b",e,t,n))];case"LogicalNot":return[s.logicalNot(zp("a",e,t,n))];case"LogicalOr":return[s.logicalOr(zp("a",e,t,n),zp("b",e,t,n))];case"Select":case"SelectV2":return[s.where(zp("condition",e,t,n),zp("a",e,t,n),zp("b",e,t,n))];case"BitwiseAnd":return[s.bitwiseAnd(zp("a",e,t,n),zp("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return r((()=>((e,t,n,s=$)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(zp("a",e,t,n),zp("b",e,t,n),zp("transposeA",e,t,n),zp("transposeB",e,t,n))];case"Einsum":return[s.einsum(zp("equation",e,t,n),...zp("tensors",e,t,n))];case"Transpose":return[s.transpose(zp("x",e,t,n),zp("perm",e,t,n))];case"_FusedMatMul":const[r,a]=zp("fusedOps",e,t,n),i="biasadd"===r,o="prelu"===a,u=zp("numArgs",e,t,n),l=zp("leakyreluAlpha",e,t,n);if(i){if(o&&2!==u)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==u)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=zp("args",e,t,n);return[s.fused.matMul({a:zp("a",e,t,n),b:zp("b",e,t,n),transposeA:zp("transposeA",e,t,n),transposeB:zp("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:h,leakyreluAlpha:l})];case"MatrixBandPart":return[s.linalg.bandPart(zp("a",e,t,n),zp("numLower",e,t,n),zp("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return r((()=>((e,t,n,s=$)=>{switch(e.op){case"EuclideanNorm":return[s.euclideanNorm(zp("x",e,t,n),zp("axis",e,t,n),zp("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[s.batchNorm(zp("x",e,t,n),zp("mean",e,t,n),zp("variance",e,t,n),zp("offset",e,t,n),zp("scale",e,t,n),zp("epsilon",e,t,n))];case"LRN":return[s.localResponseNormalization(zp("x",e,t,n),zp("radius",e,t,n),zp("bias",e,t,n),zp("alpha",e,t,n),zp("beta",e,t,n))];case"Softmax":return[s.softmax(zp("x",e,t,n))];case"LogSoftmax":return[s.logSoftmax(zp("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"ragged":return r((()=>((e,t,n,s=$)=>{switch(e.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:a}=s.raggedGather(zp("paramsNestedSplits",e,t,n),zp("paramsDenseValues",e,t,n),zp("indices",e,t,n),zp("outputRaggedRank",e,t,n));return r.concat(a)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:a}=s.raggedRange(zp("starts",e,t,n),zp("limits",e,t,n),zp("splits",e,t,n));return[r,a]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(zp("shape",e,t,n),zp("values",e,t,n),zp("defaultValue",e,t,n),zp("rowPartitionTensors",e,t,n),zp("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return r((()=>((e,t,n,s=$)=>{switch(e.op){case"Max":{const r=zp("axis",e,t,n),a=zp("keepDims",e,t,n);return[s.max(zp("x",e,t,n),r,a)]}case"Mean":{const r=zp("axis",e,t,n),a=zp("keepDims",e,t,n);return[s.mean(zp("x",e,t,n),r,a)]}case"Min":{const r=zp("axis",e,t,n),a=zp("keepDims",e,t,n);return[s.min(zp("x",e,t,n),r,a)]}case"Sum":{const r=zp("axis",e,t,n),a=zp("keepDims",e,t,n);return[s.sum(zp("x",e,t,n),r,a)]}case"All":{const r=zp("axis",e,t,n),a=zp("keepDims",e,t,n);return[s.all(zp("x",e,t,n),r,a)]}case"Any":{const r=zp("axis",e,t,n),a=zp("keepDims",e,t,n);return[s.any(zp("x",e,t,n),r,a)]}case"ArgMax":{const r=zp("axis",e,t,n);return[s.argMax(zp("x",e,t,n),r)]}case"ArgMin":{const r=zp("axis",e,t,n);return[s.argMin(zp("x",e,t,n),r)]}case"Prod":{const r=zp("axis",e,t,n),a=zp("keepDims",e,t,n);return[s.prod(zp("x",e,t,n),r,a)]}case"Cumprod":{const r=zp("axis",e,t,n),a=zp("exclusive",e,t,n),i=zp("reverse",e,t,n);return[s.cumprod(zp("x",e,t,n),r,a,i)]}case"Cumsum":{const r=zp("axis",e,t,n),a=zp("exclusive",e,t,n),i=zp("reverse",e,t,n);return[s.cumsum(zp("x",e,t,n),r,a,i)]}case"Bincount":const r=zp("x",e,t,n),a=zp("weights",e,t,n),i=zp("size",e,t,n);return[s.bincount(r,a,i)];case"DenseBincount":{const r=zp("x",e,t,n),a=zp("weights",e,t,n),i=zp("size",e,t,n),o=zp("binaryOutput",e,t,n);return[s.denseBincount(r,a,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return r((()=>((e,t,n,s=$)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=zp("n",e,t,n),a=zp("axis",e,t,n);let i=zp("tensors",e,t,n);return i=i.slice(0,r),[s.concat(i,a)]}case"Gather":{const r=zp("x",e,t,n),a=zp("indices",e,t,n);return[s.gather(r,s.cast(a,"int32"),0)]}case"GatherV2":{const r=zp("axis",e,t,n),a=zp("batchDims",e,t,n),i=zp("x",e,t,n),o=zp("indices",e,t,n);return[s.gather(i,s.cast(o,"int32"),r,a)]}case"Reverse":{const r=zp("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const i=zp("x",e,t,n);return[s.reverse(i,a)]}case"ReverseV2":{const r=zp("axis",e,t,n),a=zp("x",e,t,n);return[s.reverse(a,r)]}case"Slice":{const r=zp("begin",e,t,n),a=zp("size",e,t,n);return[s.slice(zp("x",e,t,n),r,a)]}case"StridedSlice":{const r=zp("begin",e,t,n),a=zp("end",e,t,n),i=zp("strides",e,t,n),o=zp("beginMask",e,t,n),u=zp("endMask",e,t,n),l=zp("ellipsisMask",e,t,n),c=zp("newAxisMask",e,t,n),h=zp("shrinkAxisMask",e,t,n),p=zp("x",e,t,n);return[s.stridedSlice(p,r,a,i,o,u,l,c,h)]}case"Pack":return(0,_.lub)((()=>{const r=zp("axis",e,t,n),a=zp("tensors",e,t,n),i=a[0].shape,o=s.squeeze(a[0]).shape,u=a.map((e=>{const t=_.D5U.arraysEqual(e.shape,i);if(!t&&!_.D5U.arraysEqual(s.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:s.reshape(e,i)}));return[s.stack(u,r)]}));case"Unpack":{const r=zp("axis",e,t,n),a=zp("tensor",e,t,n);return s.unstack(a,r)}case"Tile":{const r=zp("reps",e,t,n);return[s.tile(zp("x",e,t,n),r)]}case"Split":case"SplitV":{const r=zp("axis",e,t,n),a=zp("numOrSizeSplits",e,t,n),i=zp("x",e,t,n);return s.split(i,a,r)}case"ScatterNd":{const r=zp("indices",e,t,n),a=zp("values",e,t,n),i=zp("shape",e,t,n);return[s.scatterND(r,a,i)]}case"GatherNd":{const r=zp("x",e,t,n),a=zp("indices",e,t,n);return[s.gatherND(r,a)]}case"SparseToDense":{const r=zp("sparseIndices",e,t,n),a=zp("outputShape",e,t,n),i=zp("sparseValues",e,t,n),o=zp("defaultValue",e,t,n);return[s.sparseToDense(r,i,a,i.dtype===o.dtype?o:s.cast(o,i.dtype))]}case"TensorScatterUpdate":{const r=zp("indices",e,t,n),a=zp("values",e,t,n),i=zp("tensor",e,t,n);return[s.tensorScatterUpdate(i,r,a)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return r((()=>((e,t,n,s=$)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:i,reverseIndexMap:o}=s.sparse.sparseFillEmptyRows(zp("indices",e,t,n),zp("values",e,t,n),zp("denseShape",e,t,n),zp("defaultValue",e,t,n));return[r,a,i,o]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=s.sparse.sparseReshape(zp("inputIndices",e,t,n),zp("inputShape",e,t,n),zp("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(zp("data",e,t,n),zp("indices",e,t,n),zp("segmentIds",e,t,n))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(zp("data",e,t,n),zp("indices",e,t,n),zp("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return r((()=>((e,t,n,s=$)=>{switch(e.op){case"FFT":return[s.fft(zp("x",e,t,n))];case"IFFT":return[s.ifft(zp("x",e,t,n))];case"RFFT":return[s.rfft(zp("x",e,t,n))];case"IRFFT":return[s.irfft(zp("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return r((()=>((e,t,n,s=$)=>{switch(e.op){case"StaticRegexReplace":return[s.string.staticRegexReplace(zp("input",e,t,n),zp("pattern",e,t,n),zp("rewrite",e,t,n),zp("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=s.string.stringNGrams(zp("data",e,t,n),zp("dataSplits",e,t,n),zp("separator",e,t,n),zp("nGramWidths",e,t,n),zp("leftPad",e,t,n),zp("rightPad",e,t,n),zp("padWidth",e,t,n),zp("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:i}=s.string.stringSplit(zp("input",e,t,n),zp("delimiter",e,t,n),zp("skipEmpty",e,t,n));return[r,a,i]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(zp("input",e,t,n),zp("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return r((()=>((e,t,n,s=$)=>{switch(e.op){case"Cast":return[s.cast(zp("x",e,t,n),zp("dtype",e,t,n))];case"ExpandDims":{const r=zp("axis",e,t,n);return[s.expandDims(zp("x",e,t,n),r)]}case"Squeeze":{const r=zp("axis",e,t,n);return[s.squeeze(zp("x",e,t,n),r)]}case"Reshape":return[s.reshape(zp("x",e,t,n),zp("shape",e,t,n))];case"EnsureShape":return[s.ensureShape(zp("x",e,t,n),zp("shape",e,t,n))];case"MirrorPad":return[s.mirrorPad(zp("x",e,t,n),zp("padding",e,t,n),zp("mode",e,t,n))];case"PadV2":case"Pad":return[s.pad(zp("x",e,t,n),zp("padding",e,t,n),zp("constantValue",e,t,n))];case"SpaceToBatchND":{const r=zp("blockShape",e,t,n),a=zp("paddings",e,t,n);return[s.spaceToBatchND(zp("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=zp("blockShape",e,t,n),a=zp("crops",e,t,n);return[s.batchToSpaceND(zp("x",e,t,n),r,a)]}case"DepthToSpace":{const r=zp("blockSize",e,t,n),a=zp("dataFormat",e,t,n).toUpperCase();return[s.depthToSpace(zp("x",e,t,n),r,a)]}case"BroadcastTo":return[s.broadcastTo(zp("x",e,t,n),zp("shape",e,t,n))];case"BroadcastArgs":return[s.broadcastArgs(zp("s0",e,t,n),zp("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,s)=>{switch(e.op){case"HashTable":case"HashTableV2":{const r=s.getHashTableHandleByName(e.name);if(null!=r)return[r];{const r=zp("keyDType",e,t,n),a=zp("valueDType",e,t,n),i=new Bd(r,a);return s.addHashTable(e.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=zp("tableHandle",e,t,n,s),a=zp("keys",e,t,n),i=zp("values",e,t,n),o=s.getHashTableById(r.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const r=zp("tableHandle",e,t,n,s),a=zp("keys",e,t,n),i=zp("defaultValue",e,t,n),o=s.getHashTableById(r.id);return[await o.find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=zp("tableHandle",e,t,n,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,s);case"custom":const a=Mp(e.op);if(a&&a.customExecutor)return a.customExecutor(new Td(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return _.D5U.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}class Ld{constructor(e={},t={},n={},s={},r){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=s,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Ud(e,t,n,s){const r=new Set,a=[];let i=null,o=null;const u=new Set,l=new Set(Object.keys(e).map((e=>Vp(e)[0])));s=s||[];const c=new Set(s.map((e=>Vp(e.name)[0]))),h=[...t];for(;h.length>0;){const e=h.pop();(jd(e)||Xd(e)||qd(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>r.has(e)))),r.add(e.name),null==n[e.name]&&(l.has(e.name)||c.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),h.push(e))})):a.push(e.name)))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:i,syncInputs:o}}function Wd(e,t){const{usedNodes:n,inputs:s}=t,r=Object.keys(s).map((e=>Vp(e)[0])).map((t=>e.nodes[t])),a=e.initNodes||[],i=e=>n.has("string"==typeof e?e:e.name);function o(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const u=o([...r,...e.weights,...a]).filter(i),l=o([...u,...Object.values(e.nodes)]).filter(i),c=new Map(l.map((e=>[e.name,e]))),h={};for(const m of l){h[m.name]=h[m.name]||0;for(const e of m.children)i(e)||(h[e.name]=Number.POSITIVE_INFINITY),h[e.name]=(h[e.name]||0)+1}const p=Object.entries(h).filter((([,e])=>0===e)).map((([e])=>e)),d=[...p];for(;p.length>0;){const e=p.pop(),t=c.get(e);for(const n of t.children.filter(i))0==--h[n.name]&&(d.push(n.name),p.push(n.name))}const f=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),s=t.map((e=>e.name)),r=new Set(s);for(;s.length>0;){const e=s.pop(),t=n.get(e);for(const a of t.children)n.has(a.name)&&!r.has(a.name)&&(r.add(a.name),s.push(a.name))}return e.filter((e=>r.has(e.name)))}(d.map((e=>c.get(e))),u);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),s=new Set(t.map((e=>e.name))),r=e=>s.has("string"==typeof e?e:e.name),a=new Set(e.map((e=>e.name))),i=e=>a.has("string"==typeof e?e:e.name);for(const o of e){for(const e of o.children.filter(i)){if(!n.has(e.name))throw new Pd(`Child ${e.name} of node ${o.name} is unreachable.`);if(n.get(o.name)>n.get(e.name))throw new Pd(`Node ${o.name} is scheduled to run after its child ${e.name}.`)}if(!r(o))for(const e of o.inputs){if(!n.has(e.name))throw new Pd(`Input ${e.name} of node ${o.name} is unreachable.`);if(n.get(e.name)>n.get(o.name))throw new Pd(`Node ${o.name} is scheduled to run before its input ${e.name}.`)}}}(f,u),f}class Pd extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}const Vd=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Gd=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Hd=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function jd(e){return Vd.has(e.op)}function Xd(e){return Gd.has(e.op)}function qd(e){return Hd.has(e.op)}class Kd{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new Kd(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),s=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+s.join(this.SEPARATOR)}compile(e,t){const n=Ud(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:r,syncInputs:a}=n;if(null!=r)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){const n=t.map((e=>e.name)),r=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${r}]. Missing the following inputs: [${s}]`)}const i=Wd(this.graph,n),o=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,s=e.map(((e,t)=>jd(e)?n:t)),r=e=>{const n=s[t.get(e.name)];return null==n?-1:n},a=e.map(((e,t)=>e.children.map(r).reduce(((e,t)=>Math.max(e,t)),s[t]))),i=new Map;for(let o=0;o<e.length;++o){const t=a[o];if(t===n)continue;const s=e[o],r=e[t];i.has(r.name)||i.set(r.name,[]),i.get(r.name).push(s)}return i}(i);return{orderedNodes:i,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return(0,_.CnY)(t),t}cloneTensorList(e){if(!e)return null;const t=e.map((e=>this.cloneAndKeepTensor(e)));return t}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[e,this.cloneTensorList(t)])))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const s=n.map((e=>this.graph.nodes[Vp(e)[0]])),r=t.map((e=>Vp(e)[0])),a=new Set(r);let i=r.map((e=>this.graph.nodes[e]));0===i.length&&(i=this._outputs);const o=this.getCompilationKey(s,i);let u=this.compiledMap.get(o);null==u&&(u=this.compile(e,i),this.compiledMap.set(o,u));try{this.keepIntermediateTensors=(0,_.OBj)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const l={},c={};return(0,_.lub)((()=>{const n=new Ld(this.weightMap,l,c,this.functionExecutorMap,this.parseNodeNameCache),s=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[r,a]=Vp(t,n),i=[];i[a]=e[t],s[r]=i,this.keepIntermediateTensors&&(this.clonedTensorsMap[r]=this.cloneTensorList(i))}));const r=this.getFrozenTensorIds(s),{orderedNodes:i,nodeLiveUntilMap:o}=u;for(const e of i){if(s[e.name])continue;const t=zd(e,s,n,this._resourceManager);if(_.D5U.isPromise(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);s[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,s,n,r,a,o.get(e.name))}return null==this.parent&&n.dispose(r),t.map((e=>Lp(e,s,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,s,r,a,i){if(!jd(t)&&!a.has(e)){for(const s of n[e])null!=s&&(i[s.id]=(i[s.id]||0)+t.children.length);for(const e of t.inputs){if(jd(e))continue;const t=Up(e.name,n,s);if(null!=t)for(const e of t){if(!e||e.kept||r.has(e.id))continue;const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,s,r,a){function i(e){return jd(e)||r.has(e.name)}if(!jd(e)&&null!=a)for(const o of a){if(i(o))continue;const e=Up(o.name,t,n);for(const t of e)!t||t.kept||s.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,s={},r={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=(0,_.OBj)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const a=new Ld(this.weightMap,s,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const i=await this.executeWithControlFlow(e,a,t,n),o=t.map((e=>Lp(e,i,a))),u=o.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),c=new Set([...u,...l,...this.weightIds]);return Object.values(i).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&a.dispose(c),o}async executeFunctionAsync(e,t,n){const s=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(s,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,s){const r=Object.keys(e),a=r.map((e=>this.graph.nodes[Vp(e)[0]])),i=n.map((e=>Vp(e)[0])),o=new Set(i);let u=i.map((e=>this.graph.nodes[e]));0===u.length&&(u=this._outputs);const{usedNodes:l,missingInputs:c,dynamicNode:h,syncInputs:p}=Ud(e,u,this.weightMap,this._initNodes),d=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,s]=Vp(t),r=[];r[s]=e[t],f[n]=r}));const m={},g=this.getFrozenTensorIds(f),y={};for(;d.length>0;){const e=this.processStack(a,d,t,f,y,g,o,m,l);await Promise.all(e)}null!=h||s||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=u.filter((e=>!jd(e)&&!Lp(e.name,f,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=h&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${r}]. Consider providing the following inputs: [${c}]. ${e}`)}return f}processStack(e,t,n,s,r,a,i,o,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&zp("isConstant",e.node,s,n)&&([c]=Wp(e.node.name,n)),null==s[e.node.name]){const h=zd(e.node,s,n,this._resourceManager);c||([c]=Wp(e.node.name,n));const p=n.currentContext;_.D5U.isPromise(h)?l.push(h.then((l=>(s[c]=l,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(l)),n.currentContext=p,this.checkTensorForDisposal(c,e.node,s,n,a,i,o),this.processChildNodes(e.node,t,n,s,r,u),l)))):(s[c]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(h)),this.checkTensorForDisposal(c,e.node,s,n,a,i,o),this.processChildNodes(e.node,t,n,s,r,u))}else this.processChildNodes(e.node,t,n,s,r,u)}return l}processChildNodes(e,t,n,s,r,a){e.children.forEach((e=>{const[i]=Wp(e.name,n);!r[i]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!Lp(e,s,n)))&&(r[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!Lp(e,s,n)))&&(r[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[s]=Vp(t),r=this.graph.nodes[s];if(r.attrParams.shape&&r.attrParams.shape.value){const e=r.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));_.D5U.assert(t,(()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}r.attrParams.dtype&&r.attrParams.dtype.value&&_.D5U.assert(n.dtype===r.attrParams.dtype.value,(()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;const s={};for(const r in e){const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[r];null!=a?s[a.name]=e[r]:s[r]=e[r]}return s}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=Vp(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;const s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=s?s.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=Vp(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class Qd{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class Yd{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=_.io){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new Qd}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return _.D5U.isPromise(e)?e.then((e=>this.loadSync(e))):this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(n=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const s=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Kd(hd.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=hd.Instance.transformGraph(e.modelInitializer);this.initializer=new Kd(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof _.esB?[e]:e,n={};return t.forEach(((e,t)=>n[this.structuredOutputKeys[t]]=e)),n}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof _.esB||Array.isArray(e))){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const s=n[t];null!=s.resourceId&&(e[t]=this.resourceIdToCapturedInput[s.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let s=0;return this.inputNodes.reduce(((t,n)=>{var r,a,i;const o=null===(i=null===(a=null===(r=this.signature)||void 0===r?void 0:r.inputs)||void 0===a?void 0:a[n])||void 0===i?void 0:i.resourceId;return t[n]=null!=o?this.resourceIdToCapturedInput[o]:e[s++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let s=0;s<n.length;s++){const r=t[n[s]];this.resourceIdToCapturedInput[r.resourceId]=e[s]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&(0,_.B90)(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function Jd(e,t={},n=_.io){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=function(e){e.endsWith("/")||(e+="/");return`${e}model.json?tfjs-format=file`}(e));const s=new Yd(e,t,n);return await s.load(),s}function Zd(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){const[n,s]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!(s&&s instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");const r=_.io.getWeightSpecs(n.weightsManifest),a=_.io.getModelArtifactsForJSONSync(n,r,s);t=_.io.fromMemorySync(a)}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=_.io.fromMemorySync(e)}const n=new Yd(t);return n.load(),n}const ef="4.6.0";var tf,nf=n(95552);function sf(e,t,n=new Map,s=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(lf(e)){const r=Array.isArray(e)?[]:{};s.add(e);for(const a in e){const i=sf(e[a],t,n,s);r[a]=i}return s.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,r.value),r.value}function rf(e,t=of){return af(e,t)}function af(e,t,n=new Set){const s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(lf(s)){const r=Array.isArray(s)?[]:{};n.add(s);for(const a in s){const s=af(e.map((e=>e[a])),t,n);r[a]=s}return n.delete(s),r}throw new Error(`Can't recurse into non-iterable type: ${s}`)}return r.value}function of(e){return null===e?null:lf(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function uf(e,t){const n=new Map;sf(e,t,n);for(const s of Array.from(n.keys())){const e=n.get(s);if(_.D5U.isPromise(e)){const t=await e;n.set(s,t)}}return sf(e,t,n)}function lf(e){let t=!1;if(_.OBj().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:s}=n(18116);t=e instanceof s}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof _.esB)&&!(e instanceof Promise)&&!t)}function cf(e){return function(e,t){return sf(e,t)}(e,hf)}function hf(e){return e instanceof _.esB?{value:e.clone(),recurse:!1}:lf(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class pf{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class df extends pf{constructor(){super(df.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let s=0;s<n;s++)t[s]=this.get(this.wrap(this.begin+s));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function ff(e){return new bf(e)}function mf(e){return new xf(e)}function gf(e,t){return new Af(e,t)}df.INITIAL_CAPACITY=32;class yf{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Tf(this,e)}filter(e){return new Sf(this,e)}map(e){return new Nf(this,e)}mapAsync(e){return new Cf(this,e)}serialMapAsync(e){return new Cf(this,e).serial()}flatmap(e){return new Ef(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new If(this,e,t)}columnMajorBatch(e,t=!0,n=of){return this.rowMajorBatch(e,t).map((e=>rf(e,n)))}concatenate(e,t){return new Af(ff([this,e]),t)}take(e){return e<0||null==e?this:new kf(this,e)}skip(e){return e<0||null==e?this:new vf(this,e)}prefetch(e){return new Rf(this,e)}shuffle(e,t){return new _f(this,e,t)}serial(){return new wf(this)}}class bf extends yf{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:cf(e),done:!1}}}class xf extends yf{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class wf extends yf{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class vf extends yf{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;_.B90(e.value)}return this.upstream.next()}}class kf extends yf{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class If extends yf{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class Sf extends yf{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;_.B90(e.value)}}}class Nf extends yf{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=_.piX.getTensorsInContainer(e.value),n=this.transform(e.value),s=_.piX.getTensorsInContainer(n);for(const r of t)_.piX.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}}class Tf extends yf{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class Cf extends yf{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=_.piX.getTensorsInContainer(e.value),n=await this.transform(e.value),s=_.piX.getTensorsInContainer(n);for(const r of t)_.piX.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}}class $f extends yf{constructor(){super(),this.outputQueue=new df,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Ef extends $f{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=_.piX.getTensorsInContainer(e.value),n=this.transform(e.value),s=_.piX.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const r of t)_.piX.isTensorInList(r,s)||r.dispose();return!0}}class Af extends yf{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(tf||(tf={}));class Df extends yf{constructor(e,t=tf.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const s=await uf(this.iterators,(function(e){if(e instanceof yf){return{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}}return{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case tf.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case tf.SHORTEST:return{value:null,done:!0};case tf.LONGEST:}return this.count++,{value:s,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class Rf extends yf{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new pf(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class _f extends Rf{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=nf.alea(n||_.D5U.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Ff{constructor(){this.size=null}batch(e,t=!0){const n=this;let s;return _.D5U.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),s=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Of((async()=>(await n.iterator()).columnMajorBatch(e,t,zf)),s)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Of((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,Of((async()=>(await t.iterator()).filter((t=>_.lub((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Of((async()=>(await t.iterator()).map((t=>_.lub((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return Of((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Of((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Of((async()=>gf(mf((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Of((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,r=nf.alea(t||_.D5U.now().toString());return Of((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await s.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Of((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Of(e,t=null){return new class extends Ff{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Mf(e){return Of((async()=>ff(e)),e.length)}function Bf(e){if(!lf(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return Of((async()=>function(e,t=tf.FAIL){return new Df(e,t)}(await uf(e,(e=>{if(e instanceof Ff)return{value:e.iterator(),recurse:!1};if(lf(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),tf.SHORTEST)),t)}function zf(e){if(null===e)return null;const t=e[0];if(null==(n=t)||null===(s=n)||"object"!=typeof s&&"function"!=typeof s||Array.isArray(n)||"object"==typeof n&&n instanceof _.esB||_.D5U.isTypedArray(n)){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof _.esB?_.knu(e):_.XeE(e)}(e),recurse:!1}}var n,s;return{value:null,recurse:!0}}Ff.MAX_BUFFER_SIZE=1e4;class Lf extends Ff{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}}const Uf='"',Wf=Symbol("out"),Pf=Symbol("field"),Vf=Symbol("quote"),Gf=Symbol("quoteafterquote"),Hf=Symbol("quoteinquote");class jf extends Ff{async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&_.D5U.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(_.D5U.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const s of Object.keys(this.columnConfigs)){if(-1===this.fullColumnNames.indexOf(s))throw new Error('The key "'+s+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new Lf(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(_.D5U.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},s={};for(let r=0;r<this.fullColumnNames.length;r++){const a=this.fullColumnNames[r],i=this.columnConfigs?this.columnConfigs[a]:null;if(!this.configuredColumnsOnly||i){const o=t[r];let u=null;if(""===o)if(i&&void 0!==i.default)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);u=void 0}else{const e=Number(o);if(isNaN(e))u=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:u=e;break;case"int32":u=Math.floor(e);break;case"bool":u=this.getBoolean(o)}else u=e}i&&i.isLabel?s[a]=u:n[a]=u}}return 0===Object.keys(s).length?n:{xs:n,ys:s}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let s=0;const r=e.length;let a=Wf;for(let i=0;i<r;i++)switch(a){case Wf:switch(e.charAt(i)){case Uf:s=i+1,a=Vf;break;case this.delimiter:if(s=i+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),a=Wf;break;default:a=Pf,s=i}break;case Pf:if(e.charAt(i)===this.delimiter)n.push(e.substring(s,i)),a=Wf,s=i+1;break;case Vf:if(e.charAt(i)===Uf)a=Gf;break;case Gf:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(s,i-1)),a=Wf,s=i+1;break;case Uf:a=Vf;break;default:a=Hf}break;case Hf:if(e.charAt(i)===Uf)a=Vf}if(a===Gf?n.push(e.substring(s,r-1)):n.push(e.substring(s)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class Xf extends yf{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!(0,_.OBj)().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");const t=new Xf(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((s=>{const r=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),s({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,s)=>n.set(e,s*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(_.D5U.sizeFromShape(t));return n.set(e,n.length-e.length),(0,_.XeE)(n,t)}}class qf extends yf{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=(0,_.RRF)([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,s=(1-t)/2,r=n+e,a=t+s;this.cropBox=(0,_.odF)([s,n,a,r],[1,4])}else this.cropBox=(0,_.odF)([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!(0,_.OBj)().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new qf(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&_.D5U.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(t){console.log(t),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=_.Xhn.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return(0,_.lub)((()=>{const t=(0,_.dt4)((0,_.pju)(e,"float32"),0);let n;n=_.BHj.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const s=n.shape;return(0,_.XLQ)(n,s.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class Kf{}class Qf extends yf{split(e){return new Yf(this,e)}}class Yf extends Qf{constructor(e,t){super(),this.upstream=e,this.impl=new Jf(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class Jf extends $f{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}}class Zf extends yf{decodeUTF8(){return new em(this)}}class em extends Qf{constructor(e){super(),this.upstream=e,this.impl=new tm(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class tm extends $f{constructor(e){if(super(),this.upstream=e,(0,_.OBj)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(43237);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=(0,_.OBj)().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}}class nm extends Zf{constructor(e,t={}){super(),this.file=e,this.options=t,_.D5U.assert(e instanceof Uint8Array||!!(0,_.OBj)().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const s=new FileReader;s.onload=n=>{let r=s.result;if(r instanceof ArrayBuffer&&(r=new Uint8Array(r)),!(r instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(r)},s.onabort=e=>t(new Error("Aborted")),s.onerror=e=>t(new Error(e.type));const r=this.file.slice(this.offset,n);s.readAsArrayBuffer(r)}this.offset=n}));return{value:await e,done:!1}}}const sm=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function rm(e){return"string"==typeof e&&"file://"===e.slice(0,7)}class am extends Kf{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(rm(this.input)&&(0,_.OBj)().get("IS_NODE")){const e=n(93153);this.input=e.readFileSync(this.input.slice(7))}return new nm(this.input,this.options)}}class im extends Kf{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return rm(this.url)?new am(this.url,this.fileOptions).iterator():async function(e,t={},n){let s,r;"string"==typeof e?s=e:(s=e.url,r=sm(e));const a=await(n||_.D5U.fetch)(s,r);if(a.ok){const e=new Uint8Array(await a.arrayBuffer());return new nm(e,t)}throw new Error(a.statusText)}(this.url,this.fileOptions)}}function om(e,t={}){return new jf(new im(e),t)}function um(e){const t=mf(e);return Of((async()=>t))}function lm(e){return Of((async()=>{const t=await e();return mf((()=>t.next()))}))}async function cm(e,t){return qf.create(e,t)}async function hm(e){return Xf.create(e)}const pm="4.6.0";function dm(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&_.D5U.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const fm=_.GDt.whereImpl;class mm extends _.Zuw{nextDataId(){return mm.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new _.JLz(this,(0,_.SRH)())}write(e,t,n){this.firstUse&&(this.firstUse=!1,(0,_.OBj)().get("IS_NODE")&&_.Wap.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&_.D5U.isString(n[0])){const r=n.map((e=>_.D5U.encodeString(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return _.Wap.mergeRealAndImagArrays(e,t)}return _.D5U.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>_.D5U.decodeString(e)));return(0,_.f3b)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,_.f3b)(e.shape,e.dtype,t)}makeOutput(e,t,n){return(0,_.SRH)().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=_.D5U.now();e();return{kernelMs:_.D5U.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){dm([e],"where");const t=this.readSync(e.dataId);return fm(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function gm(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}mm.nextDataId=0;const ym={kernelName:_.SYM,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;dm(t,"abs");let s=new Float32Array(_.D5U.sizeFromShape(t.shape));return s=gm(n.data.get(t.dataId).values),n.makeOutput(s,t.shape,t.dtype)}};function bm(e){return(t,n,s,r,a)=>{const i=_.Wap.assertAndGetBroadcastShape(t,n),o=i.length,u=_.D5U.computeStrides(i),l=_.D5U.sizeFromShape(i),c=_.D5U.getTypedArrayFromDType(a,l),h=t.length,p=n.length,d=_.D5U.computeStrides(t),f=_.D5U.computeStrides(n),m=_.Wap.getBroadcastDims(t,i),g=_.Wap.getBroadcastDims(n,i);if(m.length+g.length===0)for(let y=0;y<c.length;++y)c[y]=e(s[y%s.length],r[y%r.length]);else for(let y=0;y<c.length;++y){const t=_.D5U.indexToLoc(y,o,u),n=t.slice(-h);m.forEach((e=>n[e]=0));const a=_.D5U.locToIndex(n,h,d),i=t.slice(-p);g.forEach((e=>i[e]=0));const l=_.D5U.locToIndex(i,p,f);c[y]=e(s[a],r[l])}return[c,i]}}function xm(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",i)},o}const wm={kernelName:_.Zz9,backendName:"cpu",kernelFunc:xm};function vm(e,t,n="float32"){if("complex64"===n){return xm({inputs:{real:vm(e,t,"float32"),imag:vm(e,t,"float32")},backend:e})}const s=_.D5U.makeZerosTypedArray(_.D5U.sizeFromShape(t),n);return e.makeTensorInfo(t,n,s)}function km(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const Im={kernelName:_.iJz,backendName:"cpu",kernelFunc:km};function Sm(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const Nm={kernelName:_.xJR,backendName:"cpu",kernelFunc:Sm};function Tm(e,t,n,s){if("int32"===s){return[t,"int32",Int32Array.from(e)]}if("bool"===s){const s=_.D5U.toTypedArray([0],n),[r,a]=bm(((e,t)=>e!==t?1:0))(t,[],e,s,"bool");return[a,"bool",r]}throw new Error(`Error in Cast: failed to cast ${n} to ${s}`)}function Cm(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if("complex64"===a){if("complex64"===r.dtype)return km({inputs:{x:r},backend:n});const e=vm(n,r.shape,r.dtype),t=Cm({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),s=xm({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),s}if("complex64"===r.dtype){const e=Sm({inputs:{input:r},backend:n}),t=Cm({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!_.D5U.hasEncodingLoss(r.dtype,a)){const e=km({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}const i=n.data.get(r.dataId).values,[o,u,l]=Tm(i,r.shape,r.dtype,a);return n.makeTensorInfo(o,u,l)}const $m={kernelName:_.RFZ,backendName:"cpu",kernelFunc:Cm};function Em(e,t,n,s){return null==n?({inputs:n,backend:r})=>{const{a:a,b:i}=n,o=r;dm([a,i],e);const u=o.data.get(a.dataId).values,l=o.data.get(i.dataId).values,c="string"===a.dtype?_.Wap.fromUint8ToStringArray(u):u,h="string"===a.dtype?_.Wap.fromUint8ToStringArray(l):l,p=s||a.dtype,[d,f]=t(a.shape,i.shape,c,h,p);return o.makeTensorInfo(f,p,d)}:({inputs:e,backend:r})=>{const{a:a,b:i}=e,o=r;if("complex64"===a.dtype||"complex64"===i.dtype){const e=Cm({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),s=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,u=o.data.get(s.dataId).values,l=o.data.get(r.dataId).values,c=Cm({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,y,b]=n(a.shape,i.shape,u,l,f,m),x=o.makeTensorInfo(b,"float32",g),w=o.makeTensorInfo(b,"float32",y),v=xm({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),v}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,r=s||a.dtype,[u,l]=t(a.shape,i.shape,e,n,r);return o.makeTensorInfo(l,r,u)}}}function Am(e){return(t,n,s,r,a,i)=>{const o=_.Wap.assertAndGetBroadcastShape(t,n),u=_.D5U.sizeFromShape(o),l=o.length,c=_.D5U.computeStrides(o),h=_.D5U.getTypedArrayFromDType("float32",u),p=_.D5U.getTypedArrayFromDType("float32",u),d=_.Wap.getBroadcastDims(t,o),f=_.Wap.getBroadcastDims(n,o),m=_.Wap.mergeRealAndImagArrays(s,r),g=_.Wap.mergeRealAndImagArrays(a,i),y=t.length,b=_.D5U.computeStrides(t),x=n.length,w=_.D5U.computeStrides(n);if(d.length+f.length===0)for(let v=0;v<h.length;v++){const t=v%m.length,n=v%g.length,s=e(m[2*t],m[2*t+1],g[2*n],g[2*n+1]);h[v]=s.real,p[v]=s.imag}else for(let v=0;v<h.length;v++){const t=_.D5U.indexToLoc(v,l,c),n=t.slice(-y);d.forEach((e=>n[e]=0));const s=_.D5U.locToIndex(n,y,b),r=t.slice(-x);f.forEach((e=>r[e]=0));const a=_.D5U.locToIndex(r,x,w),i=e(m[2*s],m[2*s+1],g[2*a],g[2*a+1]);h[v]=i.real,p[v]=i.imag}return[h,p,o]}}const Dm=bm(((e,t)=>e+t)),Rm=Am(((e,t,n,s)=>({real:e+n,imag:t+s}))),_m=Em(_.mm_,Dm,Rm),Fm={kernelName:_.mm_,backendName:"cpu",kernelFunc:_m};function Om(e,t,n,s,r){const a=_.D5U.sizeFromShape(s),i=_.D5U.makeZerosTypedArray(r,n);for(let o=0;o<e.length;o++){const n=e[o];if(n<0)throw new Error("Input x must be non-negative!");n>=r||(i[n]+=a>0?t[o]:1)}return i}function Mm(e,t,n,s=!1){const r=e.shape[0],a=e.shape[1],i=(0,_.f3b)([r,n],t.dtype);for(let o=0;o<r;o++)for(let r=0;r<a;r++){const a=e.get(o,r);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(s?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,r),o,a):i.set(i.get(o,a)+1,o,a))}return i}const Bm=bm(((e,t)=>e&t)),zm=Em(_.hCO,Bm),Lm={kernelName:_.hCO,backendName:"cpu",kernelFunc:zm};function Um(e){return(t,n,s)=>{const r=_.D5U.getArrayFromDType(n,t.length);for(let a=0;a<t.length;++a)r[a]=e(t[a],s);return r}}function Wm(e,t,n){return Pm(e,Um(t),n)}function Pm(e,t,n){return({inputs:s,attrs:r,backend:a})=>{const{x:i}=s;dm(i,e);const o=a,u=o.data.get(i.dataId).values;let l;if("string"===i.dtype){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");l=_.Wap.fromUint8ToStringArray(u)}else l=u;const c=n||i.dtype,h=t(l,c,r);return o.makeTensorInfo(i.shape,c,h)}}const Vm=Um((e=>Math.ceil(e))),Gm=Pm(_.gJX,Vm),Hm={kernelName:_.gJX,backendName:"cpu",kernelFunc:Gm};function jm(e,t,n,s){const r=_.D5U.getArrayFromDType(n,_.D5U.sizeFromShape(t));if(s&&"string"!==n){let t=0;e.forEach((e=>{const n=_.D5U.sizeFromShape(e.shape);r.set(e.vals,t),t+=n}))}else{let s=0;e.forEach((e=>{const a="string"===n?_.Wap.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+s;for(let t=0;t<e.shape[1];++t)r[o+t]=a[i++]}s+=e.shape[1]}))}return r}const Xm=bm(((e,t)=>e===t?1:0)),qm=Em(_.hdR,Xm,null,"bool"),Km={kernelName:_.hdR,backendName:"cpu",kernelFunc:qm},Qm=Um((e=>Math.exp(e))),Ym=Pm(_.NEP,Qm,"float32"),Jm={kernelName:_.NEP,backendName:"cpu",kernelFunc:Ym},Zm=Um((e=>Math.expm1(e))),eg=Pm(_.Y0y,Zm),tg={kernelName:_.Y0y,backendName:"cpu",kernelFunc:eg},ng=Um((e=>Math.floor(e))),sg=Pm(_.OR,ng),rg={kernelName:_.OR,backendName:"cpu",kernelFunc:sg},ag=bm(((e,t)=>Math.floor(e/t))),ig=Em(_.jeX,ag,null,"int32"),og={kernelName:_.jeX,backendName:"cpu",kernelFunc:ig};function ug(e,t,n,s,r,a,i,o,u){const l=(0,_.f3b)([s,a],n);for(let c=0;c<s;c++){const n=[];let s=0;for(let t=0;t<r;t++){const a=e[c*r+t];s+=a*i[t],n.push(a)}if(s<0||s>=u/a)throw new Error(`Invalid indices: ${n} does not index into ${o}`);for(let e=0;e<a;e++)l.values[c*a+e]=t.get(...t.indexToLoc(s*a+e))}return l}function lg(e,t,n){const s=(0,_.f3b)(n,e.dtype);for(let r=0;r<s.size;++r){const n=s.indexToLoc(r).slice(),a=n[0],i=n[2],o=t.locToIndex([a,i]);n[2]=t.values[o];const u=e.locToIndex(n);0<=u&&u<e.values.length&&(s.values[r]=e.values[u])}return s}const cg=bm(((e,t)=>e>t?1:0)),hg=Em(_.iZT,cg,null,"bool"),pg={kernelName:_.iZT,backendName:"cpu",kernelFunc:hg},dg=bm(((e,t)=>e>=t?1:0)),fg=Em(_.Acj,dg,null,"bool"),mg={kernelName:_.Acj,backendName:"cpu",kernelFunc:fg},gg=bm(((e,t)=>e<t?1:0)),yg=Em(_.vtC,gg,null,"bool"),bg={kernelName:_.vtC,backendName:"cpu",kernelFunc:yg},xg=bm(((e,t)=>e<=t?1:0)),wg=Em(_.CAk,xg,null,"bool"),vg={kernelName:_.CAk,backendName:"cpu",kernelFunc:wg};function kg(e,t,n){const s=(t-e)/(n-1),r=_.D5U.makeZerosTypedArray(n,"float32");r[0]=e;for(let a=1;a<r.length;a++)r[a]=r[a-1]+s;return r}const Ig=Um((e=>Math.log(e))),Sg=Pm(_.ZbH,Ig),Ng={kernelName:_.ZbH,backendName:"cpu",kernelFunc:Sg};function Tg(e,t,n,s){const r=_.D5U.getTypedArrayFromDType(s,_.D5U.sizeFromShape(n));for(let a=0;a<r.length;++a){const n=a*t;let s=e[n];for(let r=0;r<t;++r){const t=e[n+r];(Number.isNaN(t)||t>s)&&(s=t)}r[a]=s}return r}const Cg=bm(((e,t)=>Math.max(e,t))),$g=Em(_.BMI,Cg),Eg={kernelName:_.BMI,backendName:"cpu",kernelFunc:$g},Ag=bm(((e,t)=>Math.min(e,t))),Dg=Em(_.q8u,Ag),Rg={kernelName:_.q8u,backendName:"cpu",kernelFunc:Dg},_g=bm(((e,t)=>e*t)),Fg=Am(((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n}))),Og=Em(_.wYn,_g,Fg),Mg={kernelName:_.wYn,backendName:"cpu",kernelFunc:Og};function Bg(e,t,n){const s=_.D5U.createScalarValue(-1,n);return _g([],t,s,e,n)}const zg={kernelName:_.kuV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;dm(s,"neg");const r=n.data.get(s.dataId).values,[a,i]=Bg(r,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,a)}},Lg=bm(((e,t)=>e!==t?1:0)),Ug=Em(_.yQU,Lg,null,"bool"),Wg={kernelName:_.yQU,backendName:"cpu",kernelFunc:Ug};function Pg(e,t,n,s,r){const a=t.length,i=_.D5U.sizeFromShape(t),o=_.D5U.computeStrides(t),u=_.D5U.computeStrides(r),l=_.D5U.getTypedArrayFromDType(n,_.D5U.sizeFromShape(r));for(let c=0;c<i;++c){const t=_.D5U.indexToLoc(c,a,o),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[s[e]];l[_.D5U.locToIndex(n,a,u)]=e[c]}return l}function Vg(e){const{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:a}=n;dm(r,"transpose");const i=r.shape.length,o=new Array(i);for(let l=0;l<o.length;l++)o[l]=r.shape[a[l]];const u=Pg(s.data.get(r.dataId).values,r.shape,r.dtype,a,o);return{dataId:s.write(u,o,r.dtype),shape:o,dtype:r.dtype}}const Gg={kernelName:_.G3Y,backendName:"cpu",kernelFunc:Vg};function Hg(e,t,n,s){const[r,a]=_.Wap.computeOutAndReduceShapes(e,s),i=(0,_.x8V)(t,"int32"),o=_.D5U.makeZerosTypedArray(_.D5U.sizeFromShape(r),i),u=_.D5U.sizeFromShape(a);for(let l=0;l<o.length;++l){const e=l*u;let t=1;for(let s=0;s<u;++s)t*=n[e+s];o[l]=t}return{outVals:o,outShape:r,outDtype:i}}const jg={kernelName:_.DlI,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;dm(r,"prod");const o=r.shape.length,u=_.D5U.parseAxisParam(a,r.shape),l=_.Wap.getAxesPermutation(u,o);let c=u,h=r;const p=[];null!=l&&(h=Vg({inputs:{x:r},backend:n,attrs:{perm:l}}),p.push(h),c=_.Wap.getInnerMostAxes(c.length,o));const d=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=Hg(h.shape,h.dtype,d,c);let y=m;return i&&(y=_.Wap.expandShapeToKeepDim(m,u)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function Xg(e,t,n,s){const r=[];let a=0;const i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const s=e[n],r=n===e.length-1?t:e[n+1].length;if(0===s.length)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<s.length;++e)if(s[e-1]>s[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,s);let u=1;for(let l=0;l<t.length-1;++l){u*=t[l];const e=t[l+1];for(let t=1;t<u+1;++t)o[l].push(t*e)}for(let l=0;l<e.length;++l){let s=e[l],i=e[l]+1;for(let e=0;e<n.length;++e){const r=n[e],a=e+t.length-1;if(a>=0){const e=o[a],t=e[e.length-1]-r[s];for(let n=s;n<i;++n)o[a].push(r[n+1]+t)}s=r[s],i=r[i]}i!==s&&(r.push([s,i]),a+=i-s)}return{outSplits:o,valueSlices:r,numValues:a}}function qg(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let s=t;s<e.length;s++)n[t-1]*=e[s];return n}function Kg(e,t,n,s,r){const a=t.slice();a[0]=r;const i=_.D5U.getArrayFromDType(n,_.D5U.sizeFromShape(a)),o=e.length;return function(e,t,n,s,r,a){const i=qg(t,2)[1],o=qg(a,2)[1];let u=0;for(const l of n)for(let t=l[0];t<l[1];++t){for(let n=0;n<s;++n)r[u*o+n]=e[t*i+n];++u}}(e,t,s,0===o?0:o/t[0],i,a),[i,a]}function Qg(e,t,n,s,r,a,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,s)=>{if(e<0||e>=n){const r=_.D5U.indexToLoc(s,t.length,_.D5U.computeStrides(t)).join(",");throw new Error(`indices[${r}] = ${e} is not in [0, ${n})`)}}))}(a,i,t[0][0]-1),0===s.length)throw new Error("params.rank must be nonzero");const u=s[0],{outSplits:l,valueSlices:c,numValues:h}=Xg(a,i,e,u),p=function(e){const t=[];for(let n=0;n<e.length;++n){const s=e[n].length,r=_.D5U.getArrayFromDType("int32",s);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}(l),d=Kg(n,s,r,c,h);return[p,d[0],d[1]]}const Yg=2147483647;function Jg(e,t,n,s,r,a,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,u=0===r.length,l=0===i.length,c=[];o||c.push(t[0]),u||c.push(r[0]),l||c.push(i[0]);for(let g=1;g<c.length;++g)if(c[g]!==c[g-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],p=_.D5U.getArrayFromDType("int32",h+1);p[0]=0;for(let g=0;g<h;++g){const t=o?e[0]:e[g],n=u?s[0]:s[g],r=l?a[0]:a[g];if(0===r)throw new Error("Requires delta != 0");let i;if(r>0&&n<t||r<0&&n>t)i=0;else if(i=Math.ceil(Math.abs((n-t)/r)),i>Yg)throw new Error("Requires ((limit - start) / delta) <= 2147483647");p[g+1]=p[g]+i}const d=p[h],f=_.D5U.getArrayFromDType(n,d);let m=0;for(let g=0;g<h;++g){const t=p[g+1]-p[g];let n=o?e[0]:e[g];const s=l?a[0]:a[g];for(let e=0;e<t;++e)f[m++]=n,n+=s}return[p,f]}var Zg=_.Wap.RowPartitionType;class ey{constructor(e,t,n,s,r,a,i,o,u,l){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=s,this.valuesDType=r,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=_.Wap.getRowPartitionTypesHelper(l),this.raggedRank=_.Wap.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Zg.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Zg.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Zg.VALUE_ROWIDS:return ey.getMaxWidthValueRowID(t);case Zg.ROW_SPLITS:return ey.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Zg[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let s=0;s<t-1;++s){const t=e[s+1]-e[s];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,s=e[0],r=0;for(let a=1;a<t;++a){const t=e[a];t!==s&&(s=t,r=Math.max(a-n,r),n=a)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return ny(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;_.Wap.validateDefaultValueShape(n,t);const s=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=_.Wap.combineRaggedTensorToTensorShapes(this.raggedRank,s,t);r[0]<0&&(r[0]=e);for(let a=1;a<=this.raggedRank;++a)r[a]<0&&(r[a]=this.getMaxWidth(a));return r}calculateFirstParentOutputIndex(e,t,n){const s=Math.min(e,n),r=[];let a=0;for(let i=0;i<s;++i,a+=t)r.push(a);for(let i=s;i<e;++i)r.push(-1);return _.D5U.assert(r.length===e,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(e,t,n,s){const r=e.length,a=[];for(let i=0;i<r-1;++i){const r=e[i+1]-e[i];let o=Math.min(s,r),u=t[i];-1===u&&(o=0);for(let e=0;e<o;++e)a.push(u),u+=n;for(let e=0;e<r-o;++e)a.push(-1)}if(r>0&&a.length!==e[r-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,s){const r=e.length,a=[];if(0===r)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let u=t[o];a.push(u);for(let l=1;l<r;++l){const r=e[l];if(r===o)u>=0&&(++i,i<s?u+=n:u=-1);else{if(i=0,o=r,r>=t.length)throw new Error(`Got nextValueRowId=${r} which is not less than ${t.length}`);u=t[r]}a.push(u)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,s){const r=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case Zg.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,s);case Zg.ROW_SPLITS:if(r.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,n,s);default:throw new Error(`Unsupported partition type: ${Zg[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case Zg.FIRST_DIM_SIZE:return e[0];case Zg.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Zg.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Zg[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let a=n.length-2;a>=0;--a)n[a]=n[a+1]*t[a+1];const s=ny(t,!1),r=_.D5U.getArrayFromDType(this.valuesDType,_.D5U.sizeFromShape(s));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){a=this.calculateOutputIndex(e-1,a,n[e],t[e])}this.setOutput(this.raggedRank,a,r,s)}return[s,r]}setOutput(e,t,n,s){if(0===n.length)return;const r=this.values,a=n;let i=s.slice();i=i.slice(e+1);const o=_.D5U.sizeFromShape(i),u=t.length;let l=this.defaultValue;if(l.length!==o&&1!==l.length){const e=this.defaultValueShape;(0,_.lub)((()=>{const t=(0,_.XLQ)(l,e),n=(0,_.UFq)(t,i);l=n.dataSync()}))}let c=0,h=0,p=0;for(let d=0;d<=u;++d){let e=d<u?t[d]:-1;if(e!==p){if(h<p){const e=r.subarray(c*o);ty(a.subarray(h*o),e,(p-h)*o)}if(d>=u){const t=n.length;e=Math.floor(t/o)}if(e>p)if(1===this.defaultValue.length)a.subarray(p*o,e*o).fill(this.defaultValue[0]),p=e;else for(;e>p;){ty(a.slice(p*o),l,o),++p}e<0?(c=d+1,h=p):(c=d,h=p,p=h+1)}else++p}}}function ty(e,t,n){for(let s=0;s<n;s++)e[s]=t[s]}function ny(e,t){const n=[];for(let s of e){if(s<0){if(!t)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}n.push(s)}return n}function sy(e,t,n,s,r,a,i,o,u,l){return new ey(e,t,n,s,r,a,i,o,u,l).compute()}function ry(e,t,n,s){if(e===t||e<t&&n<0||t<e&&n>1)return _.D5U.makeZerosTypedArray(0,s);const r=Math.abs(Math.ceil((t-e)/n)),a=_.D5U.makeZerosTypedArray(r,s);t<e&&1===n&&(n=-1),a[0]=e;for(let i=1;i<a.length;i++)a[i]=a[i-1]+n;return a}const ay=Um((e=>1/Math.sqrt(e))),iy=Pm(_.bV0,ay),oy={kernelName:_.bV0,backendName:"cpu",kernelFunc:iy};function uy(e,t,n,s,r,a,i,o,u,l){const c=[s/r,r],h=e.values,p=t.values;if(0===s)return(0,_.f3b)(n,t.dtype);const d=u instanceof _.YDk?u:(0,_.f3b)(c,t.dtype);"string"==typeof u||"number"==typeof u?d.values.fill(u):"boolean"==typeof u&&d.values.fill(+u);for(let f=0;f<a;f++){const e=[];let a=0;for(let t=0;t<i;t++){const n=h[f*i+t];e.push(n),a+=n*o[t]}if(a<0||a>=s/r)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<r;n++)l?d.values[a*r+n]+=p[f*r+n]:d.values[a*r+n]=0===t.rank?p[0]:p[f*r+n]}return d}const ly=Um((e=>1/(1+Math.exp(-e)))),cy=Wm(_.a5O,(e=>1/(1+Math.exp(-e)))),hy={kernelName:_.a5O,backendName:"cpu",kernelFunc:cy};function py(e,t,n,s,r){const a=_.kuN.isSliceContinous(s,t,n),i=_.D5U.sizeFromShape(n),o=_.D5U.computeStrides(s);if(a){const n=_.kuN.computeFlatOffset(t,o);return"string"===r?e.slice(n,n+i):e.subarray(n,n+i)}const u="string"===r?_.Wap.fromUint8ToStringArray(e):e,l=(0,_.f3b)(s,r,u),c=(0,_.f3b)(n,r);for(let h=0;h<c.size;++h){const e=c.indexToLoc(h),n=e.map(((e,n)=>e+t[n]));c.set(l.get(...n),...e)}return"string"===r?_.Wap.fromStringArrayToUint8(c.values):c.values}function dy(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s;dm(r,"slice");const[o,u]=_.kuN.parseSliceParams(r,a,i);_.kuN.assertParamsValid(r,o,u);const l=py(n.data.get(r.dataId).values,o,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,l)}const fy={kernelName:_.p2w,backendName:"cpu",kernelFunc:dy};function my(e,t,n,s,r,a,i){const o=t[0],u=a[0],l=new Array(u),c=new Array(o),h=t[1];if(0===u){if(0!==o)throw new Error(_.Wap.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[_.D5U.getArrayFromDType(n,0),[0,h],_.D5U.getArrayFromDType(r,0),l,c]}let p=!0,d=0;const f=new Array(u).fill(0);for(let g=0;g<o;++g){const t=e[g*h];if(t<0)throw new Error(_.Wap.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,t));if(t>=u)throw new Error(_.Wap.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,t,u));++f[t],p=p&&t>=d,d=t}let m=!0;for(let g=0;g<u;++g){const e=0===f[g];l[g]=e,m=m&&!e,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&p){const t=e,n=s;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,l,c]}{const t=f[u-1],a=_.D5U.getArrayFromDType(n,t*h),p=_.D5U.getArrayFromDType(r,t),d=new Array(u).fill(0);for(let n=0;n<o;++n){const t=e[n*h],r=d[t],i=(0===t?0:f[t-1])+r;d[t]++;for(let s=0;s<h;++s)a[i*h+s]=e[n*h+s];p[i]=s[n],c[n]=i}for(let e=0;e<u;++e){if(0===d[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;p[t]=i}}return[a,[t,h],p,l,c]}}function gy(e,t,n,s,r){const a=_.D5U.sizeFromShape(s),i=t[0],o=r.length,u=[];let l=1,c=-1;for(let m=0;m<o;++m){const e=r[m];if(-1===e){if(-1!==c)throw new Error(_.Wap.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,m));c=m,u.push(1)}else{if(e<0)throw new Error(_.Wap.getSparseReshapeNegativeOutputDimErrorMessage(m,e));l*=e,u.push(e)}}if(-1!==c){if(l<=0)throw new Error(_.Wap.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(a/l);if(l*e!==a)throw new Error(_.Wap.getSparseReshapeInputOutputMultipleErrorMessage(s,u));u[c]=e}if(_.D5U.sizeFromShape(u)!==a)throw new Error(_.Wap.getSparseReshapeInputOutputMismatchErrorMessage(s,u));const h=s.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*s[e+1]}const d=[];if(o>0){d[o-1]=1;for(let e=o-2;e>=0;--e)d[e]=d[e+1]*u[e+1]}const f=_.D5U.getArrayFromDType(n,i*o);for(let m=0;m<i;++m){let t=0;for(let n=0;n<h;++n)t+=e[m*h+n]*p[n];for(let e=0;e<o;++e)f[m*o+e]=Math.trunc(t/d[e]),t%=d[e]}return[f,[i,o],u]}function yy(e,t,n,s,r,a=!1,i=0){const o=s.length,u=[t[0],e.length/t[0]],l=u[1],c=o>0?r[o-1]+1:0;if(c<0)throw new Error(_.Wap.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const h=t.slice();h[0]=c;const p=h.reduce(((e,t)=>e*t),1),d=_.D5U.getArrayFromDType(n,p);if(0===o)return c>0&&d.fill(i),[d,h];if(c<=0)throw new Error(_.Wap.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=r[f];for(;;){let t=0;if(m<o){if(t=r[m],y===t){++m;continue}if(y>=t)throw new Error(_.Wap.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=c)throw new Error(_.Wap.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,c));y>g&&d.fill(i,g*l,y*l);for(let n=f;n<m;++n){const t=s[n];if(t<0||t>=u[0])throw new Error(_.Wap.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,s[n],u[0]));for(let n=0;n<l;n++)d[y*l+n]+=e[t*l+n]}if(a)for(let e=0;e<l;e++)d[y*l+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>o)break}return g<c&&d.fill(i,g*l,c*l),[d,h]}const by=Um((e=>Math.sqrt(e))),xy=Wm(_.FKq,(e=>Math.sqrt(e))),wy={kernelName:_.FKq,backendName:"cpu",kernelFunc:xy},vy=bm(((e,t)=>{const n=e-t;return n*n})),ky=Em(_._tC,vy),Iy={kernelName:_._tC,backendName:"cpu",kernelFunc:ky},Sy=Um(((e,t)=>{const{pattern:n,replaceGlobal:s,rewrite:r}=t;return e.replace(new RegExp(n,s?"g":""),r)})),Ny=Pm(_.e0R,Sy),Ty={kernelName:_.e0R,backendName:"cpu",kernelFunc:Ny};function Cy(e,t,n,s){const r=(0,_.f3b)(e,t.dtype);for(let a=0;a<r.size;a++){const e=r.indexToLoc(a),i=new Array(e.length);for(let t=0;t<i.length;t++)i[t]=e[t]*n[t]+s[t];r.set(t.get(...i),...e)}return r}class $y{constructor(e,t,n,s,r,a){this.separator=_.D5U.encodeString(e),this.nGramWidths=t,this.leftPad=_.D5U.encodeString(n),this.rightPad=_.D5U.encodeString(s),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let i=0;i<r;++i){const o=this.getPadWidth(a),u=Math.max(0,o-i),l=Math.max(0,o-(r-(i+1))),c=a-(u+l),h=t+(u>0?0:i-o);let p=0;p+=u*this.leftPad.length;for(let t=0;t<c;++t)p+=e[h+t].length;p+=l*this.rightPad.length;p+=(u+l+c-1)*this.separator.length,n[s+i]=new Uint8Array(p);const d=n[s+i];let f=0;const m=e=>e.forEach((e=>d[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,s=t.length;if(s>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<s;++r){let s=t[r]>=e;if(s=s&&t[r]<=n,!s)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const r=s-1,a=_.D5U.getArrayFromDType("int32",s);if(0===n||0===s){const e=new Array(n);for(let t=0;t<=r;++t)a[t]=0;return[e,a]}a[0]=0;for(let o=1;o<=r;++o){const e=t[o]-t[o-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),a[o]=a[o-1]+n}const i=new Array(a[r]);for(let o=0;o<r;++o){const n=t[o];let s=a[o];if(this.nGramWidths.forEach((r=>{const a=t[o+1]-t[o],u=this.getNumNGrams(a,r);this.createNGrams(e,n,i,s,u,r),s+=u})),this.preserveShort&&s===a[o]){const r=t[o+1]-t[o];if(0===r)continue;const a=r+2*this.padWidth,u=1;this.createNGrams(e,n,i,s,u,a)}}return[i,a]}}function Ey(e,t,n,s,r,a,i,o){return new $y(n,s,r,a,i,o).compute(e,t)}function Ay(e,t,n,s){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)s.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let a=e.indexOf(r);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||s.push(t),a=(e=e.subarray(a+1)).indexOf(r)}return void(n&&0===e.length||s.push(e))}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(r,a);n&&0===t.length||s.push(t),r=a+1}}function Dy(e,t,n){const s=e.length,r=[];let a=0,i=0;const o=new Array(s);for(let p=0;p<s;++p){const s=r.length;Ay(e[p],t,n,r);const u=r.length-s;o[p]=u,a+=u,i=Math.max(i,u)}const u=_.D5U.getArrayFromDType("int32",2*a),l=new Array(a),c=[s,i];let h=0;for(let p=0;p<s;++p)for(let e=0;e<o[p];++e)u[2*h]=p,u[2*h+1]=e,l[h]=r[h],++h;return[u,l,c]}function Ry(e,t){const n=_.D5U.getArrayFromDType("int32",e.length);for(let s=0;s<e.length;++s)n[s]=_.D5U.fingerPrint64(e[s]).modulo(t).getLowBitsUnsigned();return n}const _y=bm(((e,t)=>e-t)),Fy=Am(((e,t,n,s)=>({real:e-n,imag:t-s}))),Oy=Em(_.Tr8,_y,Fy),My={kernelName:_.Tr8,backendName:"cpu",kernelFunc:Oy};function By(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const s=(0,_.f3b)(n,e.dtype);for(let r=0;r<s.values.length;++r){const t=s.indexToLoc(r),n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=t[s]%e.shape[s];const a=e.locToIndex(n);s.values[r]=e.values[a]}return s}const zy=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function Ly(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){const r=s-n+1,a=t-n+1,i=Math.log(r),o=.5*Math.exp(2*i/3),u=.5*Math.sqrt(i*o*(r-o)/r)*Math.sign(a-r/2);Ly(e,t,Math.max(n,Math.floor(t-a*o/r+u)),Math.min(s,Math.floor(t+(r-a)*o/r+u)))}const r=e[t];let a=n,i=s;for(_.D5U.swap(e,n,t),zy(e[s],r)>0&&_.D5U.swap(e,n,s);a<i;){for(_.D5U.swap(e,a,i),a++,i--;zy(e[a],r)<0;)a+=1;for(;zy(e[i],r)>0;)i-=1}0===zy(e[n],r)?_.D5U.swap(e,n,i):(i+=1,_.D5U.swap(e,i,s)),i<=t&&(n=i+1),t<=i&&(s=i-1)}}function Uy(e,t,n,s,r){const a=t[t.length-1],[i,o]=[e.length/a,a],u=_.D5U.getTypedArrayFromDType(n,i*s),l=_.D5U.getTypedArrayFromDType("int32",i*s);for(let h=0;h<i;h++){const t=h*o,n=e.subarray(t,t+o);let a=new Array(n.length);n.forEach(((e,t)=>a[t]={value:e,index:t})),s<a.length&&(Ly(a,s),a=a.slice(0,s)),r&&a.sort(zy);const i=h*s,c=u.subarray(i,i+s),p=l.subarray(i,i+s);for(let e=0;e<s;e++)c[e]=a[e].value,p[e]=a[e].index}const c=t.slice();return c[c.length-1]=s,[(0,_.f3b)(c,n,u),(0,_.f3b)(c,"int32",l)]}function Wy(e,t,n,s){const r=_.D5U.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let f=0;f<r;f++)a[0]*=n[f];a[1]=n[r];for(let f=r+1;f<n.length;f++)a[2]*=n[f];const i=new Map,o=new Int32Array(n[r]),u=new _.YDk(a,s,e),l=[],c=1===a[0]&&1===a[2];for(let f=0;f<n[r];f++){let t;if(c)t=e[f].toString();else{const e=[];for(let t=0;t<a[0];t++)for(let n=0;n<a[2];n++)e.push(u.get(t,f,n));t=e.join(",")}const n=i.get(t);if(null!=n)o[f]=n;else{const e=i.size;i.set(t,e),o[f]=e,l.push(f)}}const h=a.slice();h[1]=i.size;const p=new _.YDk(h,s);l.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)p.set(u.get(n,e,s),n,t,s)}));const d=n.slice();return d[r]=h[1],{outputValues:p.values,outputShape:d,indices:o}}const Py="4.6.0";(0,_.jqO)("cpu",(()=>new mm),1);const Vy=Wm(_.SX0,(e=>e>=0?e:Math.exp(e)-1)),Gy={kernelName:_.SX0,backendName:"cpu",kernelFunc:Vy};function Hy(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;dm([r],"leakyRelu");const i=_.D5U.sizeFromShape(r.shape),o=n.data.get(r.dataId).values,u=_.D5U.getTypedArrayFromDType("float32",i);for(let l=0;l<o.length;l++)u[l]=o[l]<0?a*o[l]:o[l];return n.makeTensorInfo(r.shape,"float32",u)}const jy={kernelName:_.J$2,backendName:"cpu",kernelFunc:Hy},Xy=bm(((e,t)=>e<0?t*e:e));function qy(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t;dm([s,r],"prelu");const a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,[o,u]=Xy(s.shape,r.shape,a,i,"float32");return n.makeTensorInfo(u,"float32",o)}const Ky={kernelName:_.o0g,backendName:"cpu",kernelFunc:qy},Qy=Wm(_.qkr,(e=>Math.max(0,e))),Yy={kernelName:_.qkr,backendName:"cpu",kernelFunc:Qy},Jy=Wm(_.SbG,(e=>Math.min(Math.max(0,e),6))),Zy={kernelName:_.SbG,backendName:"cpu",kernelFunc:Jy};function eb(e,t,n,s,r){if("linear"===n)return km({inputs:{x:t},backend:e});if("relu"===n)return Qy({inputs:{x:t},backend:e});if("elu"===n)return Vy({inputs:{x:t},backend:e});if("relu6"===n)return Jy({inputs:{x:t},backend:e});if("prelu"===n)return qy({inputs:{x:t,alpha:s},backend:e});if("leakyrelu"===n)return Hy({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return cy({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function tb(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=_.D5U.sizeFromShape(r.shape),o=_.D5U.inferFromImplicitShape(a,i),u=_.D5U.sizeFromShape(o);_.D5U.assert(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);const l=n.data.get(r.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}const nb={kernelName:_.HZH,backendName:"cpu",kernelFunc:tb};function sb(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;dm([r,a],"matMul");const u=r.shape.length,l=a.shape.length,c=i?r.shape[u-2]:r.shape[u-1],h=o?a.shape[l-1]:a.shape[l-2],p=i?r.shape[u-1]:r.shape[u-2],d=o?a.shape[l-2]:a.shape[l-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=_.D5U.sizeFromShape(f),y=_.D5U.sizeFromShape(m),b=_.Jyw.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,d]);_.D5U.assert(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,d,h]:[y,h,d],w=tb({inputs:{x:r},backend:n,attrs:{shape:i?[g,c,p]:[g,p,c]}}),v=tb({inputs:{x:a},backend:n,attrs:{shape:x}}),k=i?w.shape[1]:w.shape[2],I=i?w.shape[2]:w.shape[1],S=o?v.shape[1]:v.shape[2],N=Math.max(g,y),T=n.data.get(w.dataId).values,C=n.data.get(v.dataId).values,$=_.D5U.computeStrides(w.shape),E=_.D5U.computeStrides(v.shape),[A,D,R]=i?[$[0],1,$[1]]:[$[0],$[1],1],[F,O,M]=o?[1,E[1],E[0]]:[E[1],1,E[0]],B=I*S,z=(0,_.f3b)([N,I,S],w.dtype),L=z.values,U=n.blockSize;for(let _=0;_<N;_++){const e=_%g,t=_%y;for(let n=0;n<I;n+=U){const s=Math.min(n+U,I);for(let r=0;r<S;r+=U){const a=Math.min(r+U,S);for(let i=0;i<k;i+=U){const o=Math.min(i+U,k);for(let u=n;u<s;u++)for(let n=r;n<a;n++){let s=0;for(let r=i;r<o;r++){s+=T[e*A+u*D+r*R]*C[r*F+n*O+t*M]}L[_*B+(u*S+n)]+=s}}}}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(b,z.dtype,z.values)}const rb={kernelName:_.XLW,backendName:"cpu",kernelFunc:sb};const ab={kernelName:_.usg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=s;let p,d,f;const m=[];p=sb({inputs:{a:r,b:a},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(d=_m({inputs:{a:p,b:i},backend:n}),m.push(p),p=d),c&&(f=eb(n,p,c,o,h),m.push(p),p=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return p}},ib=Wm(_.VGw,(e=>Math.acos(e))),ob={kernelName:_.VGw,backendName:"cpu",kernelFunc:ib},ub=Wm(_.SpW,(e=>Math.acosh(e))),lb={kernelName:_.SpW,backendName:"cpu",kernelFunc:ub};const cb={kernelName:_.Xze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,s=t;dm(t,"addN");const r=s.map((e=>n.data.get(e.dataId).values)),a=(0,_.f3b)(s[0].shape,s[0].dtype),i=a.values;for(let o=0;o<s.length;o++){const e=r[o];for(let t=0;t<i.length;t++)i[t]+=e[t]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};const hb={kernelName:_.oT6,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;dm(r,"all");const o=_.D5U.parseAxisParam(a,r.shape);let u=o;const l=_.Wap.getAxesPermutation(u,r.shape.length);let c=r;null!=l&&(c=Vg({inputs:{x:r},backend:n,attrs:{perm:l}}),u=_.Wap.getInnerMostAxes(u.length,r.shape.length)),_.Wap.assertAxesAreInnerMostDims("all",u,c.shape.length);const[h,p]=_.Wap.computeOutAndReduceShapes(c.shape,u),d=_.D5U.sizeFromShape(p),f=_.D5U.makeZerosTypedArray(_.D5U.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*d;let t=m[e];for(let n=0;n<d;++n){const s=m[e+n];t=t&&s}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=tb({inputs:{x:g},backend:n,attrs:{shape:_.Wap.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const pb={kernelName:_.IKK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;dm(r,"any");const o=_.D5U.parseAxisParam(a,r.shape);let u=o;const l=_.Wap.getAxesPermutation(u,r.shape.length);let c=r;null!=l&&(c=Vg({inputs:{x:r},backend:n,attrs:{perm:l}}),u=_.Wap.getInnerMostAxes(u.length,r.shape.length)),_.Wap.assertAxesAreInnerMostDims("any",u,c.shape.length);const[h,p]=_.Wap.computeOutAndReduceShapes(c.shape,u),d=_.D5U.sizeFromShape(p),f=_.D5U.makeZerosTypedArray(_.D5U.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*d;let t=m[e];for(let n=0;n<d;++n){const s=m[e+n];t=t||s}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=tb({inputs:{x:g},backend:n,attrs:{shape:_.Wap.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const db={kernelName:_.sJF,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;dm(r,"argMax");let i=_.D5U.parseAxisParam(a,r.shape);const o=_.Wap.getAxesPermutation(i,r.shape.length);let u=r;const l=[];null!=o&&(u=Vg({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=_.Wap.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],_.Wap.assertAxesAreInnerMostDims("argMax",i,u.shape.length);const[c,h]=_.Wap.computeOutAndReduceShapes(u.shape,i),p=_.D5U.sizeFromShape(c),d=_.D5U.makeZerosTypedArray(p,"int32"),f=_.D5U.sizeFromShape(h),m=n.data.get(u.dataId).values;for(let g=0;g<d.length;++g){const e=g*f;let t=m[e],n=0;for(let s=0;s<f;++s){const r=m[e+s];r>t&&(t=r,n=s)}d[g]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}};const fb={kernelName:_.aJk,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;dm(r,"argMin");let i=_.D5U.parseAxisParam(a,r.shape);const o=_.Wap.getAxesPermutation(i,r.shape.length);let u=r;const l=[];null!=o&&(u=Vg({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=_.Wap.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],_.Wap.assertAxesAreInnerMostDims("argMin",i,u.shape.length);const[c,h]=_.Wap.computeOutAndReduceShapes(u.shape,i),p=_.D5U.sizeFromShape(c),d=_.D5U.makeZerosTypedArray(p,"int32"),f=_.D5U.sizeFromShape(h),m=n.data.get(u.dataId).values;for(let g=0;g<d.length;++g){const e=g*f;let t=m[e],n=0;for(let s=0;s<f;++s){const r=m[e+s];r<t&&(t=r,n=s)}d[g]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},mb=Wm(_.M2y,(e=>Math.asin(e))),gb={kernelName:_.M2y,backendName:"cpu",kernelFunc:mb},yb=Wm(_.qw7,(e=>Math.asinh(e))),bb={kernelName:_.qw7,backendName:"cpu",kernelFunc:yb},xb=Wm(_.jMg,(e=>Math.atan(e))),wb={kernelName:_.jMg,backendName:"cpu",kernelFunc:xb},vb=bm(((e,t)=>Math.atan2(e,t))),kb=Em(_.QCc,vb),Ib={kernelName:_.QCc,backendName:"cpu",kernelFunc:kb},Sb=Wm(_.Oyi,(e=>Math.atanh(e))),Nb={kernelName:_.Oyi,backendName:"cpu",kernelFunc:Sb};function Tb(e,t,n,s,r,a){const i=r.strideHeight,o=r.strideWidth,u=r.dilationHeight,l=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,p=r.padInfo.top,d=r.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=(0,_.f3b)(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let w=0;w<r.batchSize;++w){const t=w*y,n=w*s[0];for(let m=0;m<r.inChannels;++m)for(let y=0;y<r.outHeight;++y){const w=y*i-p,v=Math.max(0,w),k=Math.min(r.inHeight,c+w),I=t+y*b;for(let t=0;t<r.outWidth;++t){const i=t*o-d,c=Math.max(0,i),p=Math.min(r.inWidth,h+i);let y=f,b=0,w=0;for(let t=v;t<k;t+=u){const r=n+t*s[1];for(let t=c;t<p;t+=l){const n=e[r+t*s[2]+m];"max"===a&&n>y?y=n:"avg"===a&&(b+=n,w++)}if(isNaN(y))break}g[I+t*x+m]="avg"===a?b/w:y}}}return m}function Cb(e,t,n,s,r=!1,a=!1){const i=(0,_.f3b)(s.outShape,"int32"),o=s.strideHeight,u=s.strideWidth,l=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,p=s.effectiveFilterWidth,d=s.padInfo.top,f=s.padInfo.left,m=(0,_.f3b)(t,n,e);for(let g=0;g<s.batchSize;++g)for(let e=0;e<s.inChannels;++e)for(let t=0;t<s.outHeight;++t){const n=t*o-d;let y=n;for(;y<0;)y+=l;const b=Math.min(s.inHeight,h+n);for(let o=0;o<s.outWidth;++o){const h=o*u-f;let d=h;for(;d<0;)d+=c;const x=Math.min(s.inWidth,p+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let t=y;t<b;t+=l){const i=t-n;for(let n=d;n<x;n+=c){const o=n-h,u=m.get(g,t,n,e);u>w&&(w=u,v=r?a?((g*s.inHeight+t)*s.inWidth+n)*s.inChannels+e:(t*s.inWidth+n)*s.inChannels+e:i*p+o)}}i.set(v,g,t,o,e)}}return i}function $b(e,t,n,s,r,a){const i=r.strideDepth,o=r.strideHeight,u=r.strideWidth,l=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,p=r.effectiveFilterDepth,d=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=(0,_.f3b)(r.outShape,n),w=x.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],S=r.outShape[4];for(let N=0;N<r.batchSize;++N){const t=N*v,n=N*s[0];for(let x=0;x<r.inChannels;++x)for(let v=0;v<r.outDepth;++v){const N=v*i-m;let T=N;for(;T<0;)T+=l;const C=Math.min(r.inDepth,p+N),$=t+v*k;for(let t=0;t<r.outHeight;++t){const i=t*o-g;let p=i;for(;p<0;)p+=c;const m=Math.min(r.inHeight,d+i),v=$+t*I;for(let t=0;t<r.outWidth;++t){const i=t*u-y;let o=i;for(;o<0;)o+=h;const d=Math.min(r.inWidth,f+i),g=v+t*S;let k=b,I=0,N=0;for(let t=T;t<C;t+=l){const r=n+t*s[1];for(let t=p;t<m;t+=c){const n=r+t*s[2];for(let t=o;t<d;t+=h){const r=e[n+t*s[3]+x];if("max"===a&&r>k?k=r:"avg"===a&&(I+=r,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+x]="avg"===a?I/Math.max(N,1):k}}}}return x}const Eb={kernelName:_.JhU,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;dm(r,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s;_.D5U.assert(_.Wap.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=_.Wap.computePool2DInfo(r.shape,a,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&_.D5U.arraysEqual(l.inShape,l.outShape))c=km({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=_.D5U.computeStrides(r.shape),s=Tb(e,r.shape,r.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,r.dtype,s.values)}return c}};const Ab={kernelName:_._k9,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=s;dm(r,"avgPool3d");const c=_.Wap.computePool3DInfo(r.shape,a,i,1,o,u,l),h=$b(n.data.get(r.dataId).values,r.shape,r.dtype,_.D5U.computeStrides(r.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};const Db={kernelName:_.IMb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=s;dm([r,a],"avgPool3DGrad");const c=_.Wap.computePool3DInfo(a.shape,i,o,1,u,l),h=c.strideDepth,p=c.strideHeight,d=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=w-1-c.padInfo.front,S=k-1-c.padInfo.left,N=v-1-c.padInfo.top,T=(0,_.f3b)(a.shape,"float32"),C=1/(f*m*g),$=n.bufferSync(r);for(let E=0;E<c.batchSize;++E)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let s=0;s<c.inWidth;++s){const r=t-I,a=n-N,i=s-S;let o=0;for(let t=0;t<w;t+=y){const n=(r+t)/h;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let t=0;t<v;t+=b){const s=(a+t)/p;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let t=0;t<k;t+=x){const r=(i+t)/d;if(r<0||r>=c.outWidth||Math.floor(r)!==r)continue;o+=$.get(E,n,s,r,e)}}}T.set(o*C,E,t,n,s,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};const Rb={kernelName:_.ROF,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;dm([r,a],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=s,c=_.Wap.computePool2DInfo(i.shape,o,u,1,l),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,w=y-1-c.padInfo.top,v=(0,_.f3b)(i.shape,"float32"),k=1/(d*f),I=n.data.get(r.dataId).values,S=(0,_.f3b)(r.shape,"float32",I);for(let N=0;N<c.batchSize;++N)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inHeight;++t)for(let n=0;n<c.inWidth;++n){const s=t-w,r=n-x;let a=0;for(let t=0;t<y;t+=m){const n=(s+t)/h;if(!(n<0||n>=c.outHeight||Math.floor(n)!==n))for(let t=0;t<b;t+=g){const s=(r+t)/p;if(s<0||s>=c.outWidth||Math.floor(s)!==s)continue;a+=S.get(N,n,s,e)}}v.set(a*k,N,t,n,e)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const _b={kernelName:_.sHE,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:i,mean:o,variance:u}=t;_.D5U.assert(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),_.D5U.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),_.D5U.assert(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),dm([r,o,u,a,i],"batchNorm");let{varianceEpsilon:l}=s;null==l&&(l=.001);const c=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(u.dataId).values,d=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=d.length,b=p.length,x=h.length;let w=0,v=0,k=0,I=0;for(let S=0;S<c.length;++S)m[S]=f[w++]+(c[S]-h[v++])*d[k++]/Math.sqrt(p[I++]+l),w>=g&&(w=0),v>=x&&(v=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(r.shape,r.dtype,m)}};const Fb={kernelName:_.zws,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;dm([r],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),u=_.Wap.getReshaped(r.shape,a,o),l=_.Wap.getPermuted(u.length,a.length),c=_.Wap.getReshapedPermuted(r.shape,a,o),h=_.Wap.getSliceBeginCoords(i,a.length),p=_.Wap.getSliceSize(c,i,a.length),d=tb({inputs:{x:r},backend:n,attrs:{shape:u}}),f=Vg({inputs:{x:d},backend:n,attrs:{perm:l}}),m=tb({inputs:{x:f},backend:n,attrs:{shape:c}}),g=dy({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};const Ob={kernelName:_.zvY,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=Om(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}};const Mb={kernelName:_.eEB,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=_.Wap.assertAndGetBroadcastShape(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},Bb=Wm(_.xnO,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),zb={kernelName:_.xnO,backendName:"cpu",kernelFunc:Bb},Lb={kernelName:_.yj2,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,s=new Float32Array(_.D5U.sizeFromShape(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values;for(let l=0;l<o.length;l++){const e=o[l],t=u[l];s[l]=Math.hypot(e,t)}return n.makeOutput(s,t.shape,"float32")}};function Ub(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const Wb={kernelName:_.J_u,backendName:"cpu",kernelFunc:Ub};function Pb(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=_.D5U.parseAxisParam(r,t[0].shape)[0],i=t.map((e=>e.shape));_.Wap.assertParamsConsistent(i,a);let o=_.Wap.computeOutShape(t.map((e=>e.shape)),a);if(0===_.D5U.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const u=t.filter((e=>_.D5U.sizeFromShape(e.shape)>0));if(1===u.length)return km({inputs:{x:u[0]},backend:n});if("complex64"===u[0].dtype){const e=u.map((e=>Sm({inputs:{input:e},backend:n}))),t=u.map((e=>Ub({inputs:{input:e},backend:n}))),s=Pb({inputs:e,backend:n,attrs:{axis:a}}),r=Pb({inputs:t,backend:n,attrs:{axis:a}}),i=xm({inputs:{real:s,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),i}const l=u.map((e=>{const t=_.D5U.sizeFromShape(e.shape.slice(a));return tb({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),c=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=_.Wap.computeOutShape(l.map((e=>e.shape)),1);const h=1===l[0].shape[0],p=jm(c,o,t[0].dtype,h),d=_.Wap.computeOutShape(u.map((e=>e.shape)),a),f=n.makeTensorInfo(d,t[0].dtype,p);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const Vb={kernelName:_.Eh3,backendName:"cpu",kernelFunc:Pb};function Gb(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=s;dm([r,a],"conv2d");const h=_.Wap.convertConv2DDataFormat(u),p=_.Wap.computeConv2DInfo(r.shape,a.shape,i,l,o,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,w=new _.YDk(p.outShape,r.dtype),v=_.D5U.computeStrides(r.shape),k=_.D5U.computeStrides(a.shape),I=v[0],S=x?v[1]:v[2],N=x?v[2]:1,T=x?1:v[1],C=w.strides[0],$=x?w.strides[1]:w.strides[2],E=x?w.strides[2]:1,A=x?1:w.strides[1],D=n.data.get(r.dataId).values,R=n.data.get(a.dataId).values,F=w.values;for(let _=0;_<p.batchSize;++_){const e=_*I,t=_*C;for(let n=0;n<p.outHeight;++n){const s=t+n*$,r=n*p.strideHeight-b;for(let t=0;t<d;++t){const n=r+t*m;if(n<0||n>=p.inHeight)continue;const a=t*k[0],i=e+n*S;for(let e=0;e<p.outWidth;++e){const t=s+e*E,n=e*p.strideWidth-y;for(let e=0;e<f;++e){const s=n+e*g;if(s<0||s>=p.inWidth)continue;const r=i+s*N;let o=a+e*k[1];for(let e=0;e<p.inChannels;++e){const n=D[r+e*T];for(let e=0;e<p.outChannels;++e)F[t+e*A]+=n*R[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,F)}const Hb={kernelName:_.mhS,backendName:"cpu",kernelFunc:Gb};const jb={kernelName:_.wUP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=s;dm([r,a],"conv2dBackpropFilter");const h=_.Wap.convertConv2DDataFormat(u),p=_.Wap.computeConv2DInfo(r.shape,c,i,1,o,l,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new _.YDk(p.filterShape,"float32"),x=p.padInfo.left,w=p.padInfo.top,v=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,I=new _.YDk(r.shape,r.dtype,v),S=new _.YDk(a.shape,a.dtype,k);for(let N=0;N<m;++N){const e=Math.max(0,Math.ceil((w-N)/d)),t=Math.min(p.outHeight,(p.inHeight+w-N)/d);for(let n=0;n<g;++n){const s=Math.max(0,Math.ceil((x-n)/f)),r=Math.min(p.outWidth,(p.inWidth+x-n)/f);for(let a=0;a<p.inChannels;++a)for(let i=0;i<p.outChannels;++i){let o=0;for(let u=0;u<p.batchSize;++u)for(let l=e;l<t;++l){const e=N+l*d-w;for(let t=s;t<r;++t){const s=n+t*f-x;o+=y?I.get(u,e,s,a)*S.get(u,l,t,i):I.get(u,a,e,s)*S.get(u,i,l,t)}}b.set(o,N,n,a,i)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const Xb={kernelName:_.wm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=s;dm([r,a],"conv2dBackpropInput");const h=_.D5U.computeStrides(a.shape),p=_.D5U.computeStrides(r.shape);let d=_.Wap.convertConv2DDataFormat(l);const f=_.Wap.computeConv2DInfo(i,a.shape,o,1,u,c,!1,d),m=new _.YDk(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,b=n.data.get(a.dataId).values,[x,w,v]=h,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:T,inWidth:C,outChannels:$,outHeight:E,outWidth:A,strideHeight:D,strideWidth:R}=f;d=f.dataFormat;const F=I-1-f.padInfo.top,O=S-1-f.padInfo.left,M="channelsLast"===d,B=m.strides[0],z=M?m.strides[1]:m.strides[2],L=M?m.strides[2]:1,U=M?1:m.strides[1],W=p[0],P=M?p[1]:p[2],V=M?p[2]:1,G=M?1:p[1];for(let _=0;_<k;++_)for(let e=0;e<N;++e)for(let t=0;t<T;++t){const n=t-F,s=Math.max(0,Math.ceil(n/D)),r=Math.min(E,(I+n)/D);for(let a=0;a<C;++a){const i=a-O,o=Math.max(0,Math.ceil(i/R)),u=Math.min(A,(S+i)/R);let l=0;for(let t=s;t<r;++t){const s=t*D-n;for(let n=o;n<u;++n){const r=W*_+P*t+V*n,a=x*(I-1-s)+w*(S-1-(n*R-i))+v*e;for(let e=0;e<$;++e){l+=y[r+G*e]*b[a+e]}}}g[B*_+z*t+L*a+U*e]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const qb={kernelName:_.x12,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u}=s;dm([r,a],"conv3d");const l=_.Wap.computeConv3DInfo(r.shape,a.shape,i,u,o),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,w=new _.YDk(l.outShape,r.dtype),v=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,I=w.values,S=_.D5U.computeStrides(r.shape),N=_.D5U.computeStrides(a.shape);for(let T=0;T<l.batchSize;++T){const e=T*S[0],t=T*w.strides[0];for(let n=0;n<l.outDepth;++n){const s=t+n*w.strides[1],r=n*l.strideDepth-y;for(let t=0;t<c;++t){const n=r+t*d;if(n<0||n>=l.inDepth)continue;const a=t*N[0],i=e+n*S[1];for(let e=0;e<l.outHeight;++e){const t=s+e*w.strides[2],n=e*l.strideHeight-x;for(let e=0;e<h;++e){const s=n+e*f;if(s<0||s>=l.inHeight)continue;const r=a+e*N[1],o=i+s*S[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,s=e*l.strideWidth-b;for(let e=0;e<p;++e){const t=s+e*m;if(t<0||t>=l.inWidth)continue;const a=r+e*N[2],i=o+t*l.inChannels;let u=a;for(let e=0;e<l.inChannels;++e){const t=v[i+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const Kb={kernelName:_.o2y,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:u}=s;dm([r,a],"conv3dBackpropFilterV2");const l=_.D5U.computeStrides(r.shape),c=_.D5U.computeStrides(a.shape),h=_.Wap.computeConv3DInfo(r.shape,u,i,1,o),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new _.YDk(h.filterShape,"float32"),x=b.values,[w,v,k,I]=b.strides,S=n.data.get(a.dataId).values,[N,T,C,$]=c,E=n.data.get(r.dataId).values,[A,D,R,F]=l,O=h.padInfo.front,M=h.padInfo.left,B=h.padInfo.top;for(let _=0;_<m;++_){const e=Math.max(0,Math.ceil((O-_)/p)),t=Math.min(h.outDepth,(h.inDepth+O-_)/p),n=_*w;for(let s=0;s<g;++s){const r=Math.max(0,Math.ceil((B-s)/d)),a=Math.min(h.outHeight,(h.inHeight+B-s)/d),i=s*v+n;for(let n=0;n<y;++n){const o=Math.max(0,Math.ceil((M-n)/f)),u=Math.min(h.outWidth,(h.inWidth+M-n)/f),l=n*k+i;for(let i=0;i<h.inChannels;++i){const c=i*I+l;for(let l=0;l<h.outChannels;++l){let m=0;for(let c=0;c<h.batchSize;++c){const h=c*A,g=c*N;for(let c=e;c<t;++c){const e=(_+c*p-O)*D+h,t=c*T+g;for(let c=r;c<a;++c){const r=(s+c*d-B)*R+e,a=c*C+t;for(let e=o;e<u;++e){const t=e*$+a;m+=E[(n+e*f-M)*F+r+i]*S[t+l]}}}}x[c+l]=m}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const Qb={kernelName:_.ik2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:u}=s;dm([r],"conv3dBackpropInputV2");const l=_.D5U.computeStrides(r.shape),c=_.D5U.computeStrides(a.shape),h=_.Wap.computeConv3DInfo(u,a.shape,o,1,i),p=new _.YDk(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=n.data.get(r.dataId).values,[x,w,v,k]=l,I=n.data.get(a.dataId).values,[S,N,T,C]=c,{batchSize:$,filterDepth:E,filterHeight:A,filterWidth:D,inChannels:R,inDepth:F,inHeight:O,inWidth:M,outChannels:B,outDepth:z,outHeight:L,outWidth:U,strideDepth:W,strideHeight:P,strideWidth:V}=h,G=E-1-h.padInfo.front,H=A-1-h.padInfo.top,j=D-1-h.padInfo.left;for(let _=0;_<$;++_)for(let e=0;e<R;++e)for(let t=0;t<F;++t){const n=t-G,s=Math.max(0,Math.ceil(n/W)),r=Math.min(z,(E+n)/W);for(let a=0;a<O;++a){const i=a-H,o=Math.max(0,Math.ceil(i/P)),u=Math.min(L,(A+i)/P);for(let l=0;l<M;++l){const c=l-j,h=Math.max(0,Math.ceil(c/V)),p=Math.min(U,(D+c)/V);let $=0;for(let t=s;t<r;++t){const s=t*W-n;for(let n=o;n<u;++n){const r=n*P-i;for(let a=h;a<p;++a){const i=x*_+w*t+v*n+k*a,o=S*(E-1-s)+N*(A-1-r)+T*(D-1-(a*V-c))+C*e;for(let e=0;e<B;++e){$+=b[i+e]*I[o+e]}}}}d[f*_+m*t+g*a+y*l+e]=$}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},Yb=Wm(_.mc4,(e=>Math.cos(e))),Jb={kernelName:_.mc4,backendName:"cpu",kernelFunc:Yb},Zb=Wm(_.TR1,(e=>Math.cosh(e))),ex={kernelName:_.TR1,backendName:"cpu",kernelFunc:Zb};const tx={kernelName:_.VcC,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=s,[c,h,p,d]=r.shape,f=a.shape[0],[m,g]=o,y=(0,_.f3b)([f,m,g,d],"float32"),b=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(r.dataId).values,v=_.D5U.computeStrides(r.shape),k=_.D5U.computeStrides(y.shape);for(let I=0;I<f;I++){const e=4*I,t=b[e],n=b[e+1],s=b[e+2],r=b[e+3],a=x[I];if(a>=c)continue;const i=m>1?(s-t)*(h-1)/(m-1):0,o=g>1?(r-n)*(p-1)/(g-1):0;for(let c=0;c<m;c++){const e=m>1?t*(h-1)+c*i:.5*(t+s)*(h-1);if(e<0||e>h-1)for(let t=0;t<g;t++)for(let e=0;e<d;e++){const n=e+t*k[2]+c*k[1]+I*k[0];y.values[n]=l}else if("bilinear"===u){const t=Math.floor(e),s=Math.ceil(e),i=e-t;for(let e=0;e<g;e++){const u=g>1?n*(p-1)+e*o:.5*(n+r)*(p-1);if(u<0||u>p-1){for(let t=0;t<d;t++){const n=t+e*k[2]+c*k[1]+I*k[0];y.values[n]=l}continue}const h=Math.floor(u),f=Math.ceil(u),m=u-h;for(let n=0;n<d;n++){let r=n+h*v[2]+t*v[1]+a*v[0];const o=w[r];r=n+f*v[2]+t*v[1]+a*v[0];const u=w[r];r=n+h*v[2]+s*v[1]+a*v[0];const l=w[r];r=n+f*v[2]+s*v[1]+a*v[0];const p=o+(u-o)*m,d=l+(w[r]-l)*m;r=n+e*k[2]+c*k[1]+I*k[0],y.values[r]=p+(d-p)*i}}}else for(let t=0;t<g;++t){const s=g>1?n*(p-1)+t*o:.5*(n+r)*(p-1);if(s<0||s>p-1){for(let e=0;e<d;e++){const n=e+t*k[2]+c*k[1]+I*k[0];y.values[n]=l}continue}const i=Math.round(s),u=Math.round(e);for(let e=0;e<d;e++){const n=e+i*v[2]+u*v[1]+a*v[0],s=e+t*k[2]+c*k[1]+I*k[0];y.values[s]=w[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const nx={kernelName:_.Byc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;dm(r,"cumprod");const u=_.Wap.getAxesPermutation([a],r.shape.length);let l=r;null!=u&&(l=Vg({inputs:{x:r},backend:n,attrs:{perm:u}}));const c=_.Wap.getInnerMostAxes(1,r.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=(0,_.x8V)(l.dtype,"int32"),p=_.D5U.makeOnesTypedArray(_.D5U.sizeFromShape(l.shape),h),d=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<d.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)p[t]=i?1:d[t];else{const n=m(y,e-1);p[t]=i?d[n]*p[n]:d[t]*p[n]}}const g=n.makeTensorInfo(l.shape,h,p);if(null!=u){const e=Vg({inputs:{x:g},backend:n,attrs:{perm:_.Wap.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}};const sx={kernelName:_.iHb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;dm(r,"cumsum");const u=_.Wap.getAxesPermutation([a],r.shape.length);let l=r;null!=u&&(l=Vg({inputs:{x:r},backend:n,attrs:{perm:u}}));const c=_.Wap.getInnerMostAxes(1,r.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=(0,_.x8V)(l.dtype,"int32"),p=_.D5U.makeZerosTypedArray(_.D5U.sizeFromShape(l.shape),h),d=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<d.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)p[t]=i?0:d[t];else{const n=m(y,e-1);p[t]=i?d[n]+p[n]:d[t]+p[n]}}const g=n.makeTensorInfo(l.shape,h,p);if(null!=u){const e=Vg({inputs:{x:g},backend:n,attrs:{perm:_.Wap.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}};const rx={kernelName:_.QRR,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=Om(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===r.shape.length){const e=Mm(n.bufferSync(r),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};const ax={kernelName:_.T0n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s;_.D5U.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=r.shape[0],u=r.shape[1],l=r.shape[2],c=r.shape[3],h=u*a,p=l*a,d=c/(a*a),f=n.data.get(r.dataId).values,m=new Float32Array(o*h*p*d);let g=0;for(let y=0;y<o;++y)for(let e=0;e<h;++e){const t=Math.floor(e/a),n=e%a;for(let e=0;e<p;++e){const s=Math.floor(e/a),r=(n*a+e%a)*d;for(let e=0;e<d;++e){const n=e+r+c*(s+l*(t+u*y));m[g++]=f[n]}}}return n.makeTensorInfo([o,h,p,d],r.dtype,m)}};function ix(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=s;dm([r,a],"depthwiseConv2DNative");const c=_.D5U.computeStrides(r.shape),h=_.D5U.computeStrides(a.shape);let p=u;null==p&&(p=[1,1]),_.D5U.assert(_.Wap.eitherStridesOrDilationsAreOne(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));const d=_.Wap.computeConv2DInfo(r.shape,a.shape,i,p,o,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,x=b.left,w=b.top,v=d.outChannels/d.inChannels,k=new _.YDk(d.outShape,r.dtype),I=n.data.get(r.dataId).values,S=n.data.get(a.dataId).values,N=k.values;for(let T=0;T<d.batchSize;++T){const e=T*c[0],t=T*k.strides[0];for(let n=0;n<d.outHeight;++n){const s=t+n*k.strides[1],r=n*d.strideHeight-w;for(let t=0;t<f;++t){const n=r+t*g;if(n<0||n>=d.inHeight)continue;const a=t*h[0],i=e+n*c[1];for(let e=0;e<d.outWidth;++e){const t=s+e*k.strides[2],n=e*d.strideWidth-x;for(let e=0;e<m;++e){const s=n+e*y;if(s<0||s>=d.inWidth)continue;const r=a+e*h[1],o=i+s*d.inChannels;let u=t,l=r;for(let e=0;e<d.inChannels;++e){const t=I[o+e];for(let e=0;e<v;++e)N[u+e]+=t*S[l+e];u+=v,l+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const ox={kernelName:_.cie,backendName:"cpu",kernelFunc:ix};const ux={kernelName:_.sL$,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=s;dm([r,a],"depthwiseConv2dNativeBackpropFilter");const h=_.Wap.computeConv2DInfo(r.shape,c,i,o,u,l,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new _.YDk(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(r.dataId).values,v=new _.YDk(r.shape,r.dtype,w),k=n.data.get(a.dataId).values,I=new _.YDk(a.shape,a.dtype,k);for(let S=0;S<f;++S){const e=Math.max(0,Math.ceil((b-S)/p)),t=Math.min(h.outHeight,(h.inHeight+b-S)/p);for(let n=0;n<m;++n){const s=Math.max(0,Math.ceil((y-n)/d)),r=Math.min(h.outWidth,(h.inWidth+y-n)/d);for(let a=0;a<h.outChannels;++a){const i=Math.trunc(a/x),o=a%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let o=e;o<t;++o){const e=S+o*p-b;for(let t=s;t<r;++t){const s=n+t*d-y;u+=v.get(l,e,s,i)*I.get(l,o,t,a)}}g.set(u,S,n,i,o)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const lx={kernelName:_.y7R,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=s;dm([r,a],"depthwiseConv2DNativeBackpropInput");const h=_.D5U.computeStrides(r.shape),p=_.D5U.computeStrides(a.shape),d=_.Wap.computeConv2DInfo(c,a.shape,i,o,u,l,!0),f=new _.YDk(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(r.dataId).values,[w,v,k]=h,I=n.data.get(a.dataId).values,[S,N,T]=p,{batchSize:C,filterHeight:$,filterWidth:E,inChannels:A,inHeight:D,inWidth:R,outChannels:F,outHeight:O,outWidth:M,strideHeight:B,strideWidth:z}=d,L=$-1-d.padInfo.top,U=E-1-d.padInfo.left,W=F/A;for(let _=0;_<C;++_)for(let e=0;e<A;++e)for(let t=0;t<D;++t){const n=t-L,s=Math.max(0,Math.ceil(n/B)),r=Math.min(O,($+n)/B);for(let a=0;a<R;++a){const i=a-U,o=Math.max(0,Math.ceil(i/z)),u=Math.min(M,(E+i)/z);let l=0;for(let t=s;t<r;++t){const s=t*B-n;for(let n=o;n<u;++n){const r=w*_+v*t+k*n,a=S*($-1-s)+N*(E-1-(n*z-i))+T*e;for(let t=0;t<W;++t){l+=x[r+(e*W+t)]*I[a+t]}}}m[g*_+y*t+b*a+e]=l}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const cx={kernelName:_.$w,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=_.D5U.sizeFromShape(s.shape),a=n.data.get(s.dataId).values,i=(0,_.f3b)([r,r],s.dtype),o=i.values;for(let l=0;l<a.length;l++)o[l*r+l]=a[l];const u=[...s.shape,...s.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},hx={kernelName:_.p4S,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r}=e,{strides:a,pad:i,dilations:o}=n,u=t,l=u.data.get(s.dataId).values,c=s.shape.length,h=u.data.get(r.dataId).values,p=r.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=_.Wap.computeDilation2DInfo(s.shape,r.shape,a,i,"NHWC",o),C=_.D5U.sizeFromShape(T),$=T.length,E=_.D5U.getArrayFromDType(s.dtype,C);for(let A=0;A<d;++A)for(let e=0;e<y;++e){const t=e*w-x.top;for(let n=0;n<b;++n){const a=n*v-x.left;for(let i=0;i<g;++i){let o=Number.MIN_SAFE_INTEGER;for(let e=0;e<k;++e){const n=t+e*S;if(n>=0&&n<f)for(let t=0;t<I;++t){const u=a+t*N;if(u>=0&&u<m){const a=_.D5U.locToIndex([A,n,u,i],c,_.D5U.computeStrides(s.shape)),d=_.D5U.locToIndex([e,t,i],p,_.D5U.computeStrides(r.shape)),f=l[a]+h[d];f>o&&(o=f)}}}E[_.D5U.locToIndex([A,e,n,i],$,_.D5U.computeStrides(T))]=o}}}return{dataId:u.write(_.D5U.toTypedArray(E,s.dtype),T,s.dtype),shape:T,dtype:s.dtype}}},px={kernelName:_.Vn9,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=_.D5U.toNestedArray(s.shape,l.data.get(s.dataId).values),h=_.D5U.toNestedArray(r.shape,l.data.get(r.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=_.Wap.computeDilation2DInfo(s.shape,r.shape,i,o,"NHWC",u);_.D5U.assert(a.rank===N.length,(()=>`Error in ${_.Vn9}, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const T=_.D5U.toNestedArray(N,l.data.get(a.dataId).values),C=_.D5U.makeZerosNestedTypedArray(r.shape,r.dtype);for(let $=0;$<p;++$)for(let e=0;e<g;++e){const t=e*x-b.top;for(let n=0;n<y;++n){const s=n*w-b.left;for(let r=0;r<m;++r){let a=Number.MIN_SAFE_INTEGER,i=0,o=0;for(let e=0;e<v;++e){const n=t+e*I;if(n>=0&&n<d)for(let t=0;t<k;++t){const u=s+t*S;if(u>=0&&u<f){const s=c[$][n][u][r]+h[e][t][r];s>a&&(a=s,i=e,o=t)}}}C[i][o][r]+=T[$][e][n][r]}}}return{dataId:l.write(_.D5U.toTypedArray(C,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},dx={kernelName:_.ekb,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=_.D5U.toNestedArray(s.shape,l.data.get(s.dataId).values),h=_.D5U.toNestedArray(r.shape,l.data.get(r.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=_.Wap.computeDilation2DInfo(s.shape,r.shape,i,o,"NHWC",u);_.D5U.assert(a.rank===N.length,(()=>`Error in ${_.ekb}, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const T=_.D5U.toNestedArray(N,l.data.get(a.dataId).values),C=_.D5U.makeZerosNestedTypedArray(s.shape,s.dtype);for(let $=0;$<p;++$)for(let e=0;e<g;++e){const t=e*x-b.top;for(let n=0;n<y;++n){const s=n*w-b.left;for(let r=0;r<m;++r){let a=Number.MIN_SAFE_INTEGER,i=t<0?0:t,o=s<0?0:s;for(let e=0;e<v;++e){const n=t+e*I;if(n>=0&&n<d)for(let t=0;t<k;++t){const u=s+t*S;if(u>=0&&u<f){const s=c[$][n][u][r]+h[e][t][r];s>a&&(a=s,i=n,o=u)}}}C[$][i][o][r]+=T[$][e][n][r]}}}return{dataId:l.write(_.D5U.toTypedArray(C,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};const fx={kernelName:_.hGc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r}=t,{canvas:a,options:i}=s,{contextOptions:o,imageOptions:u}=i||{},l=(null==u?void 0:u.alpha)||1,c=(null==o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=a.getContext(c,(null==o?void 0:o.contextAttributes)||{});if(null==h)throw new Error(`Could not get the context with ${c} type.`);const[p,d]=r.shape.slice(0,2),f=2===r.shape.length?1:r.shape[2],m=n.data.get(r.dataId).values,g="float32"===r.dtype?255:1,y=new Uint8ClampedArray(d*p*4);for(let x=0;x<p*d;++x){const e=[0,0,0,255*l];for(let n=0;n<f;n++){const t=m[x*f+n];if("float32"===r.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===r.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===f?(e[0]=t*g,e[1]=t*g,e[2]=t*g):e[n]=t*g}const t=4*x;y[t+0]=Math.round(e[0]),y[t+1]=Math.round(e[1]),y[t+2]=Math.round(e[2]),y[t+3]=Math.round(e[3])}a.width=d,a.height=p;const b=new ImageData(y,d,p);return h.putImageData(b,0,0),r}};function mx(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;let o;dm(r,"sum"),o="bool"===r.dtype?Cm({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):km({inputs:{x:r},backend:n});const u=o.shape.length,l=_.D5U.parseAxisParam(a,o.shape),c=_.Wap.getAxesPermutation(l,u);let h=l,p=o;null!=c&&(p=Vg({inputs:{x:o},backend:n,attrs:{perm:c}}),h=_.Wap.getInnerMostAxes(h.length,u)),_.Wap.assertAxesAreInnerMostDims("sum",h,p.shape.length);const[d,f]=_.Wap.computeOutAndReduceShapes(p.shape,h);let m=vm(n,d,_.Wap.upcastType(p.dtype,"int32"));const g=_.D5U.sizeFromShape(f),y=n.data.get(m.dataId).values,b=n.data.get(p.dataId).values;for(let x=0;x<y.length;++x){const e=x*g;let t=0;for(let n=0;n<g;++n)t+=b[e+n];y[x]=t}if(i){const e=m;m=tb({inputs:{x:m},backend:n,attrs:{shape:_.Wap.expandShapeToKeepDim(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(p),m}const gx={kernelName:_.GBy,backendName:"cpu",kernelFunc:mx};const yx={kernelName:_.$g6,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:u}=_.Wap.decodeEinsumEquation(r,a.length);_.Wap.checkEinsumDimSizes(i.length,u,a);const{path:l,steps:c}=_.Wap.getEinsumComputePath(o,u),h=c.length;let p=null,d=i.length;const f=[];for(let m=0;m<h;++m){for(const e of c[m]){const{permutationIndices:t,expandDims:s}=_.Wap.getEinsumPermutation(d,u[e]);let r;_.Wap.isIdentityPermutation(t)?r=a[e]:(r=Vg({inputs:{x:a[e]},backend:n,attrs:{perm:t}}),f.push(r));const i=r.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);_.D5U.arraysEqual(r.shape,i)||(r=tb({inputs:{x:r},backend:n,attrs:{shape:i}}),f.push(r)),null===p?p=r:(p=Og({inputs:{a:r,b:p},backend:n}),f.push(p))}m<h-1&&(l[m]>=0&&(p=mx({inputs:{x:p},backend:n,attrs:{axis:l[m]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}};const bx={kernelName:_.HEU,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:s,y:r}=t;dm([s,r],"eluGrad");const a=new Float32Array(_.D5U.sizeFromShape(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values;for(let u=0;u<i.length;++u){const e=i[u];a[u]=e>=0?o[u]:o[u]*(e+1)}return n.makeTensorInfo(r.shape,"float32",a)}},xx=_.Wap.ERF_P,wx=_.Wap.ERF_A1,vx=_.Wap.ERF_A2,kx=_.Wap.ERF_A3,Ix=_.Wap.ERF_A4,Sx=_.Wap.ERF_A5,Nx=Wm(_.Omj,(e=>{const t=Math.sign(e),n=Math.abs(e),s=1/(1+xx*n);return t*(1-((((Sx*s+Ix)*s+kx)*s+vx)*s+wx)*s*Math.exp(-n*n))})),Tx={kernelName:_.Omj,backendName:"cpu",kernelFunc:Nx};function Cx(e){const{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,i=r.shape.length,o=r.shape.slice();let u=a;return a<0&&(_.D5U.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+a+1),o.splice(u,0,1),tb({inputs:{x:r},backend:n,attrs:{shape:o}})}const $x={kernelName:_.YFo,backendName:"cpu",kernelFunc:Cx},Ex=bm(((e,t)=>e/t)),Ax=Em(_.oHH,Ex),Dx={kernelName:_.oHH,backendName:"cpu",kernelFunc:Ax};function Rx(e,t,n){const s=e.shape,r=s[0],a=s[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[r,a],c=_.D5U.sizeFromShape(l),h=_.D5U.getTypedArrayFromDType("float32",c),p=_.D5U.getTypedArrayFromDType("float32",c);for(let g=0;g<r;g++){const e=dy({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,a]}}),s=dy({inputs:{x:u},backend:n,attrs:{begin:[g,0],size:[1,a]}}),r=xm({inputs:{real:e,imag:s},backend:n}),{real:i,imag:l}=_x(r,t,n),c=_.Wap.mergeRealAndImagArrays(i,l);for(let t=0;t<a;t++){const e=_.Wap.getComplexWithIndex(c,t);h[g*a+t]=e.real,p[g*a+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r)}const d=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",p),m=xm({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}function _x(e,t,n){const s=_.D5U.sizeFromShape(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0==((o=s)&o-1)){const r=Fx(a,i,s,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",r.real),t=n.makeTensorInfo(o,"float32",r.imag),a=n.makeTensorInfo([],"float32",_.D5U.createScalarValue(s,"float32")),i=km({inputs:{x:a},backend:n}),u=Dx.kernelFunc({inputs:{a:e,b:a},backend:n}),l=Dx.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return r}{const e=function(e,t,n){const s=new Float32Array(2*t);for(let r=0;r<t;r++){let a=0,i=0;for(let s=0;s<t;s++){const o=_.Wap.exponent(r*s,t,n),u=_.Wap.getComplexWithIndex(e,s);a+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(a/=t,i/=t),_.Wap.assignToTypedArray(s,a,i,r)}return s}(_.Wap.mergeRealAndImagArrays(a,i),s,t);return _.Wap.splitRealAndImagArrays(e)}var o}function Fx(e,t,n,s,r){if(1===n)return{real:e,imag:t};const a=_.Wap.mergeRealAndImagArrays(e,t),i=n/2,o=_.Wap.complexWithEvenIndex(a),u=o.real,l=o.imag,c=[u.length],h=r.makeTensorInfo(c,"float32",u),p=r.makeTensorInfo(c,"float32",l),d=xm({inputs:{real:h,imag:p},backend:r}),f=_.Wap.complexWithOddIndex(a),m=f.real,g=f.imag,y=[m.length],b=r.makeTensorInfo(y,"float32",m),x=r.makeTensorInfo(y,"float32",g),w=xm({inputs:{real:b,imag:x},backend:r}),v=Fx(u,l,i,s,r),k=v.real,I=v.imag,S=[k.length],N=r.makeTensorInfo(S,"float32",k),T=r.makeTensorInfo(S,"float32",I),C=xm({inputs:{real:N,imag:T},backend:r}),$=Fx(m,g,i,s,r),E=$.real,A=$.imag,D=[E.length],R=r.makeTensorInfo(D,"float32",E),F=r.makeTensorInfo(D,"float32",A),O=xm({inputs:{real:R,imag:F},backend:r}),M=_.Wap.exponents(n,s),B=[M.real.length],z=r.makeTensorInfo(B,"float32",M.real),L=r.makeTensorInfo(B,"float32",M.imag),U=xm({inputs:{real:z,imag:L},backend:r}),W=Og({inputs:{a:U,b:O},backend:r}),P=_m({inputs:{a:C,b:W},backend:r}),V=Oy({inputs:{a:C,b:W},backend:r}),G=Sm({inputs:{input:P},backend:r}),H=Sm({inputs:{input:V},backend:r}),j=Ub({inputs:{input:P},backend:r}),X=Ub({inputs:{input:V},backend:r}),q=Pb({inputs:[G,H],backend:r,attrs:{axis:0}}),K=Pb({inputs:[j,X],backend:r,attrs:{axis:0}}),Q=r.data.get(q.dataId).values,Y=r.data.get(K.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(X),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(K),{real:Q,imag:Y}}const Ox={kernelName:_.vwp,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=_.D5U.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],i=tb({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=Rx(i,!1,n),u=tb({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function Mx(e){const{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,i=a||_.D5U.inferDtype(r),o=_.D5U.getArrayFromDType(i,_.D5U.sizeFromShape(s));return function(e,t,n){e.fill(t)}(o,r),t.makeTensorInfo(s,i,o)}const Bx={kernelName:_.deh,backendName:"cpu",kernelFunc:Mx};const zx={kernelName:_.Uyb,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,r=n,a=_.D5U.getTypedArrayFromDType(s.dtype,_.D5U.sizeFromShape(s.shape)),[i,o,u,l]=s.shape,c=r.data.get(s.dataId).values;for(let h=0;h<i;h++){const e=h*u*o*l;for(let t=0;t<o;t++){const n=t*(u*l);for(let t=0;t<u;t++){const s=t*l;for(let r=0;r<l;r++){const i=Math.round(u-t-1),o=e+n+s+r;let h=c[o];if(i>=0&&i<u){h=c[e+n+i*l+r]}a[o]=h}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};const Lx={kernelName:_._V0,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s;let m=Gb({inputs:{x:r,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=tb({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=_m({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=_m({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(d){const e=m;if("NCHW"===c&&"prelu"===d&&1===o.shape.length&&1!==o.shape[0]){const e=tb({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=eb(n,m,d,e,f),n.disposeIntermediateTensorInfo(e)}else m=eb(n,m,d,o,f);n.disposeIntermediateTensorInfo(e)}return m}};const Ux={kernelName:_.luS,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s;let m=ix({inputs:{x:r,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=_m({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=eb(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}};const Wx={kernelName:_.q1x,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=_.D5U.sizeFromShape(s.shape),i=r.shape,o=i[i.length-1],[u,l,c,h]=_.Wap.prepareAndValidate(s,r);if(0===l)return n.makeTensorInfo(u,s.dtype,[]);const p=ug(n.data.get(r.dataId).values,n.bufferSync(s),s.dtype,l,o,c,h,s.shape,a);return n.makeTensorInfo(u,s.dtype,p.values)}};const Px={kernelName:_.qi_,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s;dm([r,a],"gatherV2");const u=_.D5U.parseAxisParam(i,r.shape)[0],l=n.data.get(a.dataId).values,c=r.shape[u];for(let x=0;x<l.length;++x){const e=l[x];_.D5U.assert(e<=c-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const p=_.D5U.sizeFromShape(a.shape),d=_.Wap.segment_util.collectGatherOpShapeInfo(r,a,u,h),f=tb({inputs:{x:r},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=tb({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,p/d.batchSize]}}),g=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize],y=n.bufferSync(m),b=lg(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(d.outputShape,b.dtype,b.values)}};const Vx={kernelName:_.Qg5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=_.D5U.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],i=tb({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=Rx(i,!0,n),u=tb({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},Gx=Wm(_.avt,(e=>Number.isFinite(e)?1:0),"bool"),Hx={kernelName:_.avt,backendName:"cpu",kernelFunc:Gx},jx=Wm(_.iWB,(e=>Math.abs(e)===1/0?1:0),"bool"),Xx={kernelName:_.iWB,backendName:"cpu",kernelFunc:jx},qx=Wm(_.r7n,(e=>Number.isNaN(e)?1:0),"bool"),Kx={kernelName:_.r7n,backendName:"cpu",kernelFunc:qx};const Qx={kernelName:_.e7N,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=kg(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}},Yx=Wm(_.kU,(e=>Math.log1p(e))),Jx={kernelName:_.kU,backendName:"cpu",kernelFunc:Yx},Zx=bm(((e,t)=>e&&t)),ew=Em(_.PYm,Zx,null,"bool"),tw={kernelName:_.PYm,backendName:"cpu",kernelFunc:ew},nw=Wm(_.VfG,(e=>e?0:1),"bool"),sw={kernelName:_.VfG,backendName:"cpu",kernelFunc:nw},rw=bm(((e,t)=>e||t)),aw=Em(_.MZg,rw,null,"bool"),iw={kernelName:_.MZg,backendName:"cpu",kernelFunc:aw};const ow={kernelName:_.eZ0,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=s;dm(r,"LRN");const l=r.shape[3],c=l-1,h=n.data.get(r.dataId).values,p=_.D5U.sizeFromShape(r.shape),d=new Float32Array(p);function f(e){const t=e%l;let n=e-t+Math.max(0,t-a);const s=e-t+Math.min(t+a,c);let r=0;for(;n<=s;n++){const e=h[n];r+=e*e}return r}for(let m=0;m<p;m++){const e=f(m),t=h[m]*Math.pow(i+o*e,-u);d[m]=t}return n.makeTensorInfo(r.shape,r.dtype,d)}};const uw={kernelName:_.Hhh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=s;dm(i,"LRNGrad");const h=_.D5U.sizeFromShape(i.shape),p=i.shape[3],d=n.data.get(i.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(h),y=h;for(let b=0;b<y;b++){const e=b%p,t=b-e+Math.max(0,e-o),n=b-e+Math.min(p,e+o+1);let s=0;for(let r=t;r<n;r++)s+=Math.pow(f[r],2);s=l*s+u;for(let r=t;r<n;r++){let e=-2*l*c*f[r]*m[b]/s;b===r&&(e+=Math.pow(s,-c)),e*=d[b],g[r]+=e}}return n.makeTensorInfo(i.shape,r.dtype,g)}};function lw(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=n;let u=r.shape;const l=u.length,c=_.D5U.parseAxisParam(a,u);let h=c;const p=_.Wap.getAxesPermutation(h,l);let d=o.data.get(r.dataId).values;if(null!=p){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[p[t]];d=Pg(d,u,r.dtype,p,e),h=_.Wap.getInnerMostAxes(h.length,l),u=e}dm(r,"max"),_.Wap.assertAxesAreInnerMostDims("max",h,l);const[f,m]=_.Wap.computeOutAndReduceShapes(u,h),g=Tg(d,_.D5U.sizeFromShape(m),f,r.dtype),y=o.write(g,f,r.dtype);let b=f;if(i){b=_.Wap.expandShapeToKeepDim(f,c)}return{dataId:y,shape:b,dtype:r.dtype}}const cw={kernelName:_.YoZ,backendName:"cpu",kernelFunc:lw};const hw={kernelName:_.mTV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;dm(r,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s;_.D5U.assert(_.Wap.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=_.Wap.computePool2DInfo(r.shape,a,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&_.D5U.arraysEqual(l.inShape,l.outShape))c=km({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=_.D5U.computeStrides(r.shape),s=Tb(e,r.shape,r.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,r.dtype,s.values)}return c}};const pw={kernelName:_.OAf,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=s;dm(r,"maxPool3d");const c=_.Wap.computePool3DInfo(r.shape,a,i,1,o,u,l),h=$b(n.data.get(r.dataId).values,r.shape,r.dtype,_.D5U.computeStrides(r.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};const dw={kernelName:_.OU7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=s;dm([r,a],"maxPool3DGrad");const c=_.Wap.computePool3DInfo(a.shape,i,o,1,u,l),h=function(e,t){const n=(0,_.f3b)(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*s-p;let x=b;for(;x<0;)x+=i;const w=Math.min(t.inDepth,l+b);for(let s=0;s<t.outHeight;++s){const l=s*r-d;let p=l;for(;p<0;)p+=o;const v=Math.min(t.inHeight,c+l);for(let r=0;r<t.outWidth;++r){const d=r*a-f;let k=d;for(;k<0;)k+=u;const I=Math.min(t.inWidth,h+d);let S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<w;t+=i){const n=t-b;for(let s=p;s<v;s+=o){const r=s-l;for(let a=k;a<I;a+=u){const i=a-d,o=e.get(m,t,s,a,g);o>=S&&(S=o,N=n*c*h+r*c+i)}}}n.set(N,m,y,s,r,g)}}}return n}(n.bufferSync(a),c),p=c.strideDepth,d=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,w=c.effectiveFilterWidth,v=b-1-c.padInfo.front,k=w-1-c.padInfo.left,I=x-1-c.padInfo.top,S=(0,_.f3b)(a.shape,"float32"),N=n.bufferSync(r);for(let T=0;T<c.batchSize;++T)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let s=0;s<c.inWidth;++s){const r=t-v,a=n-I,i=s-k;let o=0;for(let t=0;t<b;t+=m){const n=(r+t)/p;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let s=0;s<x;s+=g){const r=(a+s)/d;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let a=0;a<w;a+=y){const u=(i+a)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const l=b*x*w-1-h.get(T,n,r,u,e)===t*x*w+s*w+a?1:0;if(0===l)continue;o+=N.get(T,n,r,u,e)*l}}}S.set(o,T,t,n,s,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const fw={kernelName:_.OV7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;dm([a,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=s,p=_.Wap.computePool2DInfo(o.shape,u,l,1,c,h),d=n.data.get(o.dataId).values,f=(0,_.f3b)(p.outShape,o.dtype,Cb(d,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,w=p.effectiveFilterWidth,v=w-1-p.padInfo.left,k=x-1-p.padInfo.top,I=(0,_.f3b)(o.shape,"float32"),S=n.data.get(r.dataId).values,N=(0,_.f3b)(r.shape,"float32",S);for(let T=0;T<p.batchSize;++T)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inHeight;++t)for(let n=0;n<p.inWidth;++n){const s=t-k,r=n-v;let a=0;for(let t=0;t<x;t+=y){const n=(s+t)/m;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let s=0;s<w;s+=b){const i=(r+s)/g;if(i<0||i>=p.outWidth||Math.floor(i)!==i)continue;const o=x*w-1-f.get(T,n,i,e)===t*w+s?1:0;if(0===o)continue;a+=N.get(T,n,i,e)*o}}I.set(a,T,t,n,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const mw={kernelName:_.vFR,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;dm(s,"MaxPoolWithArgmax");const l=u.data.get(s.dataId).values,c=_.Wap.computePool2DInfo(s.shape,r,a,[1,1],i),[h,p]=function(e,t,n,s,r){const a=Tb(e,0,n,_.D5U.computeStrides(t),r,"max"),i=Cb(e,t,n,r,!0,s);return[a.values,i.values]}(l,s.shape,s.dtype,o,c),d=u.write(h,c.outShape,s.dtype),f=u.write(p,c.outShape,s.dtype);return[{dataId:d,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};const gw={kernelName:_.q2K,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=_.D5U.parseAxisParam(a,r.shape),u=_.Wap.computeOutAndReduceShapes(r.shape,o)[1],l=_.D5U.sizeFromShape(u),c=[],h=n.makeTensorInfo([],"float32",new Float32Array([l]));c.push(h);const p=Cm({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});c.push(p);const d=Ax({inputs:{a:p,b:h},backend:n});c.push(d);const f=mx({inputs:{x:d},backend:n,attrs:{axis:a,keepDims:i}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};const yw={kernelName:_.c17,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;dm(r,"min");const o=_.D5U.parseAxisParam(a,r.shape);let u=o;const l=_.Wap.getAxesPermutation(u,r.shape.length);let c=r;null!=l&&(c=Vg({inputs:{x:r},backend:n,attrs:{perm:l}}),u=_.Wap.getInnerMostAxes(u.length,r.shape.length)),_.Wap.assertAxesAreInnerMostDims("min",u,c.shape.length);const[h,p]=_.Wap.computeOutAndReduceShapes(c.shape,u),d=_.D5U.sizeFromShape(p),f=_.D5U.makeZerosTypedArray(_.D5U.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*d;let t=m[e];for(let n=0;n<d;++n){const s=m[e+n];(Number.isNaN(s)||s<t)&&(t=s)}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=tb({inputs:{x:g},backend:n,attrs:{shape:_.Wap.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const bw={kernelName:_.jQs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:i}=s;dm(r,"mirrorPad");const o=a.map(((e,t)=>e[0]+r.shape[t]+e[1])),u=a.map((e=>e[0])),l=a.map(((e,t)=>e[0]+r.shape[t])),c="reflect"===i?0:1,h=n.data.get(r.dataId).values,p=r.shape.length,d=_.D5U.computeStrides(r.shape),f=_.D5U.sizeFromShape(o),m=o.length,g=_.D5U.computeStrides(o),y=_.D5U.getTypedArrayFromDType(r.dtype,f);for(let b=0;b<f;b++){let e=_.D5U.indexToLoc(b,m,g);for(let n=0;n<m;n++)e[n]<u[n]?e[n]=2*u[n]-e[n]-c:e[n]>=l[n]&&(e[n]=2*(l[n]-1)-e[n]+c);e=e.map(((e,t)=>e-u[t]));const t=_.D5U.locToIndex(e,p,d);y[b]=h[t]}return{dataId:n.write(y,o,r.dtype),shape:o,dtype:r.dtype}}},xw=bm(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),ww=Em(_.Vbg,xw),vw={kernelName:_.Vbg,backendName:"cpu",kernelFunc:ww};function kw(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=r.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=_.D5U.parseAxisParam([o],r.shape),l=lw({inputs:{x:r},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=_.Wap.expandShapeToKeepDim(l.shape,u),h=tb({inputs:{x:l},backend:n,attrs:{shape:c}}),p=Oy({inputs:{a:r,b:h},backend:n}),d=Ym({inputs:{x:p},backend:n}),f=mx({inputs:{x:d},backend:n,attrs:{axis:u,keepDims:!1}}),m=tb({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Ax({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const Iw={kernelName:_.Gcp,backendName:"cpu",kernelFunc:kw};const Sw={kernelName:_.NZg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s;dm(r,"multinomial");const u=o?r:kw({inputs:{logits:r},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,p=[l,a],d=_.D5U.makeZerosTypedArray(_.D5U.sizeFromShape(p),"int32");for(let f=0;f<l;++f){const e=f*c,t=new Float32Array(c-1);t[0]=h[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+h[e+r];const n=nf.alea(i.toString()),s=f*a;for(let r=0;r<a;++r){const e=n();d[s+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){d[s+r]=n;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(p,"int32",d)}},Nw=_.GDt.nonMaxSuppressionV3Impl;const Tw={kernelName:_.uv1,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=s;dm(r,"NonMaxSuppression");const l=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=Nw(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Cw=_.GDt.nonMaxSuppressionV4Impl;const $w={kernelName:_.cye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=s;dm(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:d}=Cw(c,h,i,o,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},Ew=_.GDt.nonMaxSuppressionV5Impl;const Aw={kernelName:_.W0H,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=s;dm(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,p=i,d=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=Ew(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};const Dw={kernelName:_.we_,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{dtype:a,depth:i,onValue:o,offValue:u}=s;dm(r,"oneHot");const l=_.D5U.sizeFromShape(r.shape),c=new Float32Array(l*i);c.fill(u);const h=n.data.get(r.dataId).values;for(let p=0;p<l;++p)h[p]>=0&&h[p]<i&&(c[p*i+h[p]]=o);return n.makeTensorInfo([...r.shape,i],a,c)}};function Rw(e){const{inputs:t,backend:n}=e,{x:s}=t;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const e=Sm({inputs:{input:s},backend:n}),t=Rw({inputs:{x:e},backend:n}),r=Ub({inputs:{input:s},backend:n}),a=Rw({inputs:{x:r},backend:n}),i=xm({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return Mx({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const _w={kernelName:_.RuY,backendName:"cpu",kernelFunc:Rw};const Fw={kernelName:_.qWM,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=Sm({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=Ub({inputs:{input:r},backend:s}),i=Rw({inputs:{x:a},backend:s}),o=xm({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return Mx({backend:s,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function Ow(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return Cx({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{_.D5U.assertShapesMatch(a,e.shape,"All tensors passed to stack must have matching shapes"),_.D5U.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=Pb({inputs:t.map((e=>{const t=Cx({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const Mw={kernelName:_.QiL,backendName:"cpu",kernelFunc:Ow};const Bw={kernelName:_.lyA,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;dm(r,"pad");const o=a.map(((e,t)=>e[0]+r.shape[t]+e[1])),u=a.map((e=>e[0])),l=n.data.get(r.dataId).values,c=_.D5U.sizeFromShape(r.shape),h=r.shape.length,p=_.D5U.computeStrides(r.shape),d=_.D5U.sizeFromShape(o),f=o.length,m=_.D5U.computeStrides(o),g=_.D5U.getTypedArrayFromDType(r.dtype,d);0!==i&&g.fill(i);for(let y=0;y<c;y++){const e=_.D5U.indexToLoc(y,h,p).map(((e,t)=>e+u[t]));g[_.D5U.locToIndex(e,f,m)]=l[y]}return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}},zw=bm(((e,t)=>Math.pow(e,t))),Lw=Em(_.pe_,zw),Uw={kernelName:_.pe_,backendName:"cpu",kernelFunc:Lw};const Ww={kernelName:_.dDz,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{paramsNestedSplits:r,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=s,u=r.map((e=>n.data.get(e.dataId).values)),l=r.map((e=>e.shape)),c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,[p,d,f]=Qg(u,l,c,a.shape,a.dtype,h,i.shape),m=p.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,d);return m.concat([g])}};const Pw={kernelName:_.CQl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:s,limits:r,deltas:a}=t,i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,[l,c]=Jg(i,s.shape,s.dtype,o,r.shape,u,a.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([c.length],s.dtype,c)]}};const Vw={kernelName:_.BiW,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{shape:r,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=s,l=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,p=o.map((e=>n.data.get(e.dataId).values)),d=o.map((e=>e.shape)),[f,m]=sy(l,r.shape,c,a.shape,a.dtype,h,i.shape,p,d,u);return n.makeTensorInfo(f,a.dtype,m)}};const Gw={kernelName:_.e6w,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:i}=n,o=ry(s,r,i,a);return t.makeTensorInfo([o.length],a,o)}},Hw=Wm(_.$HU,(e=>1/e)),jw={kernelName:_.$HU,backendName:"cpu",kernelFunc:Hw};const Xw={kernelName:_._Yw,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;dm(r,"resizeBilinear");const u=_.D5U.computeStrides(r.shape),[l,c]=o,[h,p,d,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(_.D5U.sizeFromShape([h,l,c,f])),y=[a&&l>1?p-1:p,a&&c>1?d-1:d],b=[a&&l>1?l-1:l,a&&c>1?c-1:c];let x=0;const w=y[0]/b[0],v=y[1]/b[1];for(let k=0;k<h;k++)for(let e=0;e<l;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),s=t-n,r=Math.min(p-1,Math.ceil(t)),a=k*u[0]+n*u[1],o=k*u[0]+r*u[1];for(let e=0;e<c;e++){let t;t=i?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),r=t-n,l=Math.min(d-1,Math.ceil(t)),c=a+n*u[2],h=o+n*u[2],p=a+l*u[2],y=o+l*u[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],a=t+(m[p+e]-t)*r,i=a+(n+(m[y+e]-n)*r-a)*s;g[x++]=i}}}return n.makeTensorInfo([h,l,c,f],"float32",g)}};const qw={kernelName:_.zbQ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;dm([a,r],"resizeBilinearGrad");const o=_.D5U.computeStrides(r.shape),[u,l,c,h]=r.shape,[,p,d]=a.shape,f=new Float32Array(u*l*c*h),m=[i&&p>1?l-1:l,i&&d>1?c-1:c],g=[i&&p>1?p-1:p,i&&d>1?d-1:d],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(a.dataId).values;let w=0;for(let v=0;v<u;v++){const e=v*o[0];for(let t=0;t<p;t++){const n=t*y,s=Math.floor(n),r=Math.min(Math.ceil(n),l-1),a=e+s*o[1],i=e+r*o[1],u=n-s,p=1-u;for(let e=0;e<d;e++){const t=e*b,n=Math.floor(t),s=Math.min(Math.ceil(t),c-1),r=t-n,l=1-r,d=a+n*o[2],m=a+s*o[2],g=i+n*o[2],y=i+s*o[2],v=p*l,k=p*r,I=u*l,S=u*r;for(let e=0;e<h;e++){const t=x[w++];f[d+e]+=t*v,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*S}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}};const Kw={kernelName:_.dpD,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;dm(r,"resizeNearestNeighbor");const u=_.D5U.computeStrides(r.shape),[l,c]=o,[h,p,d,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(h*l*c*f),y=[a&&l>1?p-1:p,a&&c>1?d-1:d],b=[a&&l>1?l-1:l,a&&c>1?c-1:c],x=y[0]/b[0],w=y[1]/b[1];let v=0;for(let k=0;k<h;k++){const e=k*u[0];for(let t=0;t<l;t++){const n=i?x*(t+.5):x*t;let s=Math.min(p-1,a?Math.round(n):Math.floor(n));i&&(s=Math.max(0,s));const r=e+s*u[1];for(let e=0;e<c;e++){const t=i?w*(e+.5):w*e;let n=Math.min(d-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const s=r+n*u[2];for(let e=0;e<f;e++){const t=m[s+e];g[v++]=t}}}}return n.makeTensorInfo([h,l,c,f],r.dtype,g)}};const Qw={kernelName:_.Hmb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;dm([a,r],"resizeNearestNeighborGrad");const o=_.D5U.computeStrides(r.shape),u=_.D5U.computeStrides(a.shape),[l,c,h,p]=r.shape,[,d,f]=a.shape,m=new Float32Array(l*c*h*p),g=n.data.get(a.dataId).values,y=[i&&d>1?c-1:c,i&&f>1?h-1:h],b=[i&&d>1?d-1:d,i&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],v=1/x,k=1/w,I=2*Math.ceil(v)+2,S=2*Math.ceil(k)+2;for(let N=0;N<l;N++){const e=N*o[0];for(let t=0;t<c;t++){const n=e+t*o[1],s=Math.floor(t*v),r=Math.floor(s-I/2);for(let a=0;a<h;a++){const s=n+a*o[2],l=Math.floor(a*k),y=Math.floor(l-S/2);for(let n=0;n<p;n++){let o=0;for(let s=0;s<I;s++){const l=s+r;if(l<0||l>=d)continue;const p=e+l*u[1],m=l*x;if(t===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){const t=e+y;if(t<0||t>=f)continue;const s=p+t*u[2],r=t*w;a===Math.min(h-1,i?Math.round(r):Math.floor(r))&&(o+=g[s+n])}}m[s+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}};const Yw={kernelName:_.mKl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;dm(r,"reverse");const i=r.shape.length,o=_.D5U.parseAxisParam(a,r.shape);if(0===i)return km({inputs:{x:r},backend:n});const u=new _.YDk(r.shape,r.dtype),l=n.bufferSync(r);for(let c=0;c<u.size;c++){const e=u.indexToLoc(c),t=e.slice();o.forEach((e=>t[e]=r.shape[e]-1-t[e])),u.set(l.get(...t),...e)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},Jw={kernelName:_.b9H,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,u=_.D5U.getTypedArrayFromDType(s.dtype,_.D5U.sizeFromShape(s.shape)),[l,c,h,p]=s.shape,[d,f]=_.Wap.getImageCenter(i,c,h),m=Math.sin(r),g=Math.cos(r),y=o.data.get(s.dataId).values;for(let b=0;b<l;b++){const e=b*h*c*p;for(let t=0;t<c;t++){const n=t*(h*p);for(let s=0;s<h;s++){const r=s*p;for(let i=0;i<p;i++){const o=[l,t,s,i],b=o[2],x=o[1];let w=(b-d)*g-(x-f)*m,v=(b-d)*m+(x-f)*g;w=Math.round(w+d),v=Math.round(v+f);let k=a;if("number"!=typeof a&&(k=3===i?255:a[i]),w>=0&&w<h&&v>=0&&v<c){k=y[e+v*(h*p)+w*p+i]}u[e+n+r+i]=k}}}}return{dataId:o.write(u,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Zw=Wm(_.e07,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),ev={kernelName:_.e07,backendName:"cpu",kernelFunc:Zw};const tv={kernelName:_.xQA,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=_.Wap.calculateShapes(a,r,i),p=uy(n.bufferSync(r),n.bufferSync(a),i,h,l,u,o,c,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}};function nv(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<t?n=r+1:s=r;return s}function sv(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<=t?n=r+1:s=r;return s}const rv={kernelName:_.nr8,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:a}=t,{side:i}=s,o=function(e,t,n,s,r,a){const i=_.D5U.getArrayFromDType("int32",n*r);for(let o=0;o<n;++o){const n=e.slice(o*s,(o+1)*s),u=o*r;for(let e=0;e<r;++e)i[u+e]="left"===a?nv(n,t[e+u]):sv(n,t[e+u])}return i}(n.data.get(r.dataId).values,n.data.get(a.dataId).values,r.shape[0],r.shape[1],a.shape[1],i);return n.makeTensorInfo(a.shape,"int32",o)}};const av={kernelName:_.PhF,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;dm([s,r,a],"select");const i=s.shape.length,o=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,c=(0,_.x8V)(r.dtype,a.dtype),h=_.D5U.makeZerosTypedArray(_.D5U.sizeFromShape(r.shape),c);let p=0;const d=0===i||i>1||1===r.shape.length?1:_.D5U.sizeFromShape(r.shape.slice(1));for(let f=0;f<o.length;f++)for(let e=0;e<d;e++)1===o[f]?h[p++]=u[f]:h[p++]=l[f];return n.makeTensorInfo(r.shape,c,h)}},iv=_.Wap.SELU_SCALEALPHA,ov=_.Wap.SELU_SCALE,uv=Wm(_.oFR,(e=>e>=0?ov*e:iv*(Math.exp(e)-1))),lv={kernelName:_.oFR,backendName:"cpu",kernelFunc:uv},cv=Wm(_.i5y,(e=>e<0?-1:e>0?1:0)),hv={kernelName:_.i5y,backendName:"cpu",kernelFunc:cv},pv=Wm(_.RQH,(e=>Math.sin(e))),dv={kernelName:_.RQH,backendName:"cpu",kernelFunc:pv},fv=Wm(_.wYB,(e=>Math.sinh(e))),mv={kernelName:_.wYB,backendName:"cpu",kernelFunc:fv},gv=Math.log(1.1920928955078125e-7)+2,yv=Wm(_.MRv,(e=>{const t=e>-gv,n=e<gv,s=Math.exp(e);let r;return r=n?s:t?e:Math.log(1+s),r})),bv={kernelName:_.MRv,backendName:"cpu",kernelFunc:yv};const xv={kernelName:_.TQc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;dm([r],"spaceToBatchND");const o=_.D5U.sizeFromShape(a),u=[[0,0]];u.push(...i);for(let g=1+a.length;g<r.shape.length;++g)u.push([0,0]);const l=Bw.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),c=_.Wap.getReshaped(l.shape,a,o,!1),h=_.Wap.getPermuted(c.length,a.length,!1),p=_.Wap.getReshapedPermuted(l.shape,a,o,!1),d=tb({inputs:{x:l},backend:n,attrs:{shape:c}}),f=Vg({inputs:{x:d},backend:n,attrs:{perm:h}}),m=tb({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};const wv={kernelName:_.O3z,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n        ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,p,d,f,m]=my(o,s.shape,s.dtype,u,r.dtype,l,c);return[n.makeTensorInfo(p,s.dtype,h),n.makeTensorInfo([p[0]],r.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}};const vv={kernelName:_.nhH,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(r.dataId).values),o=n.data.get(s.dataId).values,u=Array.from(n.data.get(a.dataId).values),[l,c,h]=gy(o,s.shape,s.dtype,i,u);return[n.makeTensorInfo(c,s.dtype,l),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};const kv={kernelName:_.w3H,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,[l,c]=yy(i,s.shape,s.dtype,o,u,!0);return n.makeTensorInfo(c,s.dtype,l)}};const Iv={kernelName:_.ZjV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,[l,c]=yy(i,s.shape,s.dtype,o,u);return n.makeTensorInfo(c,s.dtype,l)}};const Sv={kernelName:_.D2d,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:p}=_.Wap.calculateShapes(a,r,o),d=!1,f=n.bufferSync(r);let m;switch(a.dtype){case"bool":m=uy(f,n.bufferSync(a),o,p,c,l,u,h,Boolean(n.data.get(i.dataId).values[0]),d);break;case"float32":m=uy(f,n.bufferSync(a),o,p,c,l,u,h,n.data.get(i.dataId).values[0],d);break;case"int32":m=uy(f,n.bufferSync(a),o,p,c,l,u,h,n.data.get(i.dataId).values[0],d);break;case"string":m=uy(f,n.bufferSync(a),o,p,c,l,u,h,_.D5U.decodeString(n.data.get(i.dataId).values[0]),d);break;default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}};const Nv={kernelName:_.L8s,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=_.D5U.parseAxisParam(i,r.shape)[0],u=_.Wap.prepareSplitSize(r,a,o),l=new Array(r.shape.length).fill(0),c=r.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const s=dy({inputs:{x:r},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,s}))}},Tv={kernelName:_.bK0,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,s=t;dm(n,"square");const r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let i=0;i<r.length;++i){const e=r[i];a[i]=e*e}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},Cv=Wm(_.h8e,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),$v={kernelName:_.h8e,backendName:"cpu",kernelFunc:Cv};const Ev={kernelName:_.jQk,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=s;dm(r,"stridedSlice");const{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=_.kuN.sliceInfo(r.shape,a,i,o,u,l,c,h,p);let v;if(m)v=tb({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){_.D5U.assert(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=_.kuN.computeOutShape(b,x,w),t=dy({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});v=tb({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=Cy(d,n.bufferSync(r),w,b);v=n.makeTensorInfo(f,e.dtype,e.values)}return v}};const Av={kernelName:_._JP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=s,{data:c,dataSplits:h}=t,p=n.data.get(c.dataId).values,d=n.data.get(h.dataId).values,[f,m]=Ey(p,d,r,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};const Dv={kernelName:_.s1s,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,h]=Dy(o,u,r),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};const Rv={kernelName:_.XkS,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=Ry(n.data.get(a.dataId).values,r);return n.makeTensorInfo(a.shape,"int32",i)}},_v=Wm(_.sEM,(e=>Math.tan(e))),Fv={kernelName:_.sEM,backendName:"cpu",kernelFunc:_v},Ov=Wm(_.MIZ,(e=>Math.tanh(e))),Mv={kernelName:_.MIZ,backendName:"cpu",kernelFunc:Ov};const Bv={kernelName:_.SIB,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:s,indices:r,updates:a}=t,{sliceRank:i,numUpdates:o,sliceSize:u,strides:l,outputSize:c}=_.Wap.calculateShapes(a,r,s.shape),h=n.bufferSync(r),p=n.bufferSync(a),d=n.bufferSync(s),f=uy(h,p,s.shape,c,u,o,i,l,d,!1);return n.makeTensorInfo(s.shape,f.dtype,f.values)}};const zv={kernelName:_.n9L,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;dm(r,"tile");const i=By(n.bufferSync(r),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}};const Lv={kernelName:_.cWu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s;dm(r,"topk");const o=n.data.get(r.dataId).values,[u,l]=Uy(o,r.shape,r.dtype,a,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};const Uv={kernelName:_.wx7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=n,[c,h,p,d]=r.shape,[f,m]=null!=l?l:[h,p],g=[c,f,m,d],y=_.D5U.computeStrides(r.shape),b=y[0],x=y[1],w=y[2],v=_.D5U.computeStrides(g),k=v[0],I=v[1],S=v[2],N=_.D5U.getTypedArrayFromDType(r.dtype,_.D5U.sizeFromShape(g));N.fill(u);const T=s.data.get(r.dataId).values,C=s.data.get(a.dataId).values;for(let $=0;$<c;++$){const e=1===a.shape[0]?C:C.subarray(8*$,8*$+8);for(let t=0;t<f;++t)for(let n=0;n<m;++n)for(let s=0;s<d;++s){let r;const a=e[6]*n+e[7]*t+1;if(0===a)continue;const l=(e[0]*n+e[1]*t+e[2])/a,c=(e[3]*n+e[4]*t+e[5])/a,d=Wv(l,p,o),f=Wv(c,h,o);switch(i){case"nearest":r=Vv(T,h,p,b,x,w,$,f,d,s,u);break;case"bilinear":r=Gv(T,h,p,b,x,w,$,f,d,s,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}N[$*k+t*I+n*S+s]=r}return s.makeTensorInfo(g,r.dtype,N)}return{dataId:s.write(N,g,r.dtype),shape:r.shape,dtype:r.dtype}}};function Wv(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return _.D5U.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return _.D5U.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return _.D5U.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function Pv(e,t,n,s,r,a,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*s+o*r+u*a+l]:c}function Vv(e,t,n,s,r,a,i,o,u,l,c){return Pv(e,t,n,s,r,a,i,Math.round(o),Math.round(u),l,c)}function Gv(e,t,n,s,r,a,i,o,u,l,c){const h=Math.floor(o),p=Math.floor(u),d=h+1,f=p+1;return(d-o)*((f-u)*Pv(e,t,n,s,r,a,i,h,p,l,c)+(u-p)*Pv(e,t,n,s,r,a,i,h,f,l,c))+(o-h)*((f-u)*Pv(e,t,n,s,r,a,i,d,p,l,c)+(u-p)*Pv(e,t,n,s,r,a,i,d,f,l,c))}const Hv={kernelName:_.kpP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;dm(a,"unique");const i=s.data.get(a.dataId).values,{outputValues:o,outputShape:u,indices:l}=Wy(i,r,a.shape,a.dtype);return[s.makeTensorInfo(u,a.dtype,o),s.makeTensorInfo([l.length],"int32",l)]}};const jv={kernelName:_.ToN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r.shape.length,o=r.shape[a],u=new Array(i-1);let l=0;for(let d=0;d<i;d++)d!==a&&(u[l++]=r.shape[d]);const c=new Array(i).fill(0),h=r.shape.slice();h[a]=1;const p=new Array(o);for(let d=0;d<p.length;d++){c[a]=d;const e=dy({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});p[d]=tb({inputs:{x:e},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(e)}return p}};const Xv={kernelName:_.Qvg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s;dm(r,"unsortedSegmentSum");const o=[],u=[],l=r.shape.length-a.shape.length;let c=a;for(let p=0;p<l;++p){const e=Cx({inputs:{input:c},backend:n,attrs:{dim:p+1}});c=e,u.push(e)}for(let p=0;p<i;++p){const e=_.D5U.createScalarValue(p,"int32"),t=n.makeTensorInfo([],"int32",e),s=qm({inputs:{a:t,b:c},backend:n}),a=Cm({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),i=Og({inputs:{a:a,b:r},backend:n}),l=mx({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}});o.push(l),u.push(t),u.push(s),u.push(a),u.push(i),u.push(l)}const h=Ow({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},qv=[ab,ym,ob,lb,Fm,cb,hb,pb,db,fb,gb,bb,wb,Ib,Nb,Eb,Ab,Db,Rb,rb,_b,Fb,Ob,Lm,Mb,$m,Hm,zb,wm,Lb,Vb,Hb,jb,Xb,qb,Kb,Qb,Jb,ex,tx,nx,sx,rx,ax,ox,ux,lx,cx,hx,px,dx,fx,yx,Gy,bx,Km,Tx,Jm,$x,tg,Ox,Bx,zx,rg,og,Lx,Ux,Wx,Px,pg,mg,Im,Vx,Wb,Hx,Xx,Kx,jy,bg,vg,Qx,Ng,Jx,tw,sw,iw,ow,uw,cw,Eg,hw,pw,dw,fw,mw,gw,yw,Rg,bw,vw,Sw,Mg,zg,Tw,$w,Aw,Wg,Dw,Fw,Mw,Bw,Uw,Ky,jg,Ww,Pw,Vw,Gw,Nm,Dx,jw,Yy,Zy,nb,Xw,qw,Kw,Qw,Yw,Jw,ev,oy,tv,rv,av,lv,hy,hv,dv,mv,fy,Iw,bv,xv,wv,vv,kv,Iv,Sv,Nv,wy,Tv,Iy,Ty,$v,Ev,Av,Dv,Rv,My,gx,Fv,Mv,Bv,zv,Lv,Uv,Gg,Hv,jv,Xv,_w];for(const uR of qv)(0,_.wCN)(uR);const Kv={},Qv={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Yv(e,t){Kv[e]=t}function Jv(e,t){if(!(e in Kv)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if((0,_.OBj)().getBool("IS_SAFARI")||"undefined"==typeof OffscreenCanvas||2!==e){if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete Kv[e]}),!1),(0,_.OBj)().getBool("SOFTWARE_WEBGL_ENABLED")&&(Qv.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",Qv)||n.getContext("experimental-webgl",Qv);return n.getContext("webgl2",Qv)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;Kv[e]=n}const n=Kv[e];return null==n||n.isContextLost()?(delete Kv[e],Jv(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),Kv[e])}var Zv,ek,tk;function nk(e,t){return[t,e]}function sk(e){const t=_.D5U.sizeFromShape(e),n=Math.ceil(t/4);return _.D5U.sizeToSquarishShape(n)}function rk(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function ak(e,t){const n=e;let s,r,a,i,o,u,l,c,h,p;return 2===(0,_.OBj)().getNumber("WEBGL_VERSION")?(s=n.R32F,r=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT,u=n.RGBA8):(s=e.RGBA,r=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,u=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function ik(e,t){const n=t();return(0,_.OBj)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+uk(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(Zv||(Zv={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(ek||(ek={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(tk||(tk={}));function ok(e){return!!((0,_.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function uk(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function lk(e,t){return Fk(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function ck(e,t){const n=Fk(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(ik(e,(()=>e.shaderSource(n,t))),ik(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function hk(e,t){const n=Fk(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(ik(e,(()=>e.shaderSource(n,t))),ik(e,(()=>e.compileShader(n))),(0,_.OBj)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw dk(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const pk=/ERROR: [0-9]+:([0-9]+):/g;function dk(e,t){const n=pk.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const s=+n[1],r=e.split("\n"),a=r.length.toString().length+2,i=r.map(((e,t)=>_.D5U.rightPad((t+1).toString(),a)+e));let o=0;for(let h=0;h<i.length;h++)o=Math.max(i[h].length,o);const u=i.slice(0,s-1),l=i.slice(s-1,s),c=i.slice(s);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${_.D5U.rightPad(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function fk(e){return Fk(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function mk(e,t){if(ik(e,(()=>e.linkProgram(t))),!(0,_.OBj)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function gk(e,t){if(ik(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function yk(e,t){const n=Fk(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return ik(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),ik(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function bk(e,t){const n=Fk(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return ik(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),ik(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function xk(){return 2===(0,_.OBj)().getNumber("WEBGL_VERSION")?1:4}function wk(e){return Fk(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function vk(e,t){const n=(0,_.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){throw new Error("Requested texture size "+`[${e}x${t}]`+" is invalid.")}if(e>n||t>n){throw new Error("Requested texture size "+`[${e}x${t}]`+" greater than WebGL maximum on this browser / GPU "+`[${n}x${n}]`+".")}}function kk(e){return Fk(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function Ik(e,t,n,s,r,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(ik(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,s))),ik(e,(()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,a,i))),ik(e,(()=>e.enableVertexAttribArray(o))),!0)}function Sk(e,t,n){Ok(e,n),ik(e,(()=>e.activeTexture(e.TEXTURE0+n))),ik(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function Nk(e,t){Ok(e,t),ik(e,(()=>e.activeTexture(e.TEXTURE0+t))),ik(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function Tk(e,t,n){return Fk(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function Ck(e,t,n){return e.getUniformLocation(t,n)}function $k(e,t,n,s){ik(e,(()=>Sk(e,t,s))),ik(e,(()=>e.uniform1i(n,s)))}function Ek(e){ik(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),ik(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),ik(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function Ak(e,t,n){ik(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),ik(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function Dk(e,t){ik(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),ik(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function Rk(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+_k(e,t))}function _k(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Fk(e,t,n){const s=ik(e,(()=>t()));if(null==s)throw new Error(n);return s}function Ok(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function Mk(e,t=2){return _.D5U.sizeFromShape(e.slice(0,e.length-t))}function Bk(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function zk(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[Mk(e),...Bk(e)]),t}function Lk(e,t=!1){let n=(0,_.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=(0,_.OBj)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(s===1/0&&(0,_.OBj)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=n/2),t&&(n*=2,s*=2,1===(e=e.map(((t,n)=>n>=e.length-2?_.D5U.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=_.D5U.squeezeShape(e);e=t.newShape}let r=_.D5U.sizeFromShape(e),a=null;e.length<=1&&r<=n?a=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?a=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?a=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?a=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?a=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(a=[e[0],e[1]*e[2]*e[3]]);const i=null!=a&&Math.max(...a)>s&&Math.min(...a)<=(t?2:1)&&Math.min(...a)>0;if(null==a||i)if(t){const t=Mk(e);let n=2,s=2;e.length&&([n,s]=Bk(e)),r=t*(n/2)*(s/2),a=_.D5U.sizeToSquarishShape(r).map((e=>2*e))}else a=_.D5U.sizeToSquarishShape(r);return a}function Uk(e){return e%2==0}function Wk(e,t){if(e=e.slice(-2),t=t.slice(-2),_.D5U.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],s=t[t.length-1];if(n===s)return!0;if(Uk(n)&&Uk(s)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&Uk(e[0])&&Uk(t[0])}let Pk,Vk;function Gk(e){if(null==Pk){const t=Jv(e);Pk=t.getParameter(t.MAX_TEXTURE_SIZE)}return Pk}function Hk(){Pk=null}function jk(){Vk=null}function Xk(e){if(null==Vk){const t=Jv(e);Vk=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Vk)}function qk(e){if(0===e)return 0;let t;const n=Jv(e);return t=Kk(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:Kk(n,"EXT_disjoint_timer_query")?1:0,t}function Kk(e,t){return null!=e.getExtension(t)}function Qk(e){try{if(null!=Jv(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function Yk(e){if(0===e)return!1;const t=Jv(e);if(1===e){if(!Kk(t,"OES_texture_float"))return!1}else if(!Kk(t,"EXT_color_buffer_float"))return!1;return Zk(t)}function Jk(e){if(0===e)return!1;const t=Jv(e);if(1!==e){if(Kk(t,"EXT_color_buffer_float"))return Zk(t);const e="EXT_color_buffer_half_float";if(Kk(t,e)){const n=t.getExtension(e);return function(e,t){const n=ak(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s);const r=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(i),o}(t,n)}return!1}if(!Kk(t,"OES_texture_float"))return!1;if(!Kk(t,"WEBGL_color_buffer_float"))return!1;return Zk(t)}function Zk(e){const t=ak(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),r}function eI(e){if(2!==e)return!1;return null!=Jv(e).fenceSync}function tI(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&_.D5U.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const nI=(0,_.OBj)();function sI(){let e,t,n,s,r,a,i,o,u,l;return 2===(0,_.OBj)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",i="out vec4 outputColor;",o=(0,_.OBj)().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function rI(e,t,n="index"){const s=_.D5U.computeStrides(t);return s.map(((t,r)=>`${`int ${e[r]} = ${n} / ${t}`}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function aI(e,t,n="index"){const s=_.D5U.computeStrides(t);return s.map(((t,r)=>`${`int ${e[r]} = ${n} / outShapeStrides[${r}]`}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function iI(e,t,n="index"){const s=function(e,t){const n=e.length,s=e.map((e=>`${t}[${e}]`)),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}(e.map(((e,t)=>t)),t);return s.map(((t,r)=>`${`int ${e[r]} = ${n} / ${s[r]}`}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${s[r]}`:`index -= ${e[r]} * ${s[r]}`};`)).join("")}function oI(e){const t=_.D5U.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}nI.registerFlag("HAS_WEBGL",(()=>nI.getNumber("WEBGL_VERSION")>0)),nI.registerFlag("WEBGL_VERSION",(()=>Qk(2)?2:Qk(1)?1:0)),nI.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),nI.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===nI.get("WEBGL_VERSION"))),nI.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),nI.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),nI.registerFlag("WEBGL_PACK",(()=>nI.getBool("HAS_WEBGL"))),nI.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>nI.getBool("WEBGL_PACK"))),nI.registerFlag("WEBGL_PACK_CLIP",(()=>nI.getBool("WEBGL_PACK"))),nI.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>nI.getBool("WEBGL_PACK"))),nI.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>nI.getBool("WEBGL_PACK"))),nI.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>nI.getBool("WEBGL_PACK"))),nI.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>nI.getBool("WEBGL_PACK"))),nI.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>nI.getBool("WEBGL_PACK"))),nI.registerFlag("WEBGL_PACK_REDUCE",(()=>nI.getBool("WEBGL_PACK"))),nI.registerFlag("WEBGL_LAZILY_UNPACK",(()=>nI.getBool("WEBGL_PACK"))),nI.registerFlag("WEBGL_CONV_IM2COL",(()=>nI.getBool("WEBGL_PACK"))),nI.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>Gk(nI.getNumber("WEBGL_VERSION")))),nI.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>Xk(nI.getNumber("WEBGL_VERSION")))),nI.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=nI.getNumber("WEBGL_VERSION");return 0===e?0:qk(e)})),nI.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>nI.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!_.C2$.isMobile())),nI.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>Yk(nI.getNumber("WEBGL_VERSION")))),nI.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!nI.getBool("WEBGL_FORCE_F16_TEXTURES")&&nI.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),nI.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>Jk(nI.getNumber("WEBGL_VERSION")))),nI.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>eI(nI.getNumber("WEBGL_VERSION")))),nI.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>nI.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),nI.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),nI.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>_.C2$.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),nI.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),nI.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),nI.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),nI.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),nI.registerFlag("WEBGL_EXP_CONV",(()=>!1)),nI.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>nI.getBool("IS_TEST"))),nI.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),nI.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),nI.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),nI.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const uI="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:lI}=_.Wap;function cI(e,t,n){const s=[];if(e.forEach((e=>{const t=_.D5U.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=vI(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:s.push(`uniform int ${e.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${e.name}Shape;`)}s.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;")}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{s.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const r=s.join("\n"),a=e.map((e=>function(e,t,n=!1,s){let r="";r+=n?pI(e,s):hI(e,s);const a=e.shapeInfo.logicalShape,i=t.logicalShape;a.length<=i.length&&(r+=n?function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=lI(e.shapeInfo.logicalShape,t.logicalShape),u=wI(i),l=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+l]} = 0;`)).join("\n");let p="";p=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+l]}`)).join(", ");let d="return outputValue;";const f=1===_.D5U.sizeFromShape(e.shapeInfo.logicalShape),m=1===_.D5U.sizeFromShape(t.logicalShape);if(1!==a||f||m){if(f&&!m)d=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?d="return vec4(outputValue.x);":o.indexOf(e)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${s}(${p});\n      ${d}\n    }\n  `}(e,t):function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&_.D5U.arraysEqual(i,a))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=wI(u),c=lI(e.shapeInfo.logicalShape,t.logicalShape),h=u-o;let p;const d=["x","y","z","w","u","v"];p=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${d[e+h]} = 0;`)).join("\n");let f="";f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+h]}`)).join(", ");return`\n    float ${r}() {\n      ${l} coords = getOutputCoords();\n      ${p}\n      return get${s}(${f});\n    }\n  `}(e,t));return r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=sI(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let l,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${dI}\n    ${fI}\n    ${mI}\n  `}(o);t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return yI();case 1:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===s[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${s[1]}.0);\n      }\n    `;if(1===s[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${s[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(_.D5U.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2);let i=a,o="",u="b, r, c";for(let l=2;l<e.length-1;l++)i*=e[e.length-l-1],o=`\n      int b${l} = index / ${i};\n      index -= b${l} * ${i};\n    `+o,u=`b${l}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(l=function(e,t,n){switch(e.length){case 0:return yI();case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){if(_.D5U.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n){return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${aI(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`}const s=rI(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n){return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${aI(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `}const s=rI(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=rI(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=rI(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=gI);return[h,u,c,r,l,a,n.userCode].join("\n")}function hI(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;const[r,a]=e.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${s}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=bI(n);if(t)return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${s}(int index) {\n        ${xI(e)}\n      }\n    `;const r=e.shapeInfo.texShape,a=r[0],i=r[1];if(1===i&&1===a)return`\n      float ${s}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=bI(n);if(1===i)return t?`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(1===a)return t?`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(t)return`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape;if(null!=a&&_.D5U.arraysEqual(n,a)){if(t)return`\n      float ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `;const e=a[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=_.D5U.squeezeShape(n),u=i;if(u.length<n.length){const n=["row","col"];return`\n      ${hI(kI(e,u),t)}\n      float ${r}(int row, int col) {\n        return ${r}(${II(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${xI(e)}\n      }\n    `;const l=a[0],c=a[1],h=bI(s);if(1===c)return t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;if(1===l)return t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${s}, uv);\n    }\n  `;if(t)return`\n      float ${r}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n        return sampleTexture(${s}, uv);\n      }\n    `;return`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${s}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:u}=_.D5U.squeezeShape(n),l=o;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${hI(kI(e,l),t)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${II(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${xI(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],p=c[1],d=e.shapeInfo.flatOffset;if(p===a&&null==d)return t?`\n      float ${r}(int row, int col, int depth) {\n        int stride1 = ${s}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${h}.0);\n          return sampleTexture(${s}, uv);\n        }\n      `;if(p===i&&null==d)return t?`\n      float ${r}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;const f=bI(s);if(t)return`\n    float ${r}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${s}Shape[1] * ${s}Shape[2];\n      int stride1 = ${s}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n      return sampleTexture(${s}, uv);\n    }\n    `;return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${p}, index);\n        return sampleTexture(${s}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:u,keptDims:l}=_.D5U.squeezeShape(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${hI(kI(e,u),t)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${II(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${xI(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(d===o&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;if(d===a&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;const y=bI(s);if(t)return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${y});\n      return sampleTexture(${s}, uv);\n    }\n  `;return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${d}, index + ${y});\n      return sampleTexture(${s}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,i=t[2]*a,o=t[1]*i,{newShape:u,keptDims:l}=_.D5U.squeezeShape(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${hI(kI(e,u))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${II(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${r})) +\n          depth3;\n        ${xI(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1];if(d===o&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===r&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=bI(n);return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${r} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=_.D5U.squeezeShape(t);if(r.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${hI(kI(e,r))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${II(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${xI(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1];if(f===c&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=bI(n);return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function pI(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=sI();return`\n    vec4 ${n}() {\n      return ${s.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=sI();if(t)return`\n    vec4 ${s}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],u=sI();if(null!=a&&_.D5U.arraysEqual(n,a))return t?`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n\n        return ${u.texture2D}(${s}, uv);\n      }\n    `:`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${u.texture2D}(${s}, uv);\n      }\n    `;if(t)return`\n    vec4 ${r}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${s}, uv);\n    }\n  `;const l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=Math.ceil(n[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${s}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const s=[1,2],a=["b","row","col"];return`\n        ${pI(kI(e,n.slice(1)),t)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${II(a,s)});\n        }\n      `}const o=sI();if(t)return`\n    vec4 ${r}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `;const u=i[0],l=i[1],c=Math.ceil(n[2]/2),h=c*Math.ceil(n[1]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${h}, ${c}, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=sI();if(t)return`\n    vec4 ${s}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],h=Math.ceil(a[i-1]/2);let p=h*Math.ceil(a[i-2]/2),d="int b, int row, int col",f=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<i-1;m++)d=`int b${m}, `+d,p*=a[i-m-1],f=`b${m} * ${p} + `+f;return`\n    vec4 ${s}(${d}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${r.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const dI="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",fI="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",mI="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",gI="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function yI(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function bI(e){return`offset${e}`}function xI(e){const t=e.name,n=_.D5U.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function wI(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function vI(e,t,n){const{newShape:s,keptDims:r}=_.D5U.squeezeShape(t),a=t.length,i=e&&3===a&&1===t[0],o=i?t.slice(1):s,u=!e&&a>1&&!_.D5U.arraysEqual(t,n)&&s.length<a||i;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:r}}function kI(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function II(e,t){return t.map((t=>e[t])).join(", ")}function SI(e,t,n){const s=[],r=[];let a,i,o,u=null,l=null;l=e.getUniformLocation(n,"NAN",!1),1===(0,_.OBj)().getNumber("WEBGL_VERSION")&&(u=e.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const h of t.variableNames){const r={name:h,uniform:e.getUniformLocation(n,h,c),offset:e.getUniformLocation(n,`offset${h}`,c)};t.enableShapeUniforms&&(r.shape=e.getUniformLocation(n,`${h}Shape`,c),r.texShape=e.getUniformLocation(n,`${h}TexShape`,c)),s.push(r)}if(t.enableShapeUniforms&&(a=e.getUniformLocation(n,"outShape",c),o=e.getUniformLocation(n,"outShapeStrides",c),i=e.getUniformLocation(n,"outTexShape",c)),t.customUniforms)for(const h of t.customUniforms)r.push(e.getUniformLocation(n,h.name,c));return{variablesLocations:s,customUniformLocations:r,infLoc:u,nanLoc:l,outShapeLocation:a,outShapeStridesLocation:o,outTexShapeLocation:i}}function NI(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const s=e.logicalShape,r=t[n],a=r.shape;if(!_.D5U.arraysEqual(s,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${a} must match`);if(e.isUniform&&r.isUniform)return;const i=e.texShape,o=r.isUniform?null:r.texData.texShape;if(!_.D5U.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function TI(e){return(0,_.OBj)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class CI{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Zv.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=sI();this.outputShape=e,this.enableShapeUniforms=TI(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?aI(["r","c","d"],e):rI(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class $I{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Zv.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=sI();this.outputShape=e,this.enableShapeUniforms=TI(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?aI(["r","c","d"],e):rI(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class EI{constructor(e){this.variableNames=["A"],this.outTexUsage=ek.DOWNLOAD;const t=sI();this.outputShape=e,this.userCode=`\n      ${uI}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class AI{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=ek.DOWNLOAD;const t=sI();this.outputShape=e,this.userCode=`\n      ${uI}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const DI={R:0,G:1,B:2,A:3};class RI{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=sI();this.outputShape=e,this.enableShapeUniforms=TI(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let a="";for(let i=0;i<n.length;i++){const e=n[i];a+=`\n          if(offset == ${i}) {\n            result = values[${DI[e]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":oI(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${s.texture2D}(A, uv);\n          ${a}\n        }\n        ${s.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class _I{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=sI();this.outputShape=e,this.enableShapeUniforms=TI(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let t=0;t<=1;t++){const r=2*a+t;s+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${a};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${r}] = values[0];\n            } else if (offset == 1) {\n              result[${r}] = values[1];\n            } else if (offset == 2) {\n              result[${r}] = values[2];\n            } else {\n              result[${r}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":oI(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${s}\n\n          ${n.output} = ${r};\n        }\n    `}}function FI(e){const t=sI();return ck(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function OI(e){return yk(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function MI(e){return bk(e,new Uint16Array([0,1,2,2,1,3]))}function BI(e,t,n,s,r,a){vk(t,n);const i=wk(e),o=e.TEXTURE_2D;return ik(e,(()=>e.bindTexture(o,i))),ik(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),ik(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),ik(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),ik(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===(0,_.OBj)().getNumber("WEBGL_VERSION")?ik(e,(()=>e.texImage2D(o,0,s,t,n,0,r,a,null))):ik(e,(()=>e.texStorage2D(o,1,s,t,n))),ik(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function zI(e){return e.internalFormatFloat}function LI(e,t,n,s){const[r,a]=nk(t,n);return BI(e,r,a,zI(s),s.textureFormatFloat,e.FLOAT)}function UI(e){return e.internalFormatHalfFloat}function WI(e,t,n,s){const[r,a]=nk(t,n);return BI(e,r,a,UI(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function PI(e){return e.downloadTextureFormat}function VI(e,t,n,s){const[r,a]=nk(t,n);return BI(e,r,a,PI(s),e.RGBA,e.UNSIGNED_BYTE)}function GI(e){return e.internalFormatPackedFloat}function HI(e,t,n,s){const[r,a]=rk(t,n);return BI(e,r,a,GI(s),e.RGBA,e.FLOAT)}function jI(e){return e.internalFormatPackedHalfFloat}function XI(e,t,n,s){const[r,a]=rk(t,n);return BI(e,r,a,jI(s),e.RGBA,s.textureTypeHalfFloat)}function qI(e,t,n){ik(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n)));return Ik(e,t,"clipSpacePos",n,3,20,0)&&Ik(e,t,"uv",n,2,20,12)}function KI(e,t,n,s,r,a){let i,o,u;ik(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(i=new Uint8Array(n*s*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*s*4),o=e.FLOAT,u=a.internalFormatPackedFloat),i.set(r),2===(0,_.OBj)().getNumber("WEBGL_VERSION")?ik(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,o,i))):ik(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,s,0,e.RGBA,o,i))),ik(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function QI(e,t,n){ik(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===(0,_.OBj)().getNumber("WEBGL_VERSION")?ik(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):ik(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===(0,_.OBj)().getNumber("WEBGL_VERSION")?ik(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):ik(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),ik(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function YI(e,t,n,s){const r=e.createBuffer();ik(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const a=16*t*n;return ik(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),ik(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),ik(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}function JI(e,t,n){const s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function ZI(e,t,n,s){const[r,a]=nk(t,n),i=new Uint8Array(t*n*4);return ik(e,(()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}function eS(e,t,n,s,r,a,i,o){const u=e,l=new Float32Array(function(e,t){const[n,s]=rk(e,t);return n*s*4}(a,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function tS(e,t,n){const s=new Float32Array(t*n*4);return ik(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s))),s}class nS{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=(0,_.OBj)().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,Yv(t,e)):this.gl=Jv(t),e=this.gl,2===(0,_.OBj)().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>ik(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>ik(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>ik(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>ik(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>ik(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>ik(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>ik(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>ik(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,_.OBj)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=lk(this.gl,e),Kk(this.gl,t))this.textureHalfFloatExtension=lk(this.gl,t);else if((0,_.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Kk(this.gl,s))this.colorBufferHalfFloatExtension=lk(this.gl,s);else if((0,_.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Kk(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Kk(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=OI(this.gl),this.indexBuffer=MI(this.gl),this.framebuffer=kk(this.gl),this.textureConfig=ak(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,_.OBj)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;ik(e,(()=>e.finish())),ik(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),ik(e,(()=>e.deleteFramebuffer(this.framebuffer))),ik(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),ik(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),ik(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),LI(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),WI(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),VI(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),QI(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),KI(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),XI(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),HI(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Dk(this.gl,this.framebuffer),this.outputTexture=null),ik(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>ZI(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return eS(this.gl,e,0,0,0,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return JI(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const s=YI(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,_.OBj)().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=s.clientWaitSync(r,0,0);return e===s.ALREADY_SIGNALED||e===s.CONDITION_SATISFIED},t=r}else(0,_.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,_.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>tS(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=FI(t));const n=fk(t);ik(t,(()=>t.attachShader(n,this.vertexShader))),ik(t,(()=>t.attachShader(n,e))),mk(t,n);const s=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&gk(t,s),s}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;ik(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),qI(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(ik(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&gk(this.gl,this.program),ik(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?Tk(this.gl,e,t):Ck(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),ik(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),$k(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[s,r]=rk(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&gk(this.gl,this.program),Rk(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}ik(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ik(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=lk(this.gl,2===(0,_.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,_.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,_.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await _.D5U.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,_.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,_.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in(0,_.OBj)().platform&&(n=(0,_.OBj)().platform.setTimeoutCustom.bind((0,_.OBj)().platform)),_.D5U.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Ak(this.gl,e,this.framebuffer),this.debug&&Rk(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Ak(this.gl,this.outputTexture,this.framebuffer),this.debug&&Rk(this.gl)):Dk(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const s=this.gl;Ak(s,e,this.framebuffer),this.debug&&Rk(s),this.outputTexture=e,ik(s,(()=>s.viewport(0,0,t,n))),ik(s,(()=>s.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),ik(this.gl,(()=>this.gl.scissor(e,t,n,s)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:sS,bincountImpl:rS,bincountReduceImpl:aS,bitwiseAndImpl:iS,castImpl:oS,ceilImpl:uS,concatImpl:lS,equalImpl:cS,expImpl:hS,expm1Impl:pS,floorImpl:dS,gatherNdImpl:fS,gatherV2Impl:mS,greaterImpl:gS,greaterEqualImpl:yS,lessImpl:bS,lessEqualImpl:xS,linSpaceImpl:wS,logImpl:vS,maxImpl:kS,maximumImpl:IS,minimumImpl:SS,multiplyImpl:NS,negImpl:TS,notEqualImpl:CS,prodImpl:$S,raggedGatherImpl:ES,raggedRangeImpl:AS,raggedTensorToTensorImpl:DS,rangeImpl:RS,rsqrtImpl:_S,scatterImpl:FS,sigmoidImpl:OS,simpleAbsImpl:MS,sliceImpl:BS,sparseFillEmptyRowsImpl:zS,sparseReshapeImpl:LS,sparseSegmentReductionImpl:US,sqrtImpl:WS,staticRegexReplaceImpl:PS,stridedSliceImpl:VS,stringNGramsImpl:GS,stringSplitImpl:HS,stringToHashBucketFastImpl:jS,subImpl:XS,tileImpl:qS,topKImpl:KS,transposeImpl:QS,uniqueImpl:YS}=A;function JS(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function ZS(e,t){return 1===t?[e]:JS(e,t)}class eN{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=TI(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=ZS("rc",this.rank),t=wI(this.rank),n=this.getOutOfBoundsCondition(e),s=this.getSetup(e),r=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${r}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let s=0;s<=1;s++){let r=`${0===n?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let t=2;t<this.rank;t++)r=`${e[e.length-1-t]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${s};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){return`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class tN{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=TI(this.outputShape.length);let n="";for(let a=0;a<4;a++){let e="thisRC = rc;";a%2==1&&(e+="thisRC.z += 1;"),a>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${a}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${a>0?"}":""}\n      `}var s,r;this.userCode=`\n      ${s=t,r=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${r?iI(["r","c","d"],"inputShape"):rI(["r","c","d"],s)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":oI(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class nN{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const s=rN(t,n),r=aN(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const a=sN(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[r].pop();return this.usedTextures[r].push(e),e}let i;return s===tk.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===tk.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===tk.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===tk.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===tk.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,s){if(null==this.freeTextures)return;const r=rN(n,s),a=aN(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);const i=sN(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),o=(0,_.OBj)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[a],l=u&&u.indexOf(e);if(null==l||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[l]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function sN(e,t,n,s,r){const a=function(e,t){switch(e){case tk.PACKED_2X2_FLOAT32:return GI(t);case tk.PACKED_2X2_FLOAT16:return jI(t);case tk.UNPACKED_FLOAT32:return zI(t);case tk.UNPACKED_FLOAT16:return UI(t);case tk.PACKED_4X1_UNSIGNED_BYTE:return PI(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,s);let i;if(r){const[t,n]=rk(e[0],e[1]);i=t*n}else{const[t,n]=nk(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function rN(e,t){if(e===ek.UPLOAD)return tk.PACKED_2X2_FLOAT32;if(e===ek.RENDER||null==e)return function(e){return(0,_.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?tk.PACKED_2X2_FLOAT32:tk.UNPACKED_FLOAT32:e?tk.PACKED_2X2_FLOAT16:tk.UNPACKED_FLOAT16}(t);if(e===ek.DOWNLOAD||e===ek.PIXELS)return tk.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function aN(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class iN{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=TI(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const oN="return abs(x);";const uN="return x;";class lN{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=TI(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class cN{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=TI(this.outputShape.length);const t=e.length,n=ZS("rc",t),s=wI(t),r=function(e,t){if(1===e)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${s} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const hN=_.GDt.whereImpl,pN={};const dN=(0,_.OBj)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class fN extends _.Zuw{nextDataId(){return fN.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,_.OBj)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof nS)t=e;else{const n=Jv((0,_.OBj)().getNumber("WEBGL_VERSION"),e);t=new nS(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=Jv((0,_.OBj)().getNumber("WEBGL_VERSION"));t=new nS(e),this.binaryCache=((n=(0,_.OBj)().getNumber("WEBGL_VERSION"))in pN||(pN[n]={}),pN[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new nN(this.gpgpu),this.numMBBeforeWarning=null==(0,_.OBj)().global.screen?1024:(0,_.OBj)().global.screen.height*(0,_.OBj)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new _.JLz(this,(0,_.SRH)())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,s,r,a){const i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[s,r]},o.texShape=[s,r];const u=zk(t),l=new RI(u,!1,a),c=this.runWebGLProgram(l,[i],n,[[s,r]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),c.dataId}write(e,t,n){if(((0,_.OBj)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,_.OBj)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:ek.UPLOAD,refCount:1}),s}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,s,r){if((0,_.OBj)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:ek.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new lN(i,uN):new iN(i,uN);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===s)return n;const u=null!=this.activeTimers;let l,c;if(u&&(l=_.D5U.now()),"complex64"===s){const e=this.readSync(r.real.dataId),t=this.readSync(r.imag.dataId);c=_.Wap.mergeRealAndImagArrays(e,t)}else c=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=_.D5U.now()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=r){let t;t=o?new lN(s,uN):new iN(s,uN);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:a}],a),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if((0,_.OBj)().getBool("DEBUG")&&!(0,_.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,_.OBj)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==a&&(0,_.OBj)().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...sk(s))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];l=_.Wap.mergeRealAndImagArrays(t,n)}else if(null==c)l=this.getValuesFromTexture(e);else{const e=_.D5U.sizeFromShape(s);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const e=this.gpgpu.gl;ik(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,l),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,_.SRH)().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:s,shape:r,slice:a,dtype:i,isPacked:o,texture:u}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=o?new lN(r,uN):new iN(r,uN);const s=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:i}],i),a=this.readToGPU(s,t);return this.disposeIntermediateTensorInfo(s),a}if(null==u)throw null!=s?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),c=(0,_.SRH)().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>_.D5U.decodeString(e)));return(0,_.f3b)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,_.f3b)(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!ok(n)){if((0,_.OBj)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=_.D5U.sizeFromShape(t);if((0,_.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),s=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(s.texture.texture,...sk(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),a}const a=(0,_.OBj)().getBool("WEBGL_PACK")&&!0===s,i=a?zk(t):t,o=a?new AI(i):new EI(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return(0,_.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=_.D5U.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=_.D5U.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,s&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if((0,_.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);i.kernelMs=_.D5U.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,_.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:_.D5U.now(),endMs:null}}endTimer(e){return(0,_.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=_.D5U.now(),e)}async getQueryTime(e){if((0,_.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=dN){return(0,_.OBj)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&_.D5U.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){_.Wap.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return hN(e.shape,t)}packedUnaryOp(e,t,n){const s=new lN(e.shape,t),r=this.compileAndRun(s,[e],n);return(0,_.SRH)().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=MS(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,_.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,oN,e.dtype);const t=new iN(e.shape,oN),n=this.compileAndRun(t,[e]);return(0,_.SRH)().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&_.D5U.isString(n[0])){const r=n.map((e=>_.D5U.encodeString(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){return(0,_.SRH)().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new cN(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new eN(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[Mk(e.shape),...Bk(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[Mk(t),...Bk(t)],a=new tN(r,n),i=[n],o=this.runWebGLProgram(a,[s],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:s,shape:r,dtype:a}=n;if(null!=t){const e=_.D5U.sizeFromShape(r),n=t[0]*t[1]*4;_.D5U.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const i=zk(r);let o;o=s?new $I(i):new CI(i);const u=[null!=t?t:sk(i)];return{dtype:a,shape:r,dataId:this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],a,u,!0,t).dataId}}runWebGLProgram(e,t,n,s,r=!1,a){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===Zv.DENSE){const t=null!=a?a:sk(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===_.D5U.sizeFromShape(i.shape))return o.values=_.D5U.getTypedArrayFromDType(i.dtype,0),i;const u=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&_.D5U.sizeFromShape(t.shape)<=(0,_.OBj)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!Wk(n.shape,t.shape)){const e=t,s=t.shape;t.shape=n.shape,t=this.packedReshape(t,s),u.push(t),n=this.texData.get(t.dataId),e.shape=s}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let s="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:u}=vI(e.packedInputs,t.shape,a);let l="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=_.D5U.computeStrides(o);h=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const p=t.shape.length,d=2===o.length&&_.D5U.arraysEqual(t.shape,a),f=1===_.D5U.sizeFromShape(t.shape),m=_.Wap.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&p===n.shape.length&&_.D5U.arraysEqual(a,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${a[0]>1}_${a[1]>1}`;s+=`${p}_${g}_${i?u:""}_${o.length}_${f}_${m}_${d}_${l}_${c}_${h}_${y}_${r}`}else{const e=t.isUniform?"uniform":t.texData.texShape;s+=`${t.shape}_${e}_${r}`}}));const r=e.userCode;let a=e.constructor.name;return a+="_"+s+"_"+r+`${(0,_.OBj)().getNumber("WEBGL_VERSION")}`,a}(e,l,c),p=this.getAndSaveBinary(h,(()=>function(e,t,n,s){const r=n.map(((e,n)=>{const s={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(s.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:s}})),a=r.map((e=>e.shapeInfo)),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},o=cI(r,i,t),u=hk(e.gl,o),l=e.createProgram(u);return(0,_.OBj)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:a,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(l),Object.assign({program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:a,outShapeInfo:i},SI(e,t,l)))}(this.gpgpu,e,l,c))),d=null!=this.activeTimers;let f;d&&(f=this.startTimer()),(0,_.OBj)().get("ENGINE_COMPILE_ONLY")||function(e,t,n,s,r){t.program.enableShapeUniforms||(NI(t.inShapeInfos,n),NI([t.outShapeInfo],[s]));const a=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===(0,_.OBj)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let u=0;u<n.length;++u){const s=n[u],{uniform:r,offset:a,shape:i,texShape:o}=t.variablesLocations[u];if(i){const{uniformShape:n}=vI(t.program.packedInputs,s.shape,s.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(i,new Int32Array(n));break;case 2:e.gl.uniform2iv(i,new Int32Array(n));break;case 3:e.gl.uniform3iv(i,new Int32Array(n));break;case 4:e.gl.uniform4iv(i,new Int32Array(n))}}if(o&&e.gl.uniform2i(o,s.texData.texShape[0],s.texData.texShape[1]),null!=r)if(s.isUniform)if(_.D5U.sizeFromShape(s.shape)<2)e.gl.uniform1f(r,s.uniformValues[0]);else{let t=s.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(r,t)}else null!=s.texData.slice&&null!=a&&e.gl.uniform1i(a,s.texData.slice.flatOffset),e.setInputMatrixTexture(s.texData.texture.texture,r,u)}const o=t.outShapeLocation;if(o)switch(s.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(s.shape))}if(t.outShapeStridesLocation){const n=_.D5U.computeStrides(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r)for(let u=0;u<t.program.customUniforms.length;++u){const n=t.program.customUniforms[u],s=t.customUniformLocations[u],a=r[u];if("float"===n.type)e.gl.uniform1fv(s,a);else if("vec2"===n.type)e.gl.uniform2fv(s,a);else if("vec3"===n.type)e.gl.uniform3fv(s,a);else if("vec4"===n.type)e.gl.uniform4fv(s,a);else if("int"===n.type)e.gl.uniform1iv(s,a);else if("ivec2"===n.type)e.gl.uniform2iv(s,a);else if("ivec3"===n.type)e.gl.uniform3iv(s,a);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,a)}}e.executeProgram()}(this.gpgpu,p,l,c,s),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),d&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=(0,_.OBj)().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=_.D5U.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,_.OBj)().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===r){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,s,r=!1){n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!(0,_.OBj)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,_.lub)((()=>{if(!(0,_.OBj)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,_.OBj)().getBool("DEBUG");(0,_.OBj)().set("DEBUG",!1);const t=this.abs((0,_.iD$)(1e-8)).dataSync()[0];if((0,_.OBj)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const u=null!=this.activeTimers;let l;u&&(l=_.D5U.now());let c=t.texShape;if(null==c&&(c=Lk(n,o),t.texShape=c),null!=r){const e=zk(n);let a,i=c[1],h=c[0];const p=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!o&&p||([i,h]=rk(c[0],c[1])),a=o?new _I(e,p):new RI(e,p);const d=p?[h,i]:c,f=this.makeTensorInfo(d,s),m=this.texData.get(f.dataId);m.usage=p?ek.PIXELS:ek.UPLOAD,m.texShape=d,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,r);const g=[[h,i]],y=!0,b=this.runWebGLProgram(a,[f],s,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,(0,_.OBj)().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=_.D5U.now()-l)}else{const e=this.acquireTexture(c,i,s,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:s}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*_.D5U.bytesPerElement(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await(0,_.glt)(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw dk(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:s,nanLoc:r,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:o}=SI(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=s,e.nanLoc=r,e.outShapeLocation=a,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:s,height:r,width:a,channels:i}=e,o=(0,_.SRH)().backend;if(!o.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=o.writeTexture(s,t,n,r,a,i);return(0,_.SRH)().makeTensorFromDataId(u,t,n,o)}}fN.nextDataId=0;const mN="4.6.0";function gN(){(0,_.OBj)().set("WEBGL_FORCE_F16_TEXTURES",!0)}_.C2$.isBrowser()&&(0,_.jqO)("webgl",(()=>new fN),2);const yN={forceHalfFloat:gN};class bN{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=_.Wap.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=TI(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const xN="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class wN{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=_.Wap.assertAndGetBroadcastShape(t,n);const r=this.outputShape.length;this.enableShapeUniforms=TI(r);let a="";if(s)if(0===r||1===_.D5U.sizeFromShape(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(a=`\n          ${wI(r)} coords = getOutputCoords();\n        `,1===r)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=ZS("coords",r);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= outShape[${r} - 2];\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= outShape[${r} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function vN(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const kN={kernelName:_.iJz,backendName:"webgl",kernelFunc:vN};function IN(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),i=n.texData.get(a.dataId),o=vN({inputs:{x:s},backend:n}),u=vN({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:u},a}const SN={kernelName:_.Zz9,backendName:"webgl",kernelFunc:IN},NN="return (a < 0.) ? b * a : a;",TN="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const CN={kernelName:_.J$2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,i=n.makeTensorInfo([],"float32",_.D5U.createScalarValue(a,"float32")),o=(0,_.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wN(TN,r.shape,i.shape):new bN(NN,r.shape,i.shape),u=n.runWebGLProgram(o,[r,i],"float32");return n.disposeIntermediateTensorInfo(i),u}},$N="return (a < 0.) ? b * a : a;",EN="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const AN={kernelName:_.o0g,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=(0,_.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wN(EN,s.shape,r.shape):new bN($N,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],"float32")}};function DN({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{const{x:i}=r,o=a,u=s||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,u);return o.makeTensorInfo(i.shape,u,t)}let l;return l=(0,_.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new lN(i.shape,t):new iN(i.shape,e),o.runWebGLProgram(l,[i],u)}}function RN({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:i,backend:o})=>{const{a:u,b:l}=i,c=o;if(s&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[s,r]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,s]=t,r={dataId:n.dataId,dtype:n.dtype,shape:u.shape},a={dataId:s.dataId,dtype:s.dtype,shape:l.shape},i=new bN(e,u.shape,l.shape);return c.runWebGLProgram(i,[r,a],(0,_.x8V)(n.dtype,s.dtype))})),a=IN({inputs:{real:s,imag:r},backend:c});return c.disposeIntermediateTensorInfo(s),c.disposeIntermediateTensorInfo(r),a}const h=a||(0,_.x8V)(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=r){const e=c.texData.get(u.dataId).values,t=c.texData.get(l.dataId).values,n="string"===u.dtype?_.Wap.fromUint8ToStringArray(e):e,s="string"===u.dtype?_.Wap.fromUint8ToStringArray(t):t,[a,i]=r(u.shape,l.shape,n,s,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=a,o}let p;return p=(0,_.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new wN(t,u.shape,l.shape,n):new bN(e,u.shape,l.shape),c.runWebGLProgram(p,[u,l],h)}}function _N(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?EN:$N;if("leakyrelu"===e)return t?TN:NN;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class FN{constructor(e,t,n,s=!1,r=!1,a=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=TI(this.outputShape.length);const l=s?e[1]:e[2],c=Math.ceil(l/2),h=s?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",d=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${b};\n        int batchB = ${x};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const ON="return areal * breal - aimag * bimag;",MN="return areal * bimag + aimag * breal;";class BN{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=_.Wap.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const zN="return a * b;";function LN(e){const{inputs:t,backend:n}=e,{a:s,b:r}=t,a=_.Wap.upcastType(s.dtype,r.dtype);if("complex64"===s.dtype){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),a=new BN(ON,s.shape,r.shape),i=new BN(MN,s.shape,r.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],u=n.runWebGLProgram(a,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=IN({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([s,r])){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),[i,o]=NS(s.shape,r.shape,e.values,t.values,a),u=n.makeTensorInfo(o,a);return n.texData.get(u.dataId).values=i,u}let i;return i=(0,_.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wN(zN,s.shape,r.shape):new bN(zN,s.shape,r.shape),n.runWebGLProgram(i,[s,r],a)}const UN={kernelName:_.wYn,backendName:"webgl",kernelFunc:LN};function WN(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=n,o=_.D5U.sizeFromShape(r.shape),u=_.D5U.inferFromImplicitShape(a,o),l=_.D5U.sizeFromShape(u);_.D5U.assert(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(r.dataId);return!c.isPacked||Wk(r.shape,u)||null!==c.texture&&Wk(c.shape,u)?(i.incRef(r.dataId),{dataId:r.dataId,shape:u,dtype:r.dtype}):function(e,t,n){const s=[Mk(e.shape),...Bk(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[Mk(t),...Bk(t)],i=new tN(a,s),o=[s],u=n.runWebGLProgram(i,[r],e.dtype,o,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(r,u,i)}const PN={kernelName:_.HZH,backendName:"webgl",kernelFunc:WN};class VN{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${_.D5U.isInt(e)?e.toPrecision(2):e}, ones);`}let l="";r%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class GN{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";r%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}function HN(e,t,n,s){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],s=_.Wap.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}(e.shape);let a=e;for(let i=0;i<r.length;i++){const{inSize:o,windowSize:u,outSize:l}=r[i];let c,h;c="mean"===n?0===i?new VN({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new VN({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new GN({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=a,a=s.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(h)}return a}class jN{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;const s=wI(this.rank),r=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<e.length;r++)s[e[r]]=n[r];return s.join()}(t);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}class XN{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=wI(this.rank),r=JS("rc",this.rank),a=new Array(this.rank);for(let l=0;l<t.length;l++)a[t[l]]=r[l];const i=`vec2(${a.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${s} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function qN(e,t,n){const s=(0,_.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new XN(e.shape,t):new jN(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function KN(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return function(e,t,n,s){const r=t,a=e.shape.length,i=_.D5U.parseAxisParam(r,e.shape);let o=i;const u=_.Wap.getAxesPermutation(o,a),l=null!=u;let c=e;l&&(c=qN(e,u,s),o=_.Wap.getInnerMostAxes(o.length,a)),_.Wap.assertAxesAreInnerMostDims("sum",o,a);const[h,p]=_.Wap.computeOutAndReduceShapes(c.shape,o);let d=h;n&&(d=_.Wap.expandShapeToKeepDim(h,i));const f=_.D5U.sizeFromShape(p),m=WN({inputs:{x:c},attrs:{shape:[_.D5U.sizeFromShape(e.shape)/f,f]},backend:s}),g=HN(m,(0,_.z4k)(e.dtype),"sum",s),y=WN({inputs:{x:g},attrs:{shape:d},backend:s});return s.disposeIntermediateTensorInfo(m),s.disposeIntermediateTensorInfo(g),l&&s.disposeIntermediateTensorInfo(c),y}(r,a,i,n)}const QN={kernelName:_.GBy,backendName:"webgl",kernelFunc:KN};function YN(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,i=n,o=r.shape.length,u=new Array(o);for(let c=0;c<u.length;c++)u[c]=r.shape[a[c]];let l;if(i.shouldExecuteOnCPU([r])){const e=i.texData.get(r.dataId).values,t=QS(e,r.shape,r.dtype,a,u);l=i.makeTensorInfo(u,r.dtype);i.texData.get(l.dataId).values=t}else l=qN(r,a,i);return l}const JN={kernelName:_.G3Y,backendName:"webgl",kernelFunc:YN};function ZN({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],p=s?t.shape[c-1]:t.shape[c-2],d=n?e.shape[l-1]:e.shape[l-2],f=s?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=_.D5U.sizeFromShape(m),b=_.D5U.sizeFromShape(g),x=_.Jyw.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([d,f]);_.D5U.assert(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`));const w=n?[y,h,d]:[y,d,h],v=s?[b,f,p]:[b,p,f],k=WN({inputs:{x:e},backend:r,attrs:{shape:w}}),I=WN({inputs:{x:t},backend:r,attrs:{shape:v}}),S=[k,I],N=Math.max(y,b),T=n?k.shape[1]:k.shape[2],C=null!=a,$=null!=i,E="leakyrelu"===u,A=null!=u?_N(u,!0):null;let D;if((1===d||1===f)&&T>1e3&&!1===(C||$||E||null!=A)){let e=k,t=I;n&&(e=YN({inputs:{x:k},backend:r,attrs:{perm:[0,2,1]}}),S.push(e)),s&&(t=YN({inputs:{x:I},backend:r,attrs:{perm:[0,2,1]}}),S.push(t));const a=1===f;let i=e;1!==f&&(i=WN({inputs:{x:e},backend:r,attrs:{shape:[N,T,1]}}),S.push(i));const o=1===f?2:1;let u=t;a&&(u=WN({inputs:{x:t},backend:r,attrs:{shape:[N,1,T]}}),S.push(u));const l=LN({inputs:{a:i,b:u},backend:r});D=KN({inputs:{x:l},backend:r,attrs:{axis:o,keepDims:!0}}),S.push(l)}else{const u=(0,_.x8V)(e.dtype,t.dtype),l=new FN(w,v,[N,d,f],n,s,C,A,$,E),c=[k,I];if(null!=a&&c.push(a),$&&c.push(i),E){const e=r.makeTensorInfo([],"float32",_.D5U.createScalarValue(o,"float32"));c.push(e),S.push(e)}D=r.runWebGLProgram(l,c,u)}const R=WN({inputs:{x:D},backend:r,attrs:{shape:x}});S.push(D);for(const _ of S)r.disposeIntermediateTensorInfo(_);return R}const eT={kernelName:_.usg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=s;return ZN({a:r,b:a,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},tT="return abs(x);";const nT={kernelName:_.SYM,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const e=n.texData.get(s.dataId),t=MS(e.values);return n.makeTensorInfo(s.shape,s.dtype,t)}let r;return r=(0,_.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new lN(s.shape,tT):new iN(s.shape,tT),n.runWebGLProgram(r,[s],s.dtype)}},sT=DN({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),rT={kernelName:_.VGw,backendName:"webgl",kernelFunc:sT},aT=DN({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),iT={kernelName:_.SpW,backendName:"webgl",kernelFunc:aT},oT="return a + b;",uT=RN({opSnippet:oT,packedOpSnippet:oT,supportsComplex:!0,cpuKernelImpl:sS}),lT={kernelName:_.mm_,backendName:"webgl",kernelFunc:uT};class cT{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${s};\n        setOutput(result);\n      }\n    `}}class hT{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${s};\n        setOutput(result);\n      }\n    `}}const pT={kernelName:_.Xze,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,r=n;if(1===r.length)return vN({inputs:{x:r[0]},backend:s});if(r.length>(0,_.OBj)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:s}),a=e({inputs:r.slice(t),backend:s});return e({inputs:[n,a],backend:s})}const a=r.map((e=>e.dtype)).reduce(((e,t)=>(0,_.x8V)(e,t))),i=r.map((e=>e.shape)),o=(0,_.OBj)().getBool("WEBGL_PACK")?new hT(r[0].shape,i):new cT(r[0].shape,i);return s.runWebGLProgram(o,r,a)}};const dT={kernelName:_.oT6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,u=_.D5U.parseAxisParam(a,r.shape);let l=u;const c=_.Wap.getAxesPermutation(l,o);let h=r;null!=c&&(h=YN({inputs:{x:r},backend:n,attrs:{perm:c}}),l=_.Wap.getInnerMostAxes(l.length,o)),_.Wap.assertAxesAreInnerMostDims("all",l,o);const[p,d]=_.Wap.computeOutAndReduceShapes(h.shape,l),f=WN({inputs:{x:h},backend:n,attrs:{shape:[-1,_.D5U.sizeFromShape(d)]}}),m=HN(f,f.dtype,"all",n);let g;if(i){g=WN({inputs:{x:m},backend:n,attrs:{shape:_.Wap.expandShapeToKeepDim(p,u)}})}else g=WN({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};const fT={kernelName:_.IKK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,u=_.D5U.parseAxisParam(a,r.shape);let l=u;const c=_.Wap.getAxesPermutation(l,o);let h=r;null!=c&&(h=YN({inputs:{x:r},backend:n,attrs:{perm:c}}),l=_.Wap.getInnerMostAxes(l.length,o)),_.Wap.assertAxesAreInnerMostDims("any",l,o);const[p,d]=_.Wap.computeOutAndReduceShapes(h.shape,l),f=WN({inputs:{x:h},backend:n,attrs:{shape:[-1,_.D5U.sizeFromShape(d)]}}),m=HN(f,f.dtype,"any",n);let g;if(i){g=WN({inputs:{x:m},backend:n,attrs:{shape:_.Wap.expandShapeToKeepDim(p,u)}})}else g=WN({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class mT{constructor(e,t,n){this.variableNames=["A"];const{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${s}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class gT{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,_.D5U.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=wI(o),l=ZS("coords",o);let c,h;if(1===a){h=o+1;const e=wI(h);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else h=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),d="."+p[h-1],f=p.map((e=>"int "+e)),m=ZS("sourceLocR",h-1).concat("inIdx.r"),g=ZS("sourceLocG",h-1).concat("inIdx.g"),y=ZS("sourceLocB",h-1).concat("inIdx.b"),b=ZS("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=s?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function yT(e,t,n,s=null){let r=t.shape[0],a=t.shape[1];null!=s&&(r=s.shape[0],a=s.shape[1]);const i=_.Wap.computeOptimalWindowSize(a),o={windowSize:i,inSize:a,batchSize:r,outSize:Math.ceil(a/i)},u=new mT(o,n,null==s),l=[t];null!=s&&l.push(s);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const h=yT(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function bT(e,t,n,s=null){const r=null!=s?s.shape:t.shape,a=r[r.length-1],i=_.Wap.computeOptimalWindowSize(a),o=new gT(r,i,n,null==s),u=null==s?[t]:[t,s],l=e.runWebGLProgram(o,u,"int32");if(l.shape.length===t.shape.length){const s=bT(e,t,n,l);return e.disposeIntermediateTensorInfo(l),s}return l}function xT(e,t,n,s){const r=[n];if(_.Wap.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!(0,_.OBj)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let i=t;null!==a&&a.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,u]=_.Wap.computeOutAndReduceShapes(i.shape,r),l=_.D5U.sizeFromShape(u),c=WN({inputs:{x:i},backend:e,attrs:{shape:[-1,l]}});n.push(c);const h=yT(e,c,s);n.push(h);const p=WN({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return bT(e,t,s)}const wT={kernelName:_.sJF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;let i=_.D5U.parseAxisParam(a,r.shape);const o=_.Wap.getAxesPermutation(i,r.shape.length);let u=r;const l=[];null!=o&&(u=YN({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=_.Wap.getInnerMostAxes(i.length,u.shape.length)),_.Wap.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);const c=xT(n,u,i[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};const vT={kernelName:_.aJk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;let i=_.D5U.parseAxisParam(a,r.shape);const o=_.Wap.getAxesPermutation(i,r.shape.length);let u=r;const l=[];null!=o&&(u=YN({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=_.Wap.getInnerMostAxes(i.length,u.shape.length)),_.Wap.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);const c=xT(n,u,i[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},kT=DN({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),IT={kernelName:_.M2y,backendName:"webgl",kernelFunc:kT},ST=DN({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),NT={kernelName:_.qw7,backendName:"webgl",kernelFunc:ST},TT=DN({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),CT={kernelName:_.jMg,backendName:"webgl",kernelFunc:TT},$T=RN({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),ET={kernelName:_.QCc,backendName:"webgl",kernelFunc:$T},AT=DN({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),DT={kernelName:_.Oyi,backendName:"webgl",kernelFunc:AT};class RT{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${s?r?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");const x=4*Math.floor(a/4),w=a%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class _T{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / max(count, 1.0)");const v=4*Math.floor(a/4),k=a%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n        }\n        setOutput(${w});\n      }\n    `}}const FT={kernelName:_.JhU,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;tI(r,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s;_.D5U.assert(_.Wap.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=_.Wap.computePool2DInfo(r.shape,a,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&_.D5U.arraysEqual(l.inShape,l.outShape))return vN({inputs:{x:r},backend:n});const c=new RT(l,"avg",!1);return n.runWebGLProgram(c,[r],"float32")}};const OT={kernelName:_._k9,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=s,c=_.Wap.computePool3DInfo(r.shape,a,i,[1,1,1],o,u,l),h=new _T(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class MT{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class BT{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const zT={kernelName:_.IMb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=s,h=_.Wap.computePool3DInfo(i.shape,o,u,[1,1,1],l,c),p=new BT(h);return n.runWebGLProgram(p,[r],i.dtype)}};const LT={kernelName:_.ROF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;tI([r,a],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=s,c=_.Wap.computePool2DInfo(i.shape,o,u,1,l),h=new MT(c);return n.runWebGLProgram(h,[r],i.dtype)}};const UT={kernelName:_.XLW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;return ZN({a:r,b:a,transposeA:i,transposeB:o,backend:n})}};class WT{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],_.Wap.assertAndGetBroadcastShape(e,t),_.Wap.assertAndGetBroadcastShape(e,n);let i="0.0";null!=s&&(_.Wap.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=r&&(_.Wap.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class PT{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],_.Wap.assertAndGetBroadcastShape(e,t),_.Wap.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=s&&(_.Wap.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(_.Wap.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const VT={kernelName:_.sHE,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,mean:r,variance:a,offset:i,scale:o}=e;_.D5U.assert(r.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),_.D5U.assert(null==i||r.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),_.D5U.assert(null==o||r.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[s,r,a];let c=null;null!=i&&(c=i.shape,l.push(i));let h=null;null!=o&&(h=o.shape,l.push(o));const p=(0,_.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new PT(s.shape,r.shape,a.shape,c,h,u):new WT(s.shape,r.shape,a.shape,c,h,u);return t.runWebGLProgram(p,l,l[0].dtype)}};class GT{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=wI(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return HT.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let s;s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${HT[t]} = start[${t}] + coords.${HT[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${s}\n        setOutput(getSource(${n}));\n      }\n    `}}const HT=["x","y","z","w","u","v"];class jT{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=wI(this.rank),n=ZS("coords",this.rank),s=ZS("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${s[this.rank-1]};\n        result.y = ${a};\n        --${s[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${s[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${s[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${s[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function XT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s,[o,u]=_.kuN.parseSliceParams(r,a,i);if(_.kuN.assertParamsValid(r,o,u),0===_.D5U.sizeFromShape(u))return n.makeTensorInfo(u,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=BS(e.values,o,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,t)}const{isPacked:l}=n.texData.get(r.dataId),c=_.kuN.isSliceContinous(r.shape,o,u);if(l||!c){const e=(0,_.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new jT(u):new GT(u),t=[o];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,s){const r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),i=s.texData.get(a.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=_.kuN.computeFlatOffset(t,_.D5U.computeStrides(e.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};const u=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,u+1),a}(r,o,u,n)}const qT={kernelName:_.p2w,backendName:"webgl",kernelFunc:XT},KT={kernelName:_.zws,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;_.D5U.assert(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),u=_.Wap.getReshaped(r.shape,a,o),l=_.Wap.getPermuted(u.length,a.length),c=_.Wap.getReshapedPermuted(r.shape,a,o),h=_.Wap.getSliceBeginCoords(i,a.length),p=_.Wap.getSliceSize(c,i,a.length),d=[],f=WN({inputs:{x:r},backend:n,attrs:{shape:u}}),m=YN({inputs:{x:f},backend:n,attrs:{perm:l}}),g=WN({inputs:{x:m},backend:n,attrs:{shape:c}}),y=XT({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return d.push(f),d.push(m),d.push(g),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const QT={kernelName:_.zvY,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=n.readSync(r.dataId),u=n.readSync(a.dataId),l=rS(o,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,l)}};const YT={kernelName:_.hCO,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:s,b:r}=t,a=(0,_.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=(0,_.OBj)().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([s,r])||1===i){const e=n.texData.get(s.dataId).values,t=n.texData.get(r.dataId).values,[a,i]=iS(s.shape,r.shape,e,t,s.dtype),o=n.makeTensorInfo(i,s.dtype);return n.texData.get(o.dataId).values=a,o}let o;return o=a?new wN("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",s.shape,r.shape,!1):new bN("\n  return float(int(a.r) & int(b.r));\n",s.shape,r.shape),n.runWebGLProgram(o,[s,r],s.dtype)}};const JT={kernelName:_.eEB,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.readSync(s.dataId),i=n.readSync(r.dataId),o=_.Wap.assertAndGetBroadcastShape(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},ZT=RN({opSnippet:"return float(a != b);",cpuKernelImpl:CS,dtype:"bool"}),eC={kernelName:_.yQU,backendName:"webgl",kernelFunc:ZT};function tC(e){const{inputs:t,backend:n}=e,{input:s}=t;return vN({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.real},backend:n})}const nC={kernelName:_.xJR,backendName:"webgl",kernelFunc:tC};const sC={kernelName:_.RFZ,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s,attrs:r}=t,{x:a}=n,{dtype:i}=r;if("complex64"===i){if("complex64"===a.dtype)return vN({inputs:{x:a},backend:s});const t=_.lls(a.shape),n=e({inputs:{x:a},backend:s,attrs:{dtype:"float32"}}),r=IN({inputs:{real:n,imag:t},backend:s});return t.dispose(),s.disposeIntermediateTensorInfo(n),r}if("complex64"===a.dtype){const t=tC({inputs:{input:a},backend:s}),n=e({inputs:{x:t},backend:s,attrs:{dtype:i}});return s.disposeIntermediateTensorInfo(t),n}if(!_.D5U.hasEncodingLoss(a.dtype,i)){const e=vN({inputs:{x:a},backend:s});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(s.shouldExecuteOnCPU([a])){const e=s.texData.get(a.dataId).values,[t,n,r]=oS(e,a.shape,a.dtype,i);return s.makeTensorInfo(t,n,r)}if("int32"===i)return function(e,t){const n=new iN(e.shape,"return float(int(x));"),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}(a,s);if("bool"===i){const e=s.makeTensorInfo([],"bool",_.D5U.getTypedArrayFromDType("bool",1)),t=ZT({inputs:{a:a,b:e},backend:s});return s.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},rC="return ceil(x);",aC=DN({opSnippet:rC,packedOpSnippet:rC,cpuKernelImpl:uS}),iC={kernelName:_.gJX,backendName:"webgl",kernelFunc:aC};class oC{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class uC{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const lC={kernelName:_.xnO,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:i}=s;let o;o=(0,_.OBj)().getBool("WEBGL_PACK_CLIP")?new uC(r.shape):new oC(r.shape);const u=[[a],[i]];return n.runWebGLProgram(o,[r],r.dtype,u)}};class cC{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function hC(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const pC={kernelName:_.yj2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new cC(s.shape),i=[hC(s,r.complexTensorInfos.real),hC(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class dC{constructor(e){this.outputShape=[],this.outputShape=_.Wap.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){const e=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${e}));`)}const s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class fC{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=_.Wap.computeOutShape(e,t);const n=this.outputShape,s=n.length,r=wI(s),a=ZS("coords",s),i=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];const u=i[t],l=i.slice(-2),c=i.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let f=1;f<o.length;f++){const e=o[f-1];h+=`\n        if (${u} < ${o[f]}  && ${u} >= ${o[f-1]}) {\n          return getChannel(\n            getT${f}(${mC(i,u,e)}),\n            vec2(${mC(l,u,e)}));\n        }`}const p=o.length,d=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${mC(i,u,d)}),\n          vec2(${mC(l,u,d)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[s-1]} = ${a[s-1]} + 1;\n        if (${a[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[s-2]} = ${a[s-2]} + 1;\n        if (${a[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[s-1]} = ${a[s-1]} - 1;\n        if (${a[s-2]} < ${n[s-2]} &&\n            ${a[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function mC(e,t,n){const s=e.indexOf(t);return e.map(((e,t)=>t===s?`${e} - ${n}`:e)).join()}function gC(e){const{inputs:t,backend:n}=e,{input:s}=t;return vN({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.imag},backend:n})}const yC={kernelName:_.J_u,backendName:"webgl",kernelFunc:gC};function bC(e,t,n){const s=e[0].dtype;if("complex64"===s){const s=e.map((e=>tC({inputs:{input:e},backend:n}))),r=e.map((e=>gC({inputs:{input:e},backend:n}))),a=bC(s,t,n),i=bC(r,t,n),o=IN({inputs:{real:a,imag:i},backend:n});return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let r=n.shouldExecuteOnCPU(e);if("string"===s&&(r=!0),r){const r=e.map((e=>{const s=_.D5U.sizeFromShape(e.shape.slice(t));return WN({inputs:{x:e},backend:n,attrs:{shape:[-1,s]}})})),a=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=_.Wap.computeOutShape(r.map((e=>e.shape)),1),o=1===r[0].shape[0],u=lS(a,i,s,o),l=_.Wap.computeOutShape(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,s,u);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const a=e.filter((e=>_.D5U.sizeFromShape(e.shape)>0)),i=(0,_.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&a[0].shape.length>1;if(1===a.length){const t=i?new iN(e[0].shape,uN):new lN(e[0].shape,uN);return n.runWebGLProgram(t,e,s)}const o=(0,_.OBj)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(a.length>o){const e=[];for(let r=0;r<a.length;r+=o){const s=a.slice(r,r+o);e.push(bC(s,t,n))}const s=bC(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return s}if(i){const e=new fC(a.map((e=>e.shape)),t);return n.runWebGLProgram(e,a,s)}const{tensors2D:u,outShape:l}=function(e,t,n){const s=_.Wap.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>WN({inputs:{x:e},attrs:{shape:[-1,_.D5U.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:s}}(a,t,n),c=new dC(u.map((e=>e.shape))),h=n.runWebGLProgram(c,u,s);u.forEach((e=>n.disposeIntermediateTensorInfo(e)));const p=WN({inputs:{x:h},attrs:{shape:l},backend:n});return n.disposeIntermediateTensorInfo(h),p}function xC(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=_.D5U.parseAxisParam(r,t[0].shape)[0],i=t.map((e=>e.shape));_.Wap.assertParamsConsistent(i,a);const o=_.Wap.computeOutShape(t.map((e=>e.shape)),a);if(0===_.D5U.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const u=t.filter((e=>_.D5U.sizeFromShape(e.shape)>0));return 1===u.length?vN({inputs:{x:u[0]},backend:n}):bC(u,a,n)}const wC={kernelName:_.Eh3,backendName:"webgl",kernelFunc:xC};class vC{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",w="";n&&(x=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class kC{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${s});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class IC{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=TI(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,u=e.filterHeight,l=e.filterWidth,c=l;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;m<l;m++)h+=`\n           vec4 xTexelC${2*m};\n           int xTexelC${2*m}Ready;\n           vec4 xTexelC${2*m+1};\n           int xTexelC${2*m+1}Ready;\n           vec4 xC${m};`;h+=`\n     for (int r = 0; r < ${u}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let m=0;m<l;m++)h+=`\n           xTexelC${2*m} = vec4(0.0);\n           xTexelC${2*m}Ready = 0;\n           xTexelC${2*m+1} = vec4(0.0);\n           xTexelC${2*m+1}Ready = 0;\n           xC${m} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(c+1)/2;m++){const t=2*m;if(h+=`\n           xC = xCCorner + ${t*o};\n           `,1===i){if(t<l&&(a%2==1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n               `,h+=1===o&&t>0?`\n                 xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                   } else {\n                     xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xC${t} = xTexelC${t};\n                 `,t+1<l)){const e=a%2==0?_.D5U.nearestLargerEven(o):o;o%2==0&&a%2==1||o%2!=0&&a%2!=1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                     xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${t+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${t+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                     } else {\n                      xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                     }\n                     `:`\n                     xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                     `):h+=1===e?`\n                     xC${t+1} = xTexelC${t};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                       xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${t+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${t+1}Ready = 1;\n                     }\n\n                     xC${t+1} = xTexelC${t+1};\n                     `}}else t<l&&(a%2==1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n               `,t+1<l&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(\n                   xTexelC${t}.xy, xTexelC${t+1}.xy);\n               `,t+1<l&&(h+=`\n                   xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                 `)));t<l&&(h+=`\n             wTexel = getW(r, ${t}, d1, d2);\n             dotProd += xC${t}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${t}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,t+1<l&&(h+=`\n               wTexel = getW(r, ${t+1}, d1, d2);\n               dotProd += xC${t+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${t+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let p="",d="";n&&(p=s?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:r?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,d="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${p}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${d}\n         setOutput(result);\n       }\n     `}}class SC{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=TI(this.outputShape.length);const{dataFormat:n}=t,s=sI(),r="channelsLast"===n,a=r?1:2,i=r?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let l=0;l<=1;l++)for(let e=0;e<=1;e++)u+=`\n          blockIndex = rc.z + ${e};\n          pos = rc.y + ${l};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${r}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*l+e}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*l+e}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${s.output} = result;\n      }\n    `}}function NC(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function TC({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const u=e.shape,l=s.texData.get(e.dataId),c=n.inChannels,h=u[0]*u[1]*u[2],p=n.outChannels,d="channelsLast"===n.dataFormat;let f;const m=[];if(null!=a){const e=NC(a.shape,d);null!=e&&(a=WN({inputs:{x:a},backend:s,attrs:{shape:e}}),m.push(a))}if(null!=r){const e=NC(r.shape,d);null!=e&&(r=WN({inputs:{x:r},backend:s,attrs:{shape:e}}),m.push(r))}if(!((1===h||1===p)&&c>1e3)&&l.isPacked&&d&&null!=l.texture&&u[2]%2!=0&&_.D5U.arraysEqual(l.shape.slice(-3),u.slice(-3))){const c=u[0]*u[1]*(u[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},p=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,_.D5U.assert(Wk(l.shape,h.shape),(()=>`packed reshape ${l.shape} to ${h.shape} isn't free`));const d=WN({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(d);const g=ZN({a:h,b:d,backend:s,transposeA:false,transposeB:false,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),y=s.texData.get(g.dataId);_.D5U.assert(y.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=p,y.shape=n.outShape,f=vN({inputs:{x:g},backend:s}),f.shape=n.outShape,m.push(g)}else{const u=n.outHeight*n.outWidth,l=WN({inputs:{x:e},backend:s,attrs:{shape:d?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),c=WN({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=ZN({a:d?l:c,b:d?c:l,transposeA:!d,transposeB:false,backend:s,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i});f=WN({inputs:{x:h},backend:s,attrs:{shape:n.outShape}}),m.push(l),m.push(c),m.push(h)}for(const g of m)s.disposeIntermediateTensorInfo(g);return f}function CC({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:p,dataFormat:d}=n,f="channelsLast"===d,m=u*l*c,g=p*h,y=[n.batchSize,m,g],b=[];if(null!=a){const e=NC(a.shape,f);null!=e&&(a=WN({inputs:{x:a},backend:s,attrs:{shape:e}}),b.push(a))}if(null!=r){const e=NC(r.shape,f);null!=e&&(r=WN({inputs:{x:r},backend:s,attrs:{shape:e}}),b.push(r))}const x=WN({inputs:{x:t},backend:s,attrs:{shape:[1,m,_.D5U.sizeFromShape(t.shape)/m]}});b.push(x);const w=new SC(y,n),v=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=s.runWebGLProgram(w,[e],"float32",v),I=WN({inputs:{x:k},backend:s,attrs:{shape:y}});b.push(k),b.push(I);const S=null!=r,N=null!=a,T="leakyrelu"===o,C=o?_N(o,!0):null,$=new FN(f?I.shape:x.shape,f?x.shape:I.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,S,C,N,T),E=f?[I,x]:[x,I];if(r&&E.push(r),N&&E.push(a),T){const e=s.makeTensorInfo([],"float32",_.D5U.createScalarValue(i,"float32"));E.push(e),b.push(e)}const A=s.runWebGLProgram($,E,"float32"),D=WN({inputs:{x:A},backend:s,attrs:{shape:n.outShape}});b.push(A);for(const R of b)s.disposeIntermediateTensorInfo(R);return D}const $C={kernelName:_.mhS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=s,h=_.Wap.convertConv2DDataFormat(u),p=_.Wap.computeConv2DInfo(r.shape,a.shape,i,l,o,c,!1,h);let d;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(p.strideWidth<=2&&"channelsLast"===h&&(0,_.OBj)().getBool("WEBGL_EXP_CONV")){const e=new IC(p),t=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];d=n.runWebGLProgram(e,[r,a],"float32",t)}else if((0,_.OBj)().getBool("WEBGL_CONV_IM2COL"))d=CC({x:r,filter:a,convInfo:p,backend:n});else{const e=new vC(p);d=n.runWebGLProgram(e,[r,a],"float32")}else d=TC({x:r,filter:a,convInfo:p,backend:n});const f=WN({inputs:{x:d},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(d),f}};class EC{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${a?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class AC{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class DC{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${r};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${s} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class RC{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=s-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${s}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${s} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const _C={kernelName:_.wUP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=s,h=_.Wap.convertConv2DDataFormat(u),p=_.Wap.computeConv2DInfo(r.shape,c,i,1,o,l,!1,h),d=new EC(p);return n.runWebGLProgram(d,[r,a],"float32")}};class FC{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=TI(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,s=t-1-e.padInfo.top,r=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${r});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const OC={kernelName:_.wm,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=s,h=_.Wap.convertConv2DDataFormat(l),p=_.Wap.computeConv2DInfo(i,a.shape,o,1,u,c,!1,h);if((0,_.OBj)().getBool("WEBGL_PACK")&&"channelsLast"===h){const e=[[p.strideHeight,p.strideWidth]],t=new FC(p);return n.runWebGLProgram(t,[r,a],"float32",e)}{const e=new AC(p);return n.runWebGLProgram(e,[r,a],"float32")}}};const MC={kernelName:_.x12,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u}=s,l=_.Wap.computeConv3DInfo(r.shape,a.shape,i,u,o),c=new kC(l);return n.runWebGLProgram(c,[r,a],"float32")}};const BC={kernelName:_.o2y,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:u}=s,l=_.Wap.computeConv3DInfo(r.shape,u,i,1,o),c=new DC(l);return n.runWebGLProgram(c,[r,a],"float32")}};const zC={kernelName:_.ik2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:u}=s,l=_.Wap.computeConv3DInfo(u,a.shape,o,1,i),c=new RC(l);return n.runWebGLProgram(c,[r,a],"float32")}},LC=DN({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${xN}\n  return result;\n`}),UC={kernelName:_.mc4,backendName:"webgl",kernelFunc:LC},WC=DN({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),PC={kernelName:_.TR1,backendName:"webgl",kernelFunc:WC};class VC{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const p="bilinear"===s?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const GC={kernelName:_.VcC,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=s,c=new VC(r.shape,a.shape,o,u,l);return n.runWebGLProgram(c,[r,a,i],"float32")}};var HC;!function(e){e.Prod="*",e.Sum="+"}(HC||(HC={}));class jC{constructor(e,t,n,s){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,a=this.op===HC.Prod?"1.0":"0.0",i=n?a:`getX(${XC(r,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let u="",l="";n?(u=s?"end != "+(o-1):"end != 0",l=s?"end + 1":"end - 1"):(u=s?`end + pow2 < ${o}`:"end >= pow2",l=s?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${wI(r)} coords = getOutputCoords();\n        int end = ${qC(r,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${u}) {\n          int idx = ${l};\n          ${qC(r,"coords",this.op)} = idx;\n          val ${this.op}= getX(${XC(r,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function XC(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function qC(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function KC(e,t,n,s,r,a){const i=t.shape.length,o=_.Wap.getAxesPermutation([s],i);let u=t;null!=o&&(u=YN({inputs:{x:t},backend:n,attrs:{perm:o}}));const l=_.Wap.getInnerMostAxes(1,i)[0];if(l!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const c=u.shape[l];let h=vN({inputs:{x:u},backend:n});for(let p=0;p<=Math.ceil(Math.log2(c))-1;p++){const t=new jC(e,u.shape,!1,a),s=[[p]],r=h;h=n.runWebGLProgram(t,[h],h.dtype,s),n.disposeIntermediateTensorInfo(r)}if(r){const t=new jC(e,u.shape,r,a),s=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(s)}if(null!=o){const e=YN({inputs:{x:h},backend:n,attrs:{perm:_.Wap.getUndoAxesPermutation(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),e}return h}const QC={kernelName:_.Byc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;return KC(HC.Prod,r,n,a,i,o)}};const YC={kernelName:_.iHb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;return KC(HC.Sum,r,n,a,i,o)}};const JC={kernelName:_.QRR,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(a.dataId),s=rS(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,s)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(a),s=aS(e,t,i,o);return n.makeTensorInfo(s.shape,a.dtype,s.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};class ZC{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const e$={kernelName:_.T0n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s,o=r.shape[0],u=("NHWC"===i?r.shape[1]:r.shape[2])*a,l=("NHWC"===i?r.shape[2]:r.shape[3])*a,c=("NHWC"===i?r.shape[3]:r.shape[1])/(a*a),h=new ZC("NHWC"===i?[o,u,l,c]:[o,c,u,l],a,i);return n.runWebGLProgram(h,[r],r.dtype)}};class t${constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=TI(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let u="",l="";n&&(u=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class n${constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=TI(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,h=c;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<c;g++)p+=`\n          vec4 xTexelC${2*g};\n          int xTexelC${2*g}Ready;\n          vec4 xTexelC${2*g+1};\n          int xTexelC${2*g+1}Ready;\n          vec4 xC${g};`;p+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let g=0;g<c;g++)p+=`\n          xTexelC${2*g} = vec4(0.0);\n          xTexelC${2*g}Ready = 0;\n          xTexelC${2*g+1} = vec4(0.0);\n          xTexelC${2*g+1}Ready = 0;\n          xC${g} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(h+1)/2;g++){const e=2*g;if(p+=`\n          xC = xCCorner + ${e*u};\n          `,1===o){if(e<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,p+=1===u&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<c)){const t=i%2==0?_.D5U.nearestLargerEven(u):u;u%2==0&&i%2==1||u%2!=0&&i%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,p+=u>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                    } else {\n                     xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                    }\n                    `:`\n                    xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                    `):p+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<c&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<c&&(p+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<c&&(p+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<c&&(p+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let d="",f="";n&&(d=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${d}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const s$={kernelName:_.cie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=s;let c=u;null==c&&(c=[1,1]),_.D5U.assert(_.Wap.eitherStridesOrDilationsAreOne(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=_.Wap.computeConv2DInfo(r.shape,a.shape,i,c,o,l,!0);let p;p=(0,_.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new n$(h):new t$(h);const d=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[r,a],"float32",d)}};class r${constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class a${constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const i$={kernelName:_.sL$,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=s,h=_.Wap.computeConv2DInfo(r.shape,c,i,o,u,l,!0),p=new r$(h);return n.runWebGLProgram(p,[r,a],"float32")}};const o$={kernelName:_.y7R,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=s,h=_.Wap.computeConv2DInfo(c,a.shape,i,o,u,l,!0),p=new a$(h);return n.runWebGLProgram(p,[r,a],"float32")}};class u${constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const l$={kernelName:_.$w,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=_.D5U.sizeFromShape(s.shape),i=WN({inputs:{x:s},backend:n,attrs:{shape:[a]}}),o=new u$(a),u=n.runWebGLProgram(o,[i],i.dtype),l=WN({inputs:{x:u},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}};class c${constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=s;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const h$={kernelName:_.p4S,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u}=s,l=_.Wap.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);let c;const h=new c$(l);c=n.runWebGLProgram(h,[r,a],"float32");const p=WN({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),p}};const p$={kernelName:_.$g6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:u}=_.Wap.decodeEinsumEquation(r,a.length);_.Wap.checkEinsumDimSizes(i.length,u,a);const{path:l,steps:c}=_.Wap.getEinsumComputePath(o,u),h=c.length;let p=null,d=i.length;const f=[];for(let m=0;m<h;++m){for(const e of c[m]){const{permutationIndices:t,expandDims:s}=_.Wap.getEinsumPermutation(d,u[e]);let r;_.Wap.isIdentityPermutation(t)?r=a[e]:(r=YN({inputs:{x:a[e]},backend:n,attrs:{perm:t}}),f.push(r));const i=r.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);_.D5U.arraysEqual(r.shape,i)||(r=WN({inputs:{x:r},backend:n,attrs:{shape:i}}),f.push(r)),null===p?p=r:(p=LN({inputs:{a:r,b:p},backend:n}),f.push(p))}m<h-1&&(l[m]>=0&&(p=KN({inputs:{x:p},backend:n,attrs:{axis:l[m]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}},d$=DN({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),f$={kernelName:_.SX0,backendName:"webgl",kernelFunc:d$},m$={kernelName:_.HEU,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=(0,_.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wN("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,r.shape):new bN("return (b >= 0.0) ? a : a * (b + 1.0);",s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)}},g$=RN({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:cS}),y$={kernelName:_.hdR,backendName:"webgl",kernelFunc:g$},b$=DN({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${_.Wap.ERF_P};\n  float a1 = ${_.Wap.ERF_A1};\n  float a2 = ${_.Wap.ERF_A2};\n  float a3 = ${_.Wap.ERF_A3};\n  float a4 = ${_.Wap.ERF_A4};\n  float a5 = ${_.Wap.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),x$={kernelName:_.Omj,backendName:"webgl",kernelFunc:b$},w$=DN({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:hS,dtype:"float32"}),v$={kernelName:_.NEP,backendName:"webgl",kernelFunc:w$};function k$(e){const{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let u=r;return r<0&&(_.D5U.assert(-(i+1)<=r,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+r+1),o.splice(u,0,1),WN({inputs:{x:a},backend:s,attrs:{shape:o}})}const I$={kernelName:_.YFo,backendName:"webgl",kernelFunc:k$},S$="return exp(x) - 1.0;",N$=DN({opSnippet:S$,packedOpSnippet:S$,cpuKernelImpl:pS}),T$={kernelName:_.Y0y,backendName:"webgl",kernelFunc:N$};class C${constructor(e,t,n){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${s});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${s}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function $$(e,t,n){const s=n.texData.get(e.dataId),r=_.D5U.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],i=WN({inputs:{x:e},backend:n,attrs:{shape:[r/a,a]}}),o=i.shape,u=new C$("real",o,t),l=new C$("imag",o,t),c=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:o},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(u,c,"float32"),p=n.runWebGLProgram(l,c,"float32"),d=IN({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const f=WN({inputs:{x:d},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(d),f}const E$={kernelName:_.vwp,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return $$(s,!1,n)}};class A${constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function D$(e){const{backend:t,attrs:n}=e,{shape:s,value:r}=n;let{dtype:a}=n;if(a=a||_.D5U.inferDtype(r),"string"===a){const e=_.D5U.getArrayFromDType(a,_.D5U.sizeFromShape(s));return e.fill(r),t.makeTensorInfo(s,a,e)}{const e=new A$(s,r),n=[[r]];return t.runWebGLProgram(e,[],a,n)}}const R$={kernelName:_.deh,backendName:"webgl",kernelFunc:D$};class _${constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const F$={kernelName:_.Uyb,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,s=t,r=new _$(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},O$="return floor(x);",M$=DN({opSnippet:O$,packedOpSnippet:O$,cpuKernelImpl:dS}),B$={kernelName:_.OR,backendName:"webgl",kernelFunc:M$},z$=RN({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),L$={kernelName:_.jeX,backendName:"webgl",kernelFunc:z$};class U${constructor(e){this.variableNames=["A"];const t=sI(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class W${constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=sI(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const P$={kernelName:_.eBW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e;let{pixels:r}=t;const{numChannels:a}=s,i="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,[u,l]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[l,u],h=[l,u,a];if(o||i){const e=(0,_.OBj)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=V$&&e===G$||(G$=e,V$=document.createElement("canvas").getContext("2d",{willReadFrequently:G$})),V$.canvas.width=u,V$.canvas.height=l,V$.drawImage(r,0,0,u,l),r=V$.canvas}const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=ek.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),r);const d=(0,_.OBj)().getBool("WEBGL_PACK")?new W$(h):new U$(h),f=n.runWebGLProgram(d,[p],"int32");return n.disposeData(p.dataId),f}};let V$,G$=(0,_.OBj)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const H$={kernelName:_._V0,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s,m=_.Wap.convertConv2DDataFormat(c),g=_.Wap.computeConv2DInfo(r.shape,a.shape,u,h,l,p,!1,m);let y;const b=[],x=null!=i,w=null!=o,v="leakyrelu"===d,k=()=>{const e=[r,a],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=WN({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(i,c)),w&&e.push(t(o,c)),v){const t=n.makeTensorInfo([],"float32",_.D5U.createScalarValue(f,"float32"));e.push(t),b.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&(0,_.OBj)().getBool("WEBGL_EXP_CONV")){const e=d?_N(d,!0):null,t=new IC(g,x,e,w,v),s=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],r=k();y=n.runWebGLProgram(t,r,"float32",s)}else if((0,_.OBj)().getBool("WEBGL_CONV_IM2COL"))y=CC({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});else{const e=d?_N(d,!1):null,t=new vC(g,x,e,w,v),s=k();y=n.runWebGLProgram(t,s,"float32")}else y=TC({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});const I=WN({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};const j$={kernelName:_.luS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=s,f=[];let m=c;null==m&&(m=[1,1]),_.D5U.assert(_.Wap.eitherStridesOrDilationsAreOne(u,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`));const g=_.Wap.computeConv2DInfo(r.shape,a.shape,u,m,l,h,!0),y=(0,_.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=p?_N(p,y):null,x=[r,a],w=null!=i,v=null!=o,k="leakyrelu"===p;if(w&&x.push(i),v&&x.push(o),k){const e=n.makeTensorInfo([],"float32",_.D5U.createScalarValue(d,"float32"));x.push(e),f.push(e)}let I;I=y?new n$(g,w,b,v,k):new t$(g,w,b,v,k);const S=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=n.runWebGLProgram(I,x,"float32",S);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};class X${constructor(e,t,n,s){this.sliceDim=e,this.strides=t,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=n;const r=wI(n.length);let a="\n    int index;";for(let i=0;i<this.sliceDim;i++)a+=`\n          index = round(getIndices(coords[0], ${i}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};\n          flattenIndex += index * ${this.strides[i]};`;this.userCode=`\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${a}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const q$={kernelName:_.q1x,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,i=a[a.length-1],o=_.D5U.sizeFromShape(s.shape),[u,l,c,h]=_.Wap.prepareAndValidate(s,r),p=WN({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),d=WN({inputs:{x:s},backend:n,attrs:{shape:[_.D5U.sizeFromShape(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||"string"===s.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(s),a=fS(e,t,s.dtype,l,i,c,h,s.shape,o);return n.makeTensorInfo(u,s.dtype,a.values)}const f=new X$(i,h,[l,c],s.shape),m=n.runWebGLProgram(f,[d,p],d.dtype),g=WN({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),g}};class K${constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=wI(this.rank),s=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)2===r?s.push("index"):s.push(`${n[r]}`);return s.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${s}));\n      }\n    `}}function Q$(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s,u=_.D5U.parseAxisParam(i,r.shape)[0];if((0,_.OBj)().get("DEBUG")){const e=n.readSync(a.dataId),t=r.shape[u];for(let n=0;n<e.length;++n){const s=e[n];_.D5U.assert(s<=t-1&&s>=0,(()=>`GatherV2: the index value ${s} is not in [0, ${t-1}]`))}}const l=_.Wap.segment_util.collectGatherOpShapeInfo(r,a,u,o),c=_.D5U.sizeFromShape(a.shape),h=[],p=WN({inputs:{x:r},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=WN({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(p),h.push(d);const f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.bufferSync(d),t=n.bufferSync(p),s=mS(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,s.dtype,s.values)}const m=new K$(p.shape,f),g=n.runWebGLProgram(m,[p,d],p.dtype);h.push(g);const y=WN({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const Y$={kernelName:_.qi_,backendName:"webgl",kernelFunc:Q$},J$=RN({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:gS,dtype:"bool"}),Z$={kernelName:_.iZT,backendName:"webgl",kernelFunc:J$},eE=RN({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:yS}),tE={kernelName:_.Acj,backendName:"webgl",kernelFunc:eE};const nE={kernelName:_.Qg5,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return $$(s,!0,n)}},sE=DN({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),rE={kernelName:_.avt,backendName:"webgl",kernelFunc:sE},aE=DN({opSnippet:"return float(isinf(x));",dtype:"bool"}),iE={kernelName:_.iWB,backendName:"webgl",kernelFunc:aE},oE=DN({opSnippet:"return float(isnan(x));",dtype:"bool"}),uE={kernelName:_.r7n,backendName:"webgl",kernelFunc:oE},lE=RN({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:bS,dtype:"bool"}),cE={kernelName:_.vtC,backendName:"webgl",kernelFunc:lE},hE=RN({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:xS,dtype:"bool"}),pE={kernelName:_.CAk,backendName:"webgl",kernelFunc:hE};const dE={kernelName:_.e7N,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=wS(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}},fE=DN({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:vS}),mE={kernelName:_.ZbH,backendName:"webgl",kernelFunc:fE},gE=DN({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),yE={kernelName:_.kU,backendName:"webgl",kernelFunc:gE},bE=RN({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),xE={kernelName:_.PYm,backendName:"webgl",kernelFunc:bE},wE=DN({opSnippet:"return float(!(x >= 1.0));"}),vE={kernelName:_.VfG,backendName:"webgl",kernelFunc:wE},kE=RN({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),IE={kernelName:_.MZg,backendName:"webgl",kernelFunc:kE};class SE{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${u})`:1===r?`1.0/(${u})`:`exp(log(${u}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class NE{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${u})`:1===r?`1.0/(${u})`:`exp(log(${u}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const TE={kernelName:_.eZ0,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=s,l=(0,_.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new NE(r.shape,a,i,o,u):new SE(r.shape,a,i,o,u);return n.runWebGLProgram(l,[r],r.dtype)}};class CE{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${s}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${s})\n                * float(${r})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const $E={kernelName:_.Hhh,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=s,h=new CE(r.shape,o,u,l,c);return n.runWebGLProgram(h,[r,a,i],r.dtype)}};function EE(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=r.shape.length,u=_.D5U.parseAxisParam(a,r.shape);let l=u;const c=_.Wap.getAxesPermutation(l,o),h=null!=c,p=n.shouldExecuteOnCPU([r]);let d=r;if(h){if(p){const e=n.texData.get(d.dataId).values,t=new Array(o);for(let n=0;n<t.length;n++)t[n]=r.shape[c[n]];const s=QS(e,r.shape,r.dtype,c,t);d=n.makeTensorInfo(t,r.dtype);n.texData.get(d.dataId).values=s}else d=qN(r,c,n);l=_.Wap.getInnerMostAxes(l.length,o)}_.Wap.assertAxesAreInnerMostDims("max",l,o);const[f,m]=_.Wap.computeOutAndReduceShapes(d.shape,l);let g,y=f;if(i&&(y=_.Wap.expandShapeToKeepDim(f,u)),p){const e=n.texData.get(d.dataId).values,t=kS(e,_.D5U.sizeFromShape(m),y,r.dtype);g=n.makeTensorInfo(y,r.dtype);n.texData.get(g.dataId).values=t}else g=function(e,t,n,s){const r=_.D5U.sizeFromShape(t),a=WN({inputs:{x:e},attrs:{shape:[_.D5U.sizeFromShape(e.shape)/r,r]},backend:s}),i=HN(a,e.dtype,"max",s),o=WN({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(d,m,y,n);return h&&n.disposeIntermediateTensorInfo(d),g}const AE={kernelName:_.YoZ,backendName:"webgl",kernelFunc:EE},DE=RN({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:IS}),RE={kernelName:_.BMI,backendName:"webgl",kernelFunc:DE};const _E={kernelName:_.mTV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;tI(r,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s;_.D5U.assert(_.Wap.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=_.Wap.computePool2DInfo(r.shape,a,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&_.D5U.arraysEqual(l.inShape,l.outShape))return vN({inputs:{x:r},backend:n});const c=new RT(l,"max",!1);return n.runWebGLProgram(c,[r],r.dtype)}};const FE={kernelName:_.OAf,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=s,c=_.Wap.computePool3DInfo(r.shape,a,i,[1,1,1],o,l,u),h=new _T(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class OE{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=a-1-e.padInfo.left,u=r*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ME{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,p=l-1-e.padInfo.left,d=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const BE={kernelName:_.OU7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=s,h=_.Wap.computePool3DInfo(i.shape,o,u,[1,1,1],l,c),p=new _T(h,"max",!0),d=n.runWebGLProgram(p,[i],i.dtype),f=new ME(h),m=n.runWebGLProgram(f,[r,d],i.dtype);return n.disposeIntermediateTensorInfo(d),m}};const zE={kernelName:_.OV7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;tI([a,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=s,p=_.Wap.computePool2DInfo(o.shape,u,l,1,c,h),d=new RT(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new OE(p),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};const LE={kernelName:_.vFR,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;_.D5U.assert(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const l=[1,1];_.D5U.assert(_.Wap.eitherStridesOrDilationsAreOne(a,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`));const c=_.Wap.computePool2DInfo(s.shape,r,a,l,i),[h,p]=function(e,t,n,s){let r=new RT(n,"max",!1);const a=s.runWebGLProgram(r,[e],"float32");return r=new RT(n,"max",!0,!0,t),[a,s.runWebGLProgram(r,[e],"float32")]}(s,o,c,u);return[h,p]}};const UE={kernelName:_.q2K,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{keepDims:r,axis:a}=t,i=n,o=s.shape.length,u=_.D5U.parseAxisParam(a,s.shape);let l=u;const c=_.Wap.getAxesPermutation(l,o),h=null!=c,p=i.shouldExecuteOnCPU([s]),d=[];let f=s;if(h){if(p){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let r=0;r<t.length;r++)t[r]=s.shape[c[r]];const n=QS(e,s.shape,s.dtype,c,t);f=i.makeTensorInfo(t,s.dtype);i.texData.get(f.dataId).values=n}else f=qN(s,c,i);d.push(f),l=_.Wap.getInnerMostAxes(l.length,o)}_.Wap.assertAxesAreInnerMostDims("sum",l,o);const[m,g]=_.Wap.computeOutAndReduceShapes(f.shape,l);let y=m;r&&(y=_.Wap.expandShapeToKeepDim(m,u));const b=function(e,t,n,s){const r=_.D5U.sizeFromShape(t),a=WN({inputs:{x:e},attrs:{shape:[_.D5U.sizeFromShape(e.shape)/r,r]},backend:s}),i=HN(a,"float32","mean",s),o=WN({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const x of d)i.disposeIntermediateTensorInfo(x);return b}};const WE={kernelName:_.c17,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,u=_.D5U.parseAxisParam(a,r.shape);let l=u;const c=_.Wap.getAxesPermutation(l,o);let h=r;null!=c&&(h=YN({inputs:{x:r},backend:n,attrs:{perm:c}}),l=_.Wap.getInnerMostAxes(l.length,r.shape.length)),_.Wap.assertAxesAreInnerMostDims("min",l,o);const[p,d]=_.Wap.computeOutAndReduceShapes(h.shape,l),f=WN({inputs:{x:h},backend:n,attrs:{shape:[-1,_.D5U.sizeFromShape(d)]}}),m=HN(f,f.dtype,"min",n);let g;if(i){g=WN({inputs:{x:m},backend:n,attrs:{shape:_.Wap.expandShapeToKeepDim(p,u)}})}else g=WN({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},PE=RN({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:SS}),VE={kernelName:_.q8u,backendName:"webgl",kernelFunc:PE};class GE{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=wI(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),u="reflect"===n?0:1;this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${s}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class HE{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=wI(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=ZS("rc",s),u=ZS("source",s),l=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===s){const e=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[s-2]} += 1;\n        if(${o[s-2]} < ${this.outputShape[s-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[s-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const jE={kernelName:_.jQs,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s}=e,{paddings:r,mode:a}=n,i=(0,_.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new HE(s.shape,r,a):new GE(s.shape,r,a);return t.runWebGLProgram(i,[s],s.dtype)}},XE=RN({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),qE={kernelName:_.Vbg,backendName:"webgl",kernelFunc:XE};class KE{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const QE=RN({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),YE={kernelName:_.oHH,backendName:"webgl",kernelFunc:QE},JE="return a - b;",ZE=RN({opSnippet:JE,packedOpSnippet:JE,supportsComplex:!0,cpuKernelImpl:XS}),eA={kernelName:_.Tr8,backendName:"webgl",kernelFunc:ZE};function tA(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=_.D5U.parseAxisParam([a],r.shape),o=EE({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=_.Wap.expandShapeToKeepDim(o.shape,i),l=WN({inputs:{x:o},backend:n,attrs:{shape:u}}),c=ZE({inputs:{a:r,b:l},backend:n}),h=w$({inputs:{x:c},backend:n}),p=KN({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),d=WN({inputs:{x:p},backend:n,attrs:{shape:u}}),f=QE({inputs:{a:h,b:d},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),f}const nA={kernelName:_.Gcp,backendName:"webgl",kernelFunc:tA};const sA={kernelName:_.NZg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s,u=o?r:tA({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new KE(l,c,a),p=[[i]],d=n.runWebGLProgram(h,[u],"int32",p);return o||n.disposeIntermediateTensorInfo(u),d}};const rA={kernelName:_.kuV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){const e=n.texData.get(s.dataId),[t,r]=TS(e.values,s.shape,s.dtype);return n.makeTensorInfo(r,s.dtype,t)}let r;return r=(0,_.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new lN(s.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new iN(s.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(r,[s],s.dtype)}},aA=_.GDt.nonMaxSuppressionV3Impl;const iA={kernelName:_.uv1,backendName:"webgl",kernelFunc:function(e){_.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=s,l=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=aA(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},oA=_.GDt.nonMaxSuppressionV4Impl;const uA={kernelName:_.cye,backendName:"webgl",kernelFunc:function(e){_.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),{selectedIndices:p,validOutputs:d}=oA(c,h,i,o,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},lA=_.GDt.nonMaxSuppressionV5Impl;const cA={kernelName:_.W0H,backendName:"webgl",kernelFunc:function(e){_.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),p=i,d=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=lA(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class hA{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${s}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const pA={kernelName:_.we_,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{dtype:a,depth:i,onValue:o,offValue:u}=s,l=_.D5U.sizeFromShape(r.shape),c=new hA(l,i,o,u),h=WN({inputs:{x:r},backend:n,attrs:{shape:[l]}}),p=n.runWebGLProgram(c,[h],a);n.disposeIntermediateTensorInfo(h);const d=WN({inputs:{x:p},backend:n,attrs:{shape:[...r.shape,i]}});return n.disposeIntermediateTensorInfo(p),d}};function dA(e){const{inputs:t,backend:n}=e,{x:s}=t;if("complex64"===s.dtype){const e=tC({inputs:{input:s},backend:n}),t=dA({inputs:{x:e},backend:n}),r=gC({inputs:{input:s},backend:n}),a=dA({inputs:{x:r},backend:n}),i=IN({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return D$({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:n})}const fA={kernelName:_.RuY,backendName:"webgl",kernelFunc:dA};const mA={kernelName:_.qWM,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=tC({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=gC({inputs:{input:r},backend:s}),i=dA({inputs:{x:a},backend:s}),o=IN({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return D$({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:s})}};const gA={kernelName:_.QiL,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return k$({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{_.D5U.assertShapesMatch(a,e.shape,"All tensors passed to stack must have matching shapes"),_.D5U.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=xC({inputs:t.map((e=>{const t=k$({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class yA{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=wI(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class bA{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=wI(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=ZS("rc",s),u=ZS("source",s),l=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${u.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${o[s-1]} += 1;\n       if(${l}) {\n      `,1===s?"":`}\n       rc = outputLoc;\n       ${o[s-2]} += 1;\n       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${o[s-1]} += 1;\n         if(${l}) {`],p=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let f=0,m=1===s?2:4;f<m;f++)d+=`\n        ${h[f]}\n        if (${p}) {\n          result[${f}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${f}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;d+=1===s?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const xA=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;if(0===_.D5U.sizeFromShape(r.shape)){const e=a.map(((e,t)=>e[0]+r.shape[t]+e[1]));return D$({backend:n,attrs:{shape:e,value:i,dtype:r.dtype}})}const o=(0,_.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bA(r.shape,a,i):new yA(r.shape,a,i),u=[[i]];return n.runWebGLProgram(o,[r],r.dtype,u)},wA={kernelName:_.lyA,backendName:"webgl",kernelFunc:xA},vA=RN({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),kA={kernelName:_.pe_,backendName:"webgl",kernelFunc:vA};const IA={kernelName:_.DlI,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,u=[],l=_.D5U.parseAxisParam(a,r.shape);let c=l;const h=_.Wap.getAxesPermutation(c,o);let p,d=r;if(null!=h&&(d=YN({inputs:{x:r},backend:n,attrs:{perm:h}}),c=_.Wap.getInnerMostAxes(c.length,o),u.push(d)),_.Wap.assertAxesAreInnerMostDims("prod",c,o),n.shouldExecuteOnCPU([d])){const e=n.texData.get(d.dataId).values,{outVals:t,outShape:s,outDtype:r}=$S(d.shape,d.dtype,e,c);p=n.makeTensorInfo(s,r,t)}else{const[e,t]=_.Wap.computeOutAndReduceShapes(d.shape,c),s=_.D5U.sizeFromShape(t),a=WN({inputs:{x:d},backend:n,attrs:{shape:[-1,s]}}),i=HN(a,(0,_.z4k)(r.dtype),"prod",n);p=WN({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(a),u.push(i)}if(i){u.push(p);const e=_.Wap.expandShapeToKeepDim(p.shape,l);p=WN({inputs:{x:p},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};const SA={kernelName:_.dDz,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{paramsNestedSplits:r,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=s,u=r.map((e=>n.readSync(e.dataId))),l=r.map((e=>e.shape)),c=n.readSync(a.dataId),h=n.readSync(i.dataId),[p,d,f]=ES(u,l,c,a.shape,a.dtype,h,i.shape,o),m=p.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,d);return m.concat([g])}};const NA={kernelName:_.CQl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:s,limits:r,deltas:a}=t,i=n.readSync(s.dataId),o=n.readSync(r.dataId),u=n.readSync(a.dataId),[l,c]=AS(i,s.shape,s.dtype,o,r.shape,u,a.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([c.length],s.dtype,c)]}};const TA={kernelName:_.BiW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{shape:r,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=s,l=n.readSync(r.dataId),c=n.readSync(a.dataId),h=n.readSync(i.dataId),p=o.map((e=>n.readSync(e.dataId))),d=o.map((e=>e.shape)),[f,m]=DS(l,r.shape,c,a.shape,a.dtype,h,i.shape,p,d,u);return n.makeTensorInfo(f,a.dtype,m)}},CA=e=>{const{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:i}=n,o=RS(s,r,a,i);return t.makeTensorInfo([o.length],i,o)},$A={kernelName:_.e6w,backendName:"webgl",kernelFunc:CA},EA=DN({opSnippet:"return 1.0 / x;"}),AA={kernelName:_.$HU,backendName:"webgl",kernelFunc:EA},DA=DN({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),RA={kernelName:_.qkr,backendName:"webgl",kernelFunc:DA},_A=DN({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),FA={kernelName:_.SbG,backendName:"webgl",kernelFunc:_A};class OA{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class MA{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const BA={kernelName:_._Yw,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[u,l]=o,c=(0,_.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new MA(r.shape,u,l,a,i):new OA(r.shape,u,l,a,i);return n.runWebGLProgram(c,[r],"float32")}};class zA{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const LA={kernelName:_.zbQ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new zA(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class UA{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let p;p=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class WA{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let p;p=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const PA={kernelName:_.dpD,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[u,l]=o,c=(0,_.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new WA(r.shape,u,l,a,i):new UA(r.shape,u,l,a,i);return n.runWebGLProgram(c,[r],r.dtype)}};class VA{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const GA={kernelName:_.Hmb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new VA(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class HA{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const s=e.map(((n,s)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(s))).join(","),r=wI(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}class jA{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const s=ZS("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,i=wI(n);function o(n){const s=e.map(((s,r)=>function(n,s){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${s[n]} - 1`:`${s[n]}`}(r,n)));return`getChannel(getX(${s.join(",")}), vec2(${s.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(s.slice())};\n          if(${r}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(s.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            if(${r}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const XA={kernelName:_.mKl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,i=r.shape.length,o=_.D5U.parseAxisParam(a,r.shape);if(0===i)return vN({inputs:{x:r},backend:n});const u=(0,_.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new jA(r.shape,o):new HA(r.shape,o);return n.runWebGLProgram(u,[r],r.dtype)}};class qA{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],s=e[2];this.outputShape=e;let r="";r="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const KA={kernelName:_.b9H,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,u=new qA(s.shape,a),[l,c]=_.Wap.getImageCenter(i,s.shape[1],s.shape[2]),h=[[l,c,Math.sin(r),Math.cos(r)]];return o.runWebGLProgram(u,[s],s.dtype,h)}},QA=DN({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),YA={kernelName:_.e07,backendName:"webgl",kernelFunc:QA},JA=DN({opSnippet:"return inversesqrt(x);",cpuKernelImpl:_S}),ZA={kernelName:_.bV0,backendName:"webgl",kernelFunc:JA};class eD{constructor(e,t,n,s,r,a,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const u=wI(r.length),l=wI(a.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let p="";1===s?p="i":2===s&&(p="i, coords[1]");const d=`getUpdates(${p})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides";this.userCode=`\n        ${u} strides = ${u}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${g};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(${m}, sum, float(found)));\n        }\n      `}}class tD{constructor(e,t,n,s,r,a,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const u=wI(r.length),l=wI(a.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let p="";1===s?p="i":2===s&&(p="i, coords[1]");const d=`getUpdates(${p})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${u} strides = ${u}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${h});\n              flattenedIndex += index.xz * ${g};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${y};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${d};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${m}, sum, found));\n        }\n      `}}const nD={kernelName:_.xQA,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=_.Wap.calculateShapes(a,r,i),p=[h/l,l];if(0===h)return n.makeTensorInfo(i,r.dtype);const d=WN({inputs:{x:r},backend:n,attrs:{shape:[u,o]}}),f=WN({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=(0,_.OBj)().getBool("WEBGL_PACK")?new tD(u,o,d.shape.length,f.shape.length,c,p):new eD(u,o,d.shape.length,f.shape.length,c,p);const y=n.runWebGLProgram(g,[f,d,m],f.dtype),b=WN({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class sD{constructor(e,t,n,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const r=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===(0,_.OBj)().getNumber("WEBGL_VERSION")?"while (left < right) {":r,i="left"===s?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const rD={kernelName:_.nr8,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:a}=t,{side:i}=s,o=new sD(r.shape[0],r.shape[1],a.shape[1],i),u=[[r.shape[1]]];return n.runWebGLProgram(o,[r,a],"int32",u)}};class aD{constructor(e,t,n){let s,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let s=0;s<t.length;s++)i.push(`${n[s]}`),s<e&&a.push(`${n[s]}`);s=a.join(),r=i.join()}const a=wI(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}const iD={kernelName:_.PhF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,i=new aD(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[s,r,a],(0,_.x8V)(r.dtype,a.dtype))}},oD=DN({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${_.Wap.SELU_SCALEALPHA};\n  float scale = ${_.Wap.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),uD={kernelName:_.oFR,backendName:"webgl",kernelFunc:oD},lD=DN({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:OS}),cD={kernelName:_.a5O,backendName:"webgl",kernelFunc:lD},hD=DN({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),pD={kernelName:_.i5y,backendName:"webgl",kernelFunc:hD},dD=DN({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${xN}\n  return result;\n`}),fD={kernelName:_.RQH,backendName:"webgl",kernelFunc:dD},mD=DN({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),gD={kernelName:_.wYB,backendName:"webgl",kernelFunc:mD},yD=DN({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),bD={kernelName:_.MRv,backendName:"webgl",kernelFunc:yD},xD={kernelName:_.TQc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;_.D5U.assert(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...i);for(let y=1+a.length;y<r.shape.length;++y)u.push([0,0]);const l=[],c=xA({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),h=_.Wap.getReshaped(c.shape,a,o,!1),p=_.Wap.getPermuted(h.length,a.length,!1),d=_.Wap.getReshapedPermuted(c.shape,a,o,!1),f=WN({inputs:{x:c},backend:n,attrs:{shape:h}}),m=YN({inputs:{x:f},backend:n,attrs:{perm:p}}),g=WN({inputs:{x:m},backend:n,attrs:{shape:d}});return l.push(c),l.push(f),l.push(m),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};const wD={kernelName:_.O3z,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(s.dataId),u=n.readSync(r.dataId),l=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,p,d,f,m]=zS(o,s.shape,s.dtype,u,r.dtype,l,c);return[n.makeTensorInfo(p,s.dtype,h),n.makeTensorInfo([p[0]],r.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}};const vD={kernelName:_.nhH,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(r.dataId)),o=n.readSync(s.dataId),u=Array.from(n.readSync(a.dataId)),[l,c,h]=LS(o,s.shape,s.dtype,i,u);return[n.makeTensorInfo(c,s.dtype,l),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};const kD={kernelName:_.w3H,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=n.readSync(s.dataId),o=n.readSync(r.dataId),u=n.readSync(a.dataId),[l,c]=US(i,s.shape,s.dtype,o,u,!0);return n.makeTensorInfo(c,s.dtype,l)}};const ID={kernelName:_.ZjV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=n.readSync(s.dataId),o=n.readSync(r.dataId),u=n.readSync(a.dataId),[l,c]=US(i,s.shape,s.dtype,o,u);return n.makeTensorInfo(c,s.dtype,l)}};const SD={kernelName:_.D2d,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:p}=_.Wap.calculateShapes(a,r,o);if("string"===a.dtype){const e=n.bufferSync(r),t=n.bufferSync(a),s=_.D5U.decodeString(n.readSync(i.dataId)[0]),d=FS(e,t,o,p,c,l,u,h,s,false);return n.makeTensorInfo(o,d.dtype,d.values)}const d=new eD(l,u,r.shape.length,a.shape.length,h,[p,1],false),f=n.runWebGLProgram(d,[a,r,i],a.dtype),m=WN({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}};const ND={kernelName:_.L8s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=_.D5U.parseAxisParam(i,r.shape)[0],u=_.Wap.prepareSplitSize(r,a,o),l=r.shape.length,c=new Array(l).fill(0),h=r.shape.slice();return u.map((e=>{const t=[...h];t[o]=e;const s=XT({inputs:{x:r},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,s}))}},TD="return sqrt(x);",CD=DN({opSnippet:TD,packedOpSnippet:TD,cpuKernelImpl:WS}),$D={kernelName:_.FKq,backendName:"webgl",kernelFunc:CD},ED=DN({opSnippet:"return x * x;"}),AD={kernelName:_.bK0,backendName:"webgl",kernelFunc:ED},DD="return (a - b) * (a - b);",RD=RN({opSnippet:DD,packedOpSnippet:DD}),_D={kernelName:_._tC,backendName:"webgl",kernelFunc:RD};const FD={kernelName:_.e0R,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");const a=n.readSync(r.dataId),i=_.Wap.fromUint8ToStringArray(a),o=PS(i,"string",s);return n.makeTensorInfo(r.shape,"string",o)}};const OD={kernelName:_.h8e,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:s}=e,r=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new iN(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}};class MD{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,r=wI(n.length),a=wI(n.length);let i="";if(1===s)i="coords * strides + begin";else{let e=0;i=n.map(((t,s)=>(e++,1===n.length?`coords * strides[${s}] + begin[${s}]`:`coords[${e-1}] * strides[${s}] + begin[${s}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${e});\n      ${r} strides = ${r}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const BD={kernelName:_.jQk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=s,{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=_.kuN.sliceInfo(r.shape,a,i,o,u,l,c,h,p);let v;if(m)v=WN({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){_.D5U.assert(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=_.kuN.computeOutShape(b,x,w),t=XT({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});v=WN({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=(0,_.f3b)(r.shape,r.dtype,e),s=VS(d,t,w,b);v=n.makeTensorInfo(f,r.dtype,s.values)}else{const e=new MD(b,w,d);v=n.runWebGLProgram(e,[r],r.dtype)}}const k=WN({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),k}};const zD={kernelName:_._JP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=s,{data:c,dataSplits:h}=t,p=n.readSync(c.dataId),d=n.readSync(h.dataId),[f,m]=GS(p,d,r,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};const LD={kernelName:_.s1s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),u=n.readSync(i.dataId)[0],[l,c,h]=HS(o,u,r),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};const UD={kernelName:_.XkS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=jS(i,r);return n.makeTensorInfo(a.shape,"int32",o)}},WD=DN({opSnippet:"return tan(x);"}),PD={kernelName:_.sEM,backendName:"webgl",kernelFunc:WD},VD=DN({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),GD={kernelName:_.MIZ,backendName:"webgl",kernelFunc:VD};const HD={kernelName:_.SIB,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{tensor:r,indices:a,updates:i}=t,{}=s,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=_.Wap.calculateShapes(i,a,r.shape),p=[h/l,l];if(0===h)return n.makeTensorInfo(r.shape,a.dtype);const d=WN({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),f=WN({inputs:{x:i},backend:n,attrs:{shape:[u,l]}}),m=WN({inputs:{x:r},backend:n,attrs:{shape:p}}),g=new eD(u,o,d.shape.length,f.shape.length,c,p,!1,!0),y=n.runWebGLProgram(g,[f,d,m],m.dtype),b=WN({inputs:{x:y},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}};class jD{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;const s=wI(this.rank),r=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<e.length;r++)s.push(`imod(${n[r]}, ${e[r]})`);return s.join()}(e);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function XD(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>_.D5U.decodeString(e))):e,s=(0,_.f3b)(r.shape,r.dtype,t),i=qS(s,a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new jD(r.shape,a);return n.runWebGLProgram(i,[r],r.dtype)}const qD={kernelName:_.n9L,backendName:"webgl",kernelFunc:XD};class KD{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class QD{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function YD(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function JD(e){let t=1;for(;t<e;)t*=2;return t}const ZD={kernelName:_.cWu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s,o=(0,_.OBj)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=(0,_.OBj)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=r.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([r])||c<o||a>u){const e=n.readSync(r.dataId),[t,s]=KS(e,l,r.dtype,a,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(s.shape,s.dtype,s.values)]}if(0===a)return l[l.length-1]=0,[n.makeTensorInfo(l,r.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[r,D$({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),p=null!==h&&h.isPacked,d=p?n.unpackTensor(r):r,f=_.D5U.sizeFromShape(l)/c,m=WN({inputs:{x:d},attrs:{shape:[f,c]},backend:n});p&&YD(n,d);const g=JD(a),y=JD(c);let b=null;const x=()=>null===b?[m,m]:[m,b],w=(e,t,s)=>{const r=x(),a=new KD(s),i=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(a,r,"int32",i),YD(n,o)};for(let N=1;N<g;N*=2){const e=2*N;for(let t=N;t>=1;t/=2)w(e,t,[f,y])}for(let N=y;N>g;N/=2){const e=x(),t=new QD([f,N/2]),s=[[c],[null===b?1:0],[g]],r=b;b=n.runWebGLProgram(t,e,"int32",s),YD(n,r);const a=g/2,i=2*a;for(let n=a;n>=1;n/=2)w(i,n,b.shape)}let v=b;b=XT({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,a]}}),YD(n,v);let k=Q$({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});YD(n,m);const I=l.slice(0,-1);I.push(a),v=b,b=WN({inputs:{x:b},attrs:{shape:I},backend:n}),YD(n,v);const S=k;return k=WN({inputs:{x:k},attrs:{shape:I},backend:n}),YD(n,S),[k,b]}};class eR{constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(s){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const tR={kernelName:_.wx7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=s,[c,h,p,d]=r.shape,[f,m]=null!=l?l:[h,p],g=new eR(h,p,i,o,u,[c,f,m,d]);return n.runWebGLProgram(g,[r,a],"float32")}};const nR={kernelName:_.kpP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;tI(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(a.dataId),{outputValues:o,outputShape:u,indices:l}=YS(i,r,a.shape,a.dtype);return[s.makeTensorInfo(u,a.dtype,o),s.makeTensorInfo([l.length],"int32",l)]}};const sR={kernelName:_.ToN,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r,o=i.shape.length,u=r.shape[a],l=new Array(o-1);let c=0;for(let m=0;m<o;m++)m!==a&&(l[c++]=i.shape[m]);const h=[],p=new Array(o).fill(0),d=i.shape.slice();d[a]=1;const f=new Array(u);for(let m=0;m<f.length;m++){p[a]=m;const e=XT({inputs:{x:i},backend:n,attrs:{begin:p,size:d}}),t=WN({inputs:{x:e},backend:n,attrs:{shape:l}});f[m]=t,h.push(e)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class rR{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,i=a*Math.ceil(r/n);this.outputShape=[s,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const aR={kernelName:_.Qvg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s,o=r.shape.length,u=[];let l=0;const c=_.Wap.getAxesPermutation([l],o);let h=r;null!=c&&(h=YN({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(h),l=_.Wap.getInnerMostAxes(1,o)[0]);const p=_.Wap.segment_util.computeOutShape(h.shape,l,i),d=_.D5U.sizeFromShape([h.shape[l]]),f=WN({inputs:{x:h},backend:n,attrs:{shape:[-1,d]}});u.push(f);const m=(0,_.z4k)(r.dtype),g=(e,t,s,r,a)=>{const i=e.shape[0],o=e.shape[1],l=_.Wap.segment_util.segOpComputeOptimalWindowSize(o,a),c=new rR({windowSize:l,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,s],r);if(u.push(h),h.shape[1]===a)return h;const p=CA({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),d=XD({inputs:{x:p},backend:n,attrs:{reps:[o/l]}});u.push(p),u.push(d);return g(h,t,d,r,a)},y=WN({inputs:{x:g(f,"unsortedSegmentSum",a,m,i)},backend:n,attrs:{shape:p}});let b=y;if(null!=c){u.push(y);const e=_.Wap.getUndoAxesPermutation(c);b=YN({inputs:{x:b},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},iR=[eT,nT,rT,iT,lT,pT,dT,fT,wT,vT,IT,NT,CT,ET,DT,FT,OT,zT,LT,UT,VT,KT,QT,YT,JT,sC,iC,lC,SN,pC,wC,$C,_C,OC,MC,BC,zC,UC,PC,GC,QC,YC,JC,e$,s$,i$,o$,l$,h$,p$,f$,m$,y$,x$,v$,I$,T$,E$,R$,F$,B$,L$,P$,H$,j$,q$,Y$,Z$,tE,kN,nE,yC,rE,iE,uE,CN,cE,pE,dE,mE,yE,xE,vE,IE,TE,$E,AE,RE,_E,FE,BE,zE,LE,UE,WE,VE,jE,qE,sA,UN,rA,iA,uA,cA,eC,pA,mA,gA,wA,kA,AN,IA,SA,NA,TA,$A,nC,YE,AA,RA,FA,PN,BA,LA,PA,GA,XA,KA,YA,ZA,nD,rD,iD,uD,cD,pD,fD,gD,qT,nA,bD,xD,wD,vD,kD,ID,SD,ND,$D,AD,_D,FD,OD,BD,zD,LD,UD,eA,QN,PD,GD,HD,qD,ZD,tR,JN,nR,sR,aR,fA];for(const uR of iR)(0,_.wCN)(uR);const oR={"tfjs-core":_.jTM,"tfjs-backend-cpu":Py,"tfjs-backend-webgl":mN,"tfjs-data":pm,"tfjs-layers":Ko,"tfjs-converter":ef,tfjs:"4.6.0"}},40177:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(N){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function s(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=s;var r={},a={};function i(e,t){var n,s,i;return t?(i=0<=(e>>>=0)&&e<256)&&(s=a[e])?s:(n=u(e,(0|e)<0?-1:0,!0),i&&(a[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(s=r[e])?s:(n=u(e,e<0?-1:0,!1),i&&(r[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=d)return k}else{if(e<=-f)return I;if(e+1>=f)return v}return e<0?o(-e,t).neg():u(e%p|0,e/p|0,t)}function u(e,t,s){return new n(e,t,s)}n.fromInt=i,n.fromNumber=o,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var s;if((s=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===s)return c(e.substring(1),t,n).neg();for(var r=o(l(n,8)),a=g,i=0;i<e.length;i+=8){var u=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+u),n);if(u<8){var p=o(l(n,u));a=a.mul(p).add(o(h))}else a=(a=a.mul(r)).add(o(h))}return a.unsigned=t,a}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var p=4294967296,d=p*p,f=d/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var x=i(1,!0);n.UONE=x;var w=i(-1);n.NEG_ONE=w;var v=u(-1,2147483647,!1);n.MAX_VALUE=v;var k=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=u(0,-2147483648,!1);n.MIN_VALUE=I;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),s=n.mul(t).sub(this);return n.toString(e)+s.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=o(l(e,6),this.unsigned),a=this,i="";;){var u=a.div(r),c=(a.sub(u.mul(r)).toInt()>>>0).toString(e);if((a=u).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1==(1&this.low)},S.isEven=function(){return 0==(1&this.low)},S.equals=function(e){return s(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(s(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(b)},S.neg=S.negate,S.add=function(e){s(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,a=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,c=0,p=0,d=0,f=0;return d+=(f+=a+(65535&e.low))>>>16,p+=(d+=r+l)>>>16,c+=(p+=n+o)>>>16,c+=t+i,u((d&=65535)<<16|(f&=65535),(c&=65535)<<16|(p&=65535),this.unsigned)},S.subtract=function(e){return s(e)||(e=h(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return g;if(s(e)||(e=h(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,a=this.low>>>16,i=65535&this.low,l=e.high>>>16,c=65535&e.high,p=e.low>>>16,d=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=i*d)>>>16,y+=(b+=a*d)>>>16,b&=65535,y+=(b+=i*p)>>>16,f+=(y+=r*d)>>>16,y&=65535,f+=(y+=a*p)>>>16,y&=65535,f+=(y+=i*c)>>>16,f+=n*d+r*p+a*c+i*l,u((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(s(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,r,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;a=y}else{if(this.eq(I))return e.eq(b)||e.eq(w)?I:e.eq(I)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:w:(r=this.sub(e.mul(n)),a=n.add(r.div(e)));if(e.eq(I))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=g}for(r=this;r.gte(e);){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:l(2,i-48),p=o(n),d=p.mul(e);d.isNegative()||d.gt(r);)d=(p=o(n-=c,this.unsigned)).mul(e);p.isZero()&&(p=b),a=a.add(p),r=r.sub(d)}return a},S.div=S.divide,S.modulo=function(e){return s(e)||(e=h(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return u(~this.low,~this.high,this.unsigned)},S.and=function(e){return s(e)||(e=h(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return s(e)||(e=h(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return s(e)||(e=h(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return s(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return s(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(s(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,s){return s?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},95552:(e,t,n)=>{var s=n(82248),r=n(63656),a=n(21689),i=n(68458),o=n(130),u=n(82690),l=n(26804);l.alea=s,l.xor128=r,l.xorwow=a,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},82248:function(e,t,n){var s;!function(e,r,a){function i(e){var t,n=this,s=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var s=.02519603282416938*(t+=e.charCodeAt(n));s-=t=s>>>0,t=(s*=t)>>>0,t+=4294967296*(s-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(e),n.s0<0&&(n.s0+=1),n.s1-=s(e),n.s1<0&&(n.s1+=1),n.s2-=s(e),n.s2<0&&(n.s2+=1),s=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),s=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.alea=u}(0,e=n.nmd(e),n.amdD)},82690:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,s=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-s|0,t.d=s<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var s=0;s<n.length+20;s++)t.b^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.tychei=u}(0,e=n.nmd(e),n.amdD)},63656:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.xor128=u}(0,e=n.nmd(e),n.amdD)},130:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.w,r=t.X,a=t.i;return t.w=s=s+1640531527|0,n=r[a+34&127],e=r[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[a]=n^e,t.i=a,n+(s^s>>>16)|0},function(e,t){var n,s,r,a,i,o=[],u=128;for(t===(0|t)?(s=t,t=null):(t+="\0",s=0,u=Math.max(u,t.length)),r=0,a=-32;a<u;++a)t&&(s^=t.charCodeAt((a+32)%t.length)),0===a&&(i=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,a>=0&&(i=i+1640531527|0,r=0==(n=o[127&a]^=s+i)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,a=512;a>0;--a)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;e.w=i,e.X=o,e.i=r}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},68458:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.x,r=t.i;return e=s[r],n=(e^=e>>>7)^e<<24,n^=(e=s[r+1&7])^e>>>10,n^=(e=s[r+3&7])^e>>>3,n^=(e=s[r+4&7])^e<<7,e=s[r+7&7],n^=(e^=e<<13)^e<<9,s[r]=n,t.i=r+1&7,n},function(e,t){var n,s=[];if(t===(0|t))s[0]=t;else for(t=""+t,n=0;n<t.length;++n)s[7&n]=s[7&n]<<15^t.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],e.x=s,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},21689:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),s==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},26804:function(e,t,n){var s;!function(r,a,i){var o,u=256,l=i.pow(u,6),c=i.pow(2,52),h=2*c,p=255;function d(e,t,n){var s=[],p=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(r.crypto||r.msCrypto).getRandomValues(e)),b(e)}catch(s){var t=r.navigator,n=t&&t.plugins;return[+new Date,r,n,r.screen,b(a)]}}():e,3),s),d=new f(s),x=function(){for(var e=d.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=d.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),a),(t.pass||n||function(e,t,n,s){return s&&(s.S&&m(s,d),e.state=function(){return m(d,{})}),n?(i.random=e,t):e})(x,p,"global"in t?t.global:this==i,t.state)}function f(e){var t,n=e.length,s=this,r=0,a=s.i=s.j=0,i=s.S=[];for(n||(e=[n++]);r<u;)i[r]=r++;for(r=0;r<u;r++)i[r]=i[a=p&a+e[r%n]+(t=i[r])],i[a]=t;(s.g=function(e){for(var t,n=0,r=s.i,a=s.j,i=s.S;e--;)t=i[r=p&r+1],n=n*u+i[p&(i[r]=i[a=p&a+t])+(i[a]=t)];return s.i=r,s.j=a,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,s=[],r=typeof e;if(t&&"object"==r)for(n in e)try{s.push(g(e[n],t-1))}catch(a){}return s.length?s:"string"==r?e:e+"\0"}function y(e,t){for(var n,s=e+"",r=0;r<s.length;)t[p&r]=p&(n^=19*t[p&r])+s.charCodeAt(r++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(i.random(),a),e.exports){e.exports=d;try{o=n(41402)}catch(x){}}else void 0===(s=function(){return d}.call(t,n,t,e))||(e.exports=s)}("undefined"!=typeof self?self:this,[],Math)}}]);