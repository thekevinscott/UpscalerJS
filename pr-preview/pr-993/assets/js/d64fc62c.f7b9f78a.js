"use strict";(self.webpackChunk_upscalerjs_docs=self.webpackChunk_upscalerjs_docs||[]).push([[9907],{54852:(e,t,a)=>{a.d(t,{Zo:()=>l,kt:()=>m});var n=a(49231);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var p=n.createContext({}),c=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},l=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(a),m=i,f=u["".concat(p,".").concat(m)]||u[m]||d[m]||r;return a?n.createElement(f,o(o({ref:t},l),{},{components:a})):n.createElement(f,o({ref:t},l))}));function m(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var c=2;c<r;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},70944:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var n=a(74011),i=(a(49231),a(54852));const r={category:"Browser",hide_table_of_contents:!0,sidebar_position:100,parent:"performance",code_embed:{params:"embed=1&file=index.js&hideExplorer=1",type:"stackblitz",url:"/examples/patch-sizes"}},o="Patch Sizes",s={unversionedId:"documentation/guides/browser/performance/patch-sizes",id:"documentation/guides/browser/performance/patch-sizes",title:"Patch Sizes",description:"View this page on the UpscalerJS website",source:"@site/docs/documentation/guides/browser/performance/patch-sizes.md",sourceDirName:"documentation/guides/browser/performance",slug:"/documentation/guides/browser/performance/patch-sizes",permalink:"/documentation/guides/browser/performance/patch-sizes",draft:!1,tags:[],version:"current",sidebarPosition:100,frontMatter:{category:"Browser",hide_table_of_contents:!0,sidebar_position:100,parent:"performance",code_embed:{params:"embed=1&file=index.js&hideExplorer=1",type:"stackblitz",url:"/examples/patch-sizes"}},sidebar:"documentationSidebar",previous:{title:"Working with Tensors",permalink:"/documentation/guides/browser/tensors"},next:{title:"Warming up models",permalink:"/documentation/guides/browser/performance/warmup"}},p={},c=[{value:"Background &amp; Motivation behind Patch Sizes",id:"background--motivation-behind-patch-sizes",level:2},{value:"Code",id:"code",level:2}],l={toc:c};function d(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"patch-sizes"},"Patch Sizes"),(0,i.kt)("a",{class:"docs-link",href:"https://upscalerjs.com/documentation/guides/browser/performance/patch-sizes"},"View this page on the UpscalerJS website"),(0,i.kt)("p",null,"Demonstrates the use of patch sizes with UpscalerJS."),(0,i.kt)("a",{href:"https://stackblitz.com/github/thekevinscott/upscalerjs/tree/main/examples/patch-sizes?file=index.js&title=UpscalerJS: Patch Sizes"},"Open in Stackblitz"),".",(0,i.kt)("h2",{id:"background--motivation-behind-patch-sizes"},"Background & Motivation behind Patch Sizes"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://js.tensorflow.org/api/latest/#tf.LayersModel.predict"},"Inference requests with Tensorflow.js models are synchronous and blocking"),", which makes achieving UI responsiveness difficult, particularly with larger images or on older hardware."),(0,i.kt)("p",null,"A solution is to slice the upcoming image into pieces and upscale each one individually."),(0,i.kt)("figure",null,(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Demonstration of splitting an image into patches",src:a(99190).Z,width:"760",height:"812"})),(0,i.kt)("figcaption",null,"Splitting an image into patches")),(0,i.kt)("p",null,"However, upscaling models have a tendency to perform poorly on edges, resulting in noticeable artifacting:"),(0,i.kt)("figure",null,(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Demonstration of artifacting along the sides of patch sizes",src:a(18540).Z,width:"713",height:"720"})),(0,i.kt)("figcaption",null,"Example of artifacting along the edges of patches")),(0,i.kt)("p",null,"A solution is to add a bit of ",(0,i.kt)("em",{parentName:"p"},"padding")," to each patch size, and then slice off the resulting padding when stitching our image back together. Here's what that looks like (note, we are explicitly ",(0,i.kt)("em",{parentName:"p"},"not")," removing the padding in this demonstration):"),(0,i.kt)("figure",null,(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Demonstration of using padding but not slicing it off",src:a(93826).Z,width:"442",height:"448"})),(0,i.kt)("figcaption",null,"Example of adding padding to the image (UpscalerJS slices off the excess padding)")),(0,i.kt)("p",null,"UpscalerJS provides an easy mechanism for working with patch sizes, no math required."),(0,i.kt)("h2",{id:"code"},"Code"),(0,i.kt)("p",null,"Specify our patch size and padding in the request to upscale:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"import Upscaler from 'upscaler'\nimport image from '/path/to/image.png'\nconst upscaler = new Upscaler()\nupscaler.upscale(image, {\n  patchSize: 32,\n  padding: 2,\n})\n")),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"padding")," of ",(0,i.kt)("inlineCode",{parentName:"p"},"2")," or greater is generally sufficient to avoid noticeable artifacting."),(0,i.kt)("p",null,"If we do not explicitly provide a ",(0,i.kt)("inlineCode",{parentName:"p"},"padding")," argument, UpscalerJS will emit a warning. Generally, a ",(0,i.kt)("inlineCode",{parentName:"p"},"patchSize")," argument should always be accompanied by a ",(0,i.kt)("inlineCode",{parentName:"p"},"padding")," to avoid the artifacting demonstrated above. To avoid this warning, pass an explicit argument of ",(0,i.kt)("inlineCode",{parentName:"p"},"0")," as the padding:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"upscaler.upscale(image, {\n  patchSize: 32,\n  padding: 0,\n})\n")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"You may notice, if you ",(0,i.kt)("a",{parentName:"p",href:"../usage/progress"},"inspect the patch sizes received from the progress example"),", that all image patches are the same size, even if the numbers don't match up precisely; for example, if you specify a patch size of 10 for a 12x12 image, you'll receive 4 10x10 patches."),(0,i.kt)("p",{parentName:"admonition"},"This is done purposefully to improve performance. ",(0,i.kt)("a",{parentName:"p",href:"../performance/warmup"},'Every new tensor size requires another "warm up" of the model on the GPU'),". Because of this, it's usually faster to process images that are consistent sizes than it is to process a novel image size (even if it's smaller)."),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("a",{parentName:"p",href:"https://thekevinscott.com/super-resolution-with-js/"},"You can read more about patch sizes and performance here"),".")))}d.isMDXComponent=!0},18540:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/artifacting-aa76803fadd055e81100eb0da1105dd4.gif"},93826:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/padding-ccf4f7da5fa8e843e75f34a5ea8f7171.gif"},99190:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/splitting-image-894d0c592ed02668fd1f0a003baad096.gif"}}]);