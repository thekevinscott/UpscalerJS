name: 'Tests'
on: [push]

env:
  TF_CPP_MIN_LOG_LEVEL: 2

jobs:
  lint:
    name: 'Lint'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v2

      - name: 'Setup PNPM with Node ${{ matrix.node-version }}'
        uses: ./.github/actions/setup-pnpm
        with:
          node-version: ${{ matrix.node-version }}

      - name: 'Lint'
        run: 'pnpm lint'

  build:
    name: 'Build'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v2

      - name: 'Setup PNPM with Node ${{ matrix.node-version }}'
        uses: ./.github/actions/setup-pnpm
        with:
          node-version: ${{ matrix.node-version }}

      - name: 'Build Upscaler dependencies'
        run: 'pnpm --filter="upscaler" build:dependencies'

      - name: 'Build'
        run: 'pnpm --filter="upscaler" build:only'

      - name: 'Validate'
        run: 'pnpm --filter="upscaler" validate:build'

  unit-browser-vite:
    name: 'Unit / Browser / Vite'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v2

      - name: 'Setup PNPM with Node ${{ matrix.node-version }}'
        uses: ./.github/actions/setup-pnpm
        with:
          node-version: ${{ matrix.node-version }}

      - name: 'Unit Tests / Vite'
        working-directory: ./packages/upscalerjs
        run: pnpm test:unit:browser:vite

      - name: 'Upload Unit Browser Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: artifacts-test-unit-browser-vite
          path: |
            ./packages/upscalerjs/coverage/coverage-final.json

  unit-browser-playwright:
    name: 'Unit / Browser / Playwright'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v2

      - name: 'Setup PNPM with Node ${{ matrix.node-version }}'
        uses: ./.github/actions/setup-pnpm
        with:
          node-version: ${{ matrix.node-version }}

      - name: 'Unit Tests / Playwright'
        working-directory: ./packages/upscalerjs
        run: pnpm test:unit:browser:playwright

      - name: 'Upload Unit Browser Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: artifacts-test-unit-browser-playwright
          path: |
            ./packages/upscalerjs/.nyc_output/coverage-pw.json


  unit-node:
    name: 'Unit / Node'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v2

      - name: 'Setup PNPM with Node ${{ matrix.node-version }}'
        uses: ./.github/actions/setup-pnpm
        with:
          node-version: ${{ matrix.node-version }}

      - name: 'Unit Tests'
        working-directory: ./packages/upscalerjs
        run: pnpm test:unit:node

      - name: 'Upload Unit Node Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: artifacts-test-unit-node
          path: ./packages/upscalerjs/coverage/coverage-final.json

  core-unit:
    name: 'Core / Unit'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v2

      - name: 'Setup PNPM with Node ${{ matrix.node-version }}'
        uses: ./.github/actions/setup-pnpm
        with:
          node-version: ${{ matrix.node-version }}

      - name: 'Unit Tests'
        working-directory: ./packages/core
        run: pnpm test

  upload-to-codecov:
    name: 'Upload to CodeCov'
    runs-on: ubuntu-latest
    needs: [ unit-node, unit-browser-vite, unit-browser-playwright ]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: 'Codecov'
        uses: codecov/codecov-action@v3
        with:
          verbose: true

  integration-browser-browserstack:
    name: 'Integration / Browser / Browserstack'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]
    steps:
      - name: 'BrowserStack Env Setup'  # Invokes the setup-env action
        uses: browserstack/github-actions/setup-env@master
        with:
          username: ${{ secrets.BROWSERSTACK_USERNAME }}
          access-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
      
      - name: 'Checkout repository'
        uses: actions/checkout@v2

      - name: 'Setup PNPM with Node ${{ matrix.node-version }}'
        uses: ./.github/actions/setup-pnpm
        with:
          node-version: ${{ matrix.node-version }}

      - name: 'Setup DVC & Pull Models'
        uses: ./.github/actions/setup-dvc
        with:
          gdrive_credentials_data: ${{ secrets.GDRIVE_CREDENTIALS_DATA }}          

      - name: 'Build Upscaler'
        run: pnpm test:integration:browserstack --ci --verbose --skipTest --skipModelBuild --skipBundle

      - name: 'Build Models'
        run: pnpm test:integration:browserstack --ci --verbose --skipTest --skipUpscalerBuild --skipBundle

      - name: 'Bundle'
        run: pnpm test:integration:browserstack --ci --verbose --skipTest --skipUpscalerBuild --skipModelBuild

      - name: 'Integration Tests'
        run: pnpm test:integration:browserstack --ci --verbose --skipUpscalerBuild --skipModelBuild --skipBundle
        env:
          NODE_OPTIONS: --max_old_space_size=8192

  integration-browser-local:
    name: 'Integration / Browser / Local'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]
    steps:
      - name: 'BrowserStack Env Setup'  # Invokes the setup-env action
        uses: browserstack/github-actions/setup-env@master
        with:
          username: ${{ secrets.BROWSERSTACK_USERNAME }}
          access-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}

      - name: 'Checkout repository'
        uses: actions/checkout@v2

      - name: 'Setup PNPM with Node ${{ matrix.node-version }}'
        uses: ./.github/actions/setup-pnpm
        with:
          node-version: ${{ matrix.node-version }}

      - name: 'Setup DVC & Pull Models'
        uses: ./.github/actions/setup-dvc
        with:
          gdrive_credentials_data: ${{ secrets.GDRIVE_CREDENTIALS_DATA }}          

      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      #   with:
      #     detached: true

      - name: 'Build Upscaler'
        run: pnpm test:integration:browser --ci --verbose --skipTest --skipModelBuild --skipBundle

      - name: 'Build Models'
        run: pnpm test:integration:browser --ci --verbose --skipTest --skipUpscalerBuild --skipBundle

      - name: 'Bundle'
        run: pnpm test:integration:browser --ci --verbose --skipTest --skipUpscalerBuild --skipModelBuild

      - name: 'Integration Tests'
        run: pnpm test:integration:browser --ci --verbose --skipUpscalerBuild --skipModelBuild --skipBundle
        env:
          NODE_OPTIONS: --max_old_space_size=8192

  integration-node-local-16:
    name: 'Integration / Node / Local / v16'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]
    steps:
      - name: Delete unnecessary tools folder
        run: rm -rf /opt/hostedtoolcache

      - name: 'Checkout repository'
        uses: actions/checkout@v2

      - name: Run integration tests
        uses: docker://upscalerjs/actions-image:latest
        with: 
          entrypoint: /bin/bash
          args: pnpm install && dvc pull && pnpm test:integration:node --ci --verbose
          gdrive_credentials_data: ${{ secrets.GDRIVE_CREDENTIALS_DATA }}          

  models-browser:
    name: 'Models / Browser'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v2

      - name: 'Setup PNPM with Node ${{ matrix.node-version }}'
        uses: ./.github/actions/setup-pnpm
        with:
          node-version: ${{ matrix.node-version }}

      - name: 'Setup DVC & Pull Models'
        uses: ./.github/actions/setup-dvc
        with:
          gdrive_credentials_data: ${{ secrets.GDRIVE_CREDENTIALS_DATA }}          

      - name: 'Build Upscaler'
        run: pnpm test:model --ci --verbose --skipTest --skipModelBuild --skipBundle

      - name: 'Build Models'
        run: pnpm test:model --ci --verbose --skipTest --skipUpscalerBuild --skipBundle

      - name: 'Bundle'
        run: pnpm test:model --ci --verbose --skipTest --skipUpscalerBuild --skipModelBuild

      - name: 'Integration Tests'
        run: pnpm test:model --platform browser --ci --verbose --skipUpscalerBuild --skipModelBuild --skipBundle

  models-node:
    name: 'Models / Node'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v2

      - name: 'Setup PNPM with Node ${{ matrix.node-version }}'
        uses: ./.github/actions/setup-pnpm
        with:
          node-version: ${{ matrix.node-version }}

      - name: 'Setup DVC & Pull Models'
        uses: ./.github/actions/setup-dvc
        with:
          gdrive_credentials_data: ${{ secrets.GDRIVE_CREDENTIALS_DATA }}          

      - name: 'Build Upscaler'
        run: pnpm test:model --ci --verbose --skipTest --skipModelBuild --skipBundle

      - name: 'Build Models'
        run: pnpm test:model --ci --verbose --skipTest --skipUpscalerBuild --skipBundle

      - name: 'Bundle'
        run: pnpm test:model --ci --verbose --skipTest --skipUpscalerBuild --skipModelBuild

      - name: 'Integration Tests'
        run: pnpm test:model --platform node --ci --verbose --skipUpscalerBuild --skipModelBuild --skipBundle

  memory-leaks:
    name: 'Memory Leaks'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v2

      - name: 'Setup PNPM with Node ${{ matrix.node-version }}'
        uses: ./.github/actions/setup-pnpm
        with:
          node-version: ${{ matrix.node-version }}

      - name: 'Setup DVC & Pull Models'
        uses: ./.github/actions/setup-dvc
        with:
          gdrive_credentials_data: ${{ secrets.GDRIVE_CREDENTIALS_DATA }}          

      - name: 'Build Upscaler'
        run: pnpm test:memory-leaks --ci --verbose --skipTest --skipModelBuild --skipBundle

      - name: 'Build Models'
        run: pnpm test:memory-leaks --ci --verbose --skipTest --skipUpscalerBuild --skipBundle

      - name: 'Bundle'
        run: pnpm test:memory-leaks --ci --verbose --skipTest --skipUpscalerBuild --skipModelBuild

      - name: 'Memory Leak Tests'
        run: pnpm test:memory-leaks --ci --verbose --skipUpscalerBuild --skipModelBuild --skipBundle

  build-docs:
    name: 'Build Documentation'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v2

      - name: 'Setup PNPM with Node ${{ matrix.node-version }}'
        uses: ./.github/actions/setup-pnpm
        with:
          node-version: ${{ matrix.node-version }}

      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      #   with:
      #     detached: true

      - name: 'Setup DVC & Pull Models'
        uses: ./.github/actions/setup-dvc
        with:
          gdrive_credentials_data: ${{ secrets.GDRIVE_CREDENTIALS_DATA }}          

      - name: 'Install dependencies'
        run: pnpm install

      - name: 'Build'
        working-directory: ./docs
        run: pnpm build
