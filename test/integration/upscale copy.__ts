const webdriver = require('selenium-webdriver');
const { bundle, startServer } = require('../lib/webpack-bundler/server')
const checkImage = require('../lib/utils/checkImage');

const DEFAULT_CAPABILITIES = {
  'build': process.env.BROWSERSTACK_BUILD_NAME,
  'project': process.env.BROWSERSTACK_PROJECT_NAME,
  'browserstack.localIdentifier': process.env.BROWSERSTACK_LOCAL_IDENTIFIER,
}

const username = process.env.BROWSERSTACK_USERNAME;
const accessKey = process.env.BROWSERSTACK_ACCESS_KEY;
const server = `http://${username}:${accessKey}@hub-cloud.browserstack.com/wd/hub`

describe.each([
  {
    'os': 'windows',
    'os_version': '10',
    'browserName': 'firefox',
    'browser_version' : 'latest',
  },
  // {
  //   'os': 'windows',
  //   'os_version': '10',
  //   'browserName': 'chrome',
  //   'browser_version' : 'latest',
  // },
])("Upscale", (capabilities) => {
  let driver;
  let server;

  const PORT = 8099;

  beforeAll(async () => {
    driver = new webdriver.Builder()
      .usingServer(server)
      .withCapabilities({
        ...DEFAULT_CAPABILITIES,
        ...capabilities,
      })
      .build();
    try {
      await bundle();
      server = await startServer(PORT);
    } catch (err) {
      console.error(err);
      throw err;
    }
  }, 60000)

  afterAll(async (done) => {
    await driver.quit();
    if (server) {
      server.close(done);
    } else {
      console.warn('No server found')
    }
  }, 60000);

  it(`tests a sample | ${JSON.stringify(capabilities)}`, async () => {
    await driver.get("http://www.google.com");
    const inputField = await driver.findElement(webdriver.By.name("q"));
    await inputField.sendKeys("BrowserStack", webdriver.Key.ENTER); // this submits on desktop browsers
    try {
      await driver.wait(webdriver.until.titleMatches(/BrowserStack/i), 5000);
    } catch (e) {
      await inputField.submit(); // this helps in mobile browsers
    }
    await driver.wait(webdriver.until.titleMatches(/BrowserStack/i), 5000);
    const title = await driver.getTitle();
    expect(title).toEqual('BrowserStack - Google Search');
  }, 60000);

  // it("upscales an imported local image path", async () => {
  //   const page = await context.newPage();
  //   await page.goto(`http://localhost:${PORT}`);
  //   page.on('console', console.log);
  //   const upscaledSrc = await page.evaluate(async ([]) => {
  //     return await window.upscaler.upscale(window.flower);
  //   }, []);
  //   checkImage(upscaledSrc, "upscaled-4x.png", 'diff.png');
  // });
});
