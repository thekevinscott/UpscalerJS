{
  "name": "@upscalerjs/pixel-upsampler",
  "version": "1.0.0-beta.12",
  "description": "Pixel Upsampler Model for UpscalerJS",
  "author": "Kevin Scott",
  "license": "MIT",
  "exports": {
    ".": {
      "require": "./dist/cjs/models/pixel-upsampler/src/cjs.js",
      "import": "./dist/esm/models/pixel-upsampler/src/index.js"
    },
    "./x2": {
      "require": "./dist/cjs/models/pixel-upsampler/src/x2/cjs.js",
      "import": "./dist/esm/models/pixel-upsampler/src/x2/index.js"
    },
    "./x3": {
      "require": "./dist/cjs/models/pixel-upsampler/src/x3/cjs.js",
      "import": "./dist/esm/models/pixel-upsampler/src/x3/index.js"
    },
    "./x4": {
      "require": "./dist/cjs/models/pixel-upsampler/src/x4/cjs.js",
      "import": "./dist/esm/models/pixel-upsampler/src/x4/index.js"
    }
  },
  "scripts": {
    "lint": "wireit",
    "prepublishOnly": "wireit",
    "validate:build": "wireit",
    "build": "wireit",
    "scaffold": "wireit",
    "build:cjs": "wireit",
    "build:esm": "wireit",
    "build:umd": "wireit",
    "build:umd:tsc": "wireit",
    "build:umd:index": "wireit",
    "build:umd:rollup:index": "wireit",
    "build:umd:uglify:index": "wireit",
    "build:umd:x2": "wireit",
    "build:umd:rollup:x2": "wireit",
    "build:umd:uglify:x2": "wireit",
    "build:umd:x3": "wireit",
    "build:umd:rollup:x3": "wireit",
    "build:umd:uglify:x3": "wireit",
    "build:umd:x4": "wireit",
    "build:umd:rollup:x4": "wireit",
    "build:umd:uglify:x4": "wireit"
  },
  "files": [
    "assets/**/*",
    "license",
    "models/**/*",
    "dist/**/*"
  ],
  "peerDependencies": {
    "@tensorflow/tfjs": "~4.11.0"
  },
  "devDependencies": {
    "@tensorflow/tfjs": "~4.11.0",
    "@tensorflow/tfjs-node": "~4.11.0",
    "@tensorflow/tfjs-node-gpu": "~4.11.0",
    "seedrandom": "3.0.5",
    "wireit": "^0.14.0"
  },
  "wireit": {
    "lint": {
      "command": "eslint -c ../.eslintrc.js src --ext .ts",
      "dependencies": [
        "scaffold"
      ]
    },
    "prepublishOnly": {
      "command": "pnpm lint && pnpm build && pnpm validate:build"
    },
    "validate:build": {
      "command": "ts-node ../../scripts/package-scripts/validate-build.ts models/pixel-upsampler"
    },
    "build": {
      "command": "pnpm build:cjs && pnpm build:esm && pnpm build:umd",
      "files": [
        "src/**/*.ts",
        "!src/**/*.test.ts",
        "!src/**/*.generated.ts",
        "package.json",
        "tsconfig.cjs.json",
        "tsconfig.esm.json",
        "tsconfig.umd.json",
        "tsconfig.json",
        "../tsconfig.cjs.json",
        "../tsconfig.esm.json",
        "../tsconfig.umd.json",
        "../tsconfig.json"
      ],
      "output": [
        "dist/**"
      ]
    },
    "scaffold": {
      "command": "node -e 'const fs = require(\"fs\"); const {name, version} = require(\"./package.json\"); fs.writeFileSync(\"./src/constants.generated.ts\", `export const NAME = \"${name}\";\\nexport const VERSION=\"${version}\"`, \"utf-8\");'",
      "files": [
        "package.json"
      ],
      "output": [
        "./src/constants.generated.ts"
      ]
    },
    "build:cjs": {
      "command": "tsc -p ./tsconfig.cjs.json --outDir ./dist/cjs --baseUrl ./src",
      "dependencies": [
        "scaffold"
      ],
      "files": [
        "src/**/*.ts",
        "!src/**/*.test.ts",
        "!src/**/*.generated.ts",
        "package.json",
        "tsconfig.cjs.json",
        "tsconfig.json",
        "../tsconfig.cjs.json",
        "../tsconfig.json"
      ],
      "output": [
        "dist/cjs/**"
      ]
    },
    "build:esm": {
      "command": "tsc -p ./tsconfig.esm.json --outDir ./dist/esm --baseUrl ./src",
      "dependencies": [
        "scaffold"
      ],
      "files": [
        "src/**/*.ts",
        "!src/**/*.test.ts",
        "!src/**/*.generated.ts",
        "package.json",
        "tsconfig.esm.json",
        "tsconfig.json",
        "../tsconfig.esm.json",
        "../tsconfig.json"
      ],
      "output": [
        "dist/esm/**"
      ]
    },
    "build:umd": {
      "command": "pnpm run build:umd:tsc && pnpm run build:umd:index && pnpm run build:umd:x2 && pnpm run build:umd:x3 && pnpm run build:umd:x4 && rimraf ./dist/umd-tmp",
      "dependencies": [
        "scaffold"
      ],
      "files": [
        "src/**/*.ts",
        "!src/**/*.test.ts",
        "!src/**/*.generated.ts",
        "package.json",
        "tsconfig.umd.json",
        "tsconfig.json",
        "../tsconfig.umd.json",
        "../tsconfig.json"
      ],
      "output": [
        "dist/umd/**"
      ]
    },
    "build:umd:tsc": {
      "command": "tsc -p ./tsconfig.umd.json --outDir ./dist/umd-tmp"
    },
    "build:umd:index": {
      "command": "pnpm build:umd:rollup:index && pnpm build:umd:uglify:index"
    },
    "build:umd:rollup:index": {
      "command": "rollup -c ../rollup.config.cjs --input ./dist/umd-tmp/models/pixel-upsampler/src/index.js --file ./dist/umd.js --name PixelUpsampler --format umd"
    },
    "build:umd:uglify:index": {
      "command": "uglifyjs ./dist/umd.js --output ./dist/umd.min.js --compress --mangle --source-map"
    },
    "build:umd:x2": {
      "command": "pnpm build:umd:rollup:x2 && pnpm build:umd:uglify:x2"
    },
    "build:umd:rollup:x2": {
      "command": "rollup -c ../rollup.config.cjs --input ./dist/umd-tmp/models/pixel-upsampler/src/x2/index.js --file ./dist/umd/x2.js --name PixelUpsampler2x --format umd"
    },
    "build:umd:uglify:x2": {
      "command": "uglifyjs ./dist/umd/x2.js --output ./dist/umd/x2.min.js --compress --mangle --source-map"
    },
    "build:umd:x3": {
      "command": "pnpm build:umd:rollup:x3 && pnpm build:umd:uglify:x3"
    },
    "build:umd:rollup:x3": {
      "command": "rollup -c ../rollup.config.cjs --input ./dist/umd-tmp/models/pixel-upsampler/src/x3/index.js --file ./dist/umd/x3.js --name PixelUpsampler3x --format umd"
    },
    "build:umd:uglify:x3": {
      "command": "uglifyjs ./dist/umd/x3.js --output ./dist/umd/x3.min.js --compress --mangle --source-map"
    },
    "build:umd:x4": {
      "command": "pnpm build:umd:rollup:x4 && pnpm build:umd:uglify:x4"
    },
    "build:umd:rollup:x4": {
      "command": "rollup -c ../rollup.config.cjs --input ./dist/umd-tmp/models/pixel-upsampler/src/x4/index.js --file ./dist/umd/x4.js --name PixelUpsampler4x --format umd"
    },
    "build:umd:uglify:x4": {
      "command": "uglifyjs ./dist/umd/x4.js --output ./dist/umd/x4.min.js --compress --mangle --source-map"
    }
  }
}
